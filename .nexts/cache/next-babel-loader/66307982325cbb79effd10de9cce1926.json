{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  text-transform: lowercase;\\n  font-weight: 900;\\n  font-size: 3rem;\\n  display: inline-block;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\nvar CounterContainer = styled.div(_templateObject());\nexport default function MainCounter(_ref) {\n  var game_status = _ref.game_status,\n      endGame = _ref.endGame;\n\n  var _useState = useState(30),\n      counter = _useState[0],\n      setCounter = _useState[1];\n\n  var _useState2 = useState(false),\n      didMount = _useState2[0],\n      setDidMount = _useState2[1];\n\n  useEffect(function () {\n    !game_status.isStarted && setCounter(30);\n    var startCounting = didMount && game_status.isStarted && !game_status.isLoading && setInterval(function () {\n      setCounter(function (counter) {\n        return counter - 0.1;\n      });\n    }, 100);\n    return function () {\n      return clearInterval(startCounting);\n    };\n  }, [game_status]);\n  useEffect(function () {\n    if (counter <= 0) {\n      return function () {\n        return endGame();\n      };\n    }\n  }, [counter]);\n  useEffect(function () {\n    setDidMount(true);\n  }, []);\n  return /*#__PURE__*/_jsx(CounterContainer, {\n    children: game_status.isStarted && counter > 0 && counter.toFixed(3)\n  });\n} // export default function MainCounter({is_game_started, is_game_loading}) {\n//   const [counter, setCounter] = useState(100)\n//   const [didMount, setDidMount] = useState(false)\n//   var startCounting\n//   useEffect(() => {\n//     startCounting = (didMount && is_game_started && !is_game_loading) && setInterval(() => {\n//         setCounter(counter => counter - 0.1)\n//       }, 100)\n//     return () => clearInterval(startCounting)\n//   }, [is_game_loading])                                          // merge reducer into obj\n//   useEffect(() => {\n//      if(!is_game_started) {\n//        console.log(startCounting)\n//       return () => clearInterval(startCounting)\n//      } \n//   }, [is_game_started])\n//   useEffect(() => {\n//     setDidMount(true)\n//   }, [])\n//   return (\n//     <CounterContainer>\n//       {counter.toFixed(3)}\n//     </CounterContainer>\n//   )\n// }","map":null,"metadata":{},"sourceType":"module"}