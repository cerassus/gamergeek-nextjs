{"ast":null,"code":"import { connect } from \"react-redux\";\nimport GameNavigatorTop from \"../components/main/challenge/containers/GameNavigatorTop\";\nimport { pushNewAnswer as _pushNewAnswer, setHintCounter as _setHintCounter, startLoading as _startLoading, loadNewQuestion as _loadNewQuestion, showPopup as _showPopup, showHint as _showHint, endGame as _endGame } from \"../redux/actions\";\n\nvar mapState = function mapState(state) {\n  return {\n    game_is_started: state.game_status.isStarted,\n    game_is_loading: state.game_status.isLoading,\n    random_game: state.random_game,\n    hintCounter: state.hint_counter\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    showPopup: function showPopup(popup) {\n      return dispatch(_showPopup(popup));\n    },\n    endGame: function endGame() {\n      return dispatch(_endGame());\n    },\n    loadNewQuestion: function loadNewQuestion(db) {\n      return dispatch(_loadNewQuestion(db));\n    },\n    startLoading: function startLoading() {\n      return dispatch(_startLoading());\n    },\n    showHint: function showHint(hint) {\n      return dispatch(_showHint(hint));\n    },\n    setHintCounter: function setHintCounter() {\n      return dispatch(_setHintCounter());\n    },\n    pushNewAnswer: function pushNewAnswer(answer) {\n      return dispatch(_pushNewAnswer(answer));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(GameNavigatorTop);","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/redux_containers/GameNavigatorTop.js"],"names":["connect","GameNavigatorTop","pushNewAnswer","setHintCounter","startLoading","loadNewQuestion","showPopup","showHint","endGame","mapState","state","game_is_started","game_status","isStarted","game_is_loading","isLoading","random_game","hintCounter","hint_counter","mapDispatch","dispatch","popup","db","hint","answer"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,gBAAP,MAA6B,0DAA7B;AACA,SAASC,aAAa,IAAbA,cAAT,EAAwBC,cAAc,IAAdA,eAAxB,EAAwCC,YAAY,IAAZA,aAAxC,EAAsDC,eAAe,IAAfA,gBAAtD,EAAuEC,SAAS,IAATA,UAAvE,EAAkFC,QAAQ,IAARA,SAAlF,EAA4FC,OAAO,IAAPA,QAA5F,QAA2G,kBAA3G;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SAAK;AACzBC,IAAAA,eAAe,EAAED,KAAK,CAACE,WAAN,CAAkBC,SADV;AAEzBC,IAAAA,eAAe,EAAEJ,KAAK,CAACE,WAAN,CAAkBG,SAFV;AAGzBC,IAAAA,WAAW,EAAEN,KAAK,CAACM,WAHM;AAIzBC,IAAAA,WAAW,EAAEP,KAAK,CAACQ;AAJM,GAAL;AAAA,CAAtB;;AAOA,IAAMC,WAAW,GAAI,SAAfA,WAAe,CAAAC,QAAQ;AAAA,SAAK;AAChCd,IAAAA,SAAS,EAAE,mBAACe,KAAD;AAAA,aAAWD,QAAQ,CAACd,UAAS,CAACe,KAAD,CAAV,CAAnB;AAAA,KADqB;AAEhCb,IAAAA,OAAO,EAAE;AAAA,aAAMY,QAAQ,CAACZ,QAAO,EAAR,CAAd;AAAA,KAFuB;AAGhCH,IAAAA,eAAe,EAAE,yBAACiB,EAAD;AAAA,aAAQF,QAAQ,CAACf,gBAAe,CAACiB,EAAD,CAAhB,CAAhB;AAAA,KAHe;AAIhClB,IAAAA,YAAY,EAAE;AAAA,aAAMgB,QAAQ,CAAChB,aAAY,EAAb,CAAd;AAAA,KAJkB;AAKhCG,IAAAA,QAAQ,EAAE,kBAACgB,IAAD;AAAA,aAAUH,QAAQ,CAACb,SAAQ,CAACgB,IAAD,CAAT,CAAlB;AAAA,KALsB;AAMhCpB,IAAAA,cAAc,EAAE;AAAA,aAAMiB,QAAQ,CAACjB,eAAc,EAAf,CAAd;AAAA,KANgB;AAOhCD,IAAAA,aAAa,EAAE,uBAACsB,MAAD;AAAA,aAAYJ,QAAQ,CAAClB,cAAa,CAACsB,MAAD,CAAd,CAApB;AAAA;AAPiB,GAAL;AAAA,CAA7B;;AAUA,eAAexB,OAAO,CAACS,QAAD,EAAWU,WAAX,CAAP,CAA+BlB,gBAA/B,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport GameNavigatorTop from \"../components/main/challenge/containers/GameNavigatorTop\"\nimport { pushNewAnswer, setHintCounter, startLoading, loadNewQuestion, showPopup, showHint, endGame } from \"../redux/actions\"\n\nconst mapState = state => ({\n  game_is_started: state.game_status.isStarted,\n  game_is_loading: state.game_status.isLoading,\n  random_game: state.random_game,\n  hintCounter: state.hint_counter,\n})\n\nconst mapDispatch  = dispatch => ({\n  showPopup: (popup) => dispatch(showPopup(popup)),\n  endGame: () => dispatch(endGame()),\n  loadNewQuestion: (db) => dispatch(loadNewQuestion(db)),\n  startLoading: () => dispatch(startLoading()),\n  showHint: (hint) => dispatch(showHint(hint)),\n  setHintCounter: () => dispatch(setHintCounter()),\n  pushNewAnswer: (answer) => dispatch(pushNewAnswer(answer)),\n})\n\nexport default connect(mapState, mapDispatch)(GameNavigatorTop);\n"]},"metadata":{},"sourceType":"module"}