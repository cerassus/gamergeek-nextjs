{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\nconst CounterContainer = styled.div`\n  text-transform: lowercase;\n  font-weight: 900;\n  font-size: 3rem;\n  display: inline-block;\n  ${props => props.counter < 10 && `color: var(--red)`};\n  max-width: 9ch;\n`;\nexport default function MainCounter({\n  game_status,\n  endGame\n}) {\n  const {\n    0: counter,\n    1: setCounter\n  } = useState(60 .toPrecision(5));\n  const {\n    0: didMount,\n    1: setDidMount\n  } = useState(false);\n  useEffect(() => {\n    !game_status.isStarted && setCounter(60 .toPrecision(5));\n    const startCounting = didMount && game_status.isStarted && !game_status.isLoading && setInterval(() => {\n      setCounter(counter => counter >= 10 ? (counter - 0.1).toPrecision(5) : counter >= 1 ? (counter - 0.1).toPrecision(4) : (counter - 0.1).toPrecision(3));\n    }, 100);\n    return () => clearInterval(startCounting);\n  }, [game_status]);\n  useEffect(() => counter <= 0 && endGame(), [counter]);\n  useEffect(() => {\n    setDidMount(true);\n  }, []);\n  return /*#__PURE__*/_jsx(CounterContainer, {\n    counter: counter,\n    children: game_status.isStarted && counter > 0 && (counter >= 10 ? `00:${counter}` : `00:0${counter}`)\n  });\n}","map":null,"metadata":{},"sourceType":"module"}