{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/Table.js\",\n    _s = $RefreshSig$();\n\nimport Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\nimport { useState, useEffect, Fragment } from \"react\";\nimport { pickRandomGame } from \"../../../global/fetch\";\nimport { game_database } from \"../../../global/const\";\nimport moment from 'moment';\nimport * as SC from \"../../styled-components/Popup\";\nvar game_difficulty = [\"easy\", \"medium\", \"hard\"];\nexport default function TableComponent(_ref) {\n  _s();\n\n  var _this = this;\n\n  var random_game = _ref.random_game,\n      startGame = _ref.startGame,\n      startLoading = _ref.startLoading,\n      endGame = _ref.endGame,\n      showRandomGame = _ref.showRandomGame,\n      pushNewAnswer = _ref.pushNewAnswer,\n      showHint = _ref.showHint,\n      hideHint = _ref.hideHint,\n      game_status = _ref.game_status;\n\n  var _useState = useState(false),\n      answerTimeStart = _useState[0],\n      setAnswerTimeStart = _useState[1];\n\n  var _useState2 = useState(0),\n      hintCounter = _useState2[0],\n      setHintCounter = _useState2[1];\n\n  var _useState3 = useState(false),\n      hints = _useState3[0],\n      setHints = _useState3[1];\n\n  var _useState4 = useState(false),\n      difficulty = _useState4[0],\n      setDifficulty = _useState4[1];\n\n  var _useState5 = useState(true),\n      usernamePanel = _useState5[0],\n      showUsernamePanel = _useState5[1];\n\n  var _useState6 = useState(false),\n      warning = _useState6[0],\n      setWarning = _useState6[1];\n\n  var _useState7 = useState(false),\n      popup = _useState7[0],\n      switchPopup = _useState7[1];\n\n  var handleTyping = function handleTyping(e) {\n    0 < e.target.value.length && e.target.value.length < 3 ? setWarning(true) : setWarning(false); // check if username doesn't match one of usernames in MongoDatabase\n  };\n\n  var startNewGame = function startNewGame() {\n    switchPopup(true);\n\n    if (difficulty) {\n      startGame(difficulty);\n      loadNewQuestion();\n    }\n  };\n\n  var loadNewQuestion = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              startLoading();\n              hideHint();\n              setHintCounter(0);\n              _context.t0 = showRandomGame;\n              _context.next = 6;\n              return pickRandomGame(game_database);\n\n            case 6:\n              _context.t1 = _context.sent;\n              (0, _context.t0)(_context.t1);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadNewQuestion() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var quitGame = function quitGame() {\n    hideHint();\n    setHintCounter(0);\n    showUsernamePanel(true);\n    setDifficulty(false);\n    endGame();\n  };\n\n  var getHint = function getHint() {\n    showHint.apply(void 0, _toConsumableArray(hints.splice(Math.floor(Math.random() * hints.length), 1)));\n    setHintCounter(function (hintCounter) {\n      return hintCounter + 1;\n    });\n  };\n\n  var checkAnswer = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(answer) {\n      var answerTimeEnd, user_answer;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              answerTimeEnd = moment();\n              user_answer = answer === random_game.name ? {\n                title: random_game.name,\n                time: answerTimeEnd.diff(answerTimeStart),\n                score: Number((1000 / answerTimeEnd.diff(answerTimeStart) * 10000 * ((10 - hintCounter) / 10)).toFixed()),\n                correct: true,\n                hints_used: hintCounter\n              } : {\n                title: random_game.name,\n                time: answerTimeEnd.diff(answerTimeStart),\n                score: 0,\n                correct: false,\n                skip: answer === \"player_skipped_game\" ? true : false,\n                hints_used: hintCounter\n              };\n              pushNewAnswer(user_answer);\n              loadNewQuestion();\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function checkAnswer(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    !game_status.isLoading && setAnswerTimeStart(moment());\n  }, [game_status]);\n  useEffect(function () {\n    random_game && setHints(random_game.hints);\n  }, [random_game]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      top: true,\n      children: !game_status.isStarted ? /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: function onClick() {\n          return startNewGame();\n        },\n        children: \"start a new challenge\"\n      }, \"key0015\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this) : game_status.isLoading ? /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        children: \"loading\"\n      }, 'key0016', false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 12\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [hintCounter < 3 && /*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          onClick: function onClick() {\n            return getHint();\n          },\n          children: \"get a hint\"\n        }, \"key0011\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          onClick: function onClick() {\n            return checkAnswer(\"player_skipped_game\");\n          },\n          children: \"skip\"\n        }, \"key0012\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          onClick: function onClick() {\n            return quitGame();\n          },\n          children: \"quit\"\n        }, \"key0013\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      bottom: true,\n      children: game_status.isStarted && !game_status.isLoading && random_game.answers ? random_game.answers.map(function (answer, i) {\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          answer: true,\n          onClick: function onClick(answer) {\n            return checkAnswer(answer.target.innerText);\n          },\n          children: answer\n        }, \"key0021\" + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, _this);\n      }) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SC.Popup, {\n      title: \"Hello gamergeek!\",\n      switch_popup: popup,\n      children: usernamePanel ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(SC.WelcomeText, {\n          children: \"Let\\u2019s see how good you are! Starting from your name...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(SC.TextInput, {\n          type: \"text\",\n          onChange: function onChange() {\n            return handleTyping();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(SC.TextInputHint, {\n          visible: warning,\n          children: \"Wrong nickname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(SC.PlayButton, {\n          onClick: function onClick() {\n            return showUsernamePanel(false);\n          },\n          children: \"Let's Play!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(SC.WelcomeText, {\n          center: true,\n          children: \"Set game difficulty...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this), game_difficulty.map(function (diff_lvl, i) {\n          return /*#__PURE__*/_jsxDEV(SC.PlayButton, {\n            onClick: function onClick() {\n              switchPopup(false);\n              setDifficulty(diff_lvl);\n            },\n            children: diff_lvl\n          }, \"key0011\" + i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, _this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TableComponent, \"iNeIOshDAAgxxPI69vuVzvFnwbI=\");\n\n_c = TableComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableComponent\");","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/Table.js"],"names":["Table","Typography","useState","useEffect","Fragment","pickRandomGame","game_database","moment","SC","game_difficulty","TableComponent","random_game","startGame","startLoading","endGame","showRandomGame","pushNewAnswer","showHint","hideHint","game_status","answerTimeStart","setAnswerTimeStart","hintCounter","setHintCounter","hints","setHints","difficulty","setDifficulty","usernamePanel","showUsernamePanel","warning","setWarning","popup","switchPopup","handleTyping","e","target","value","length","startNewGame","loadNewQuestion","quitGame","getHint","splice","Math","floor","random","checkAnswer","answer","answerTimeEnd","user_answer","name","title","time","diff","score","Number","toFixed","correct","hints_used","skip","isLoading","isStarted","answers","map","i","innerText","diff_lvl"],"mappings":"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","sourcesContent":["import Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\nimport { useState, useEffect, Fragment } from \"react\";\nimport { pickRandomGame } from \"../../../global/fetch\";\nimport { game_database } from \"../../../global/const\";\nimport moment from 'moment'\nimport * as SC from \"../../styled-components/Popup\"\n\nconst game_difficulty = [\"easy\", \"medium\", \"hard\"];\n\nexport default function TableComponent({\n    random_game, startGame, startLoading, endGame,\n    showRandomGame, pushNewAnswer, showHint, hideHint, game_status,}) {\n  const [answerTimeStart, setAnswerTimeStart] = useState(false)\n  const [hintCounter, setHintCounter] = useState(0)\n  const [hints, setHints] = useState(false)\n  const [difficulty, setDifficulty] = useState(false)\n  const [usernamePanel, showUsernamePanel] = useState(true);\n  const [warning, setWarning] = useState(false);\n  const [popup, switchPopup] = useState(false);\n  const handleTyping = (e) => {\n    0 < e.target.value.length && e.target.value.length < 3\n      ? setWarning(true)\n      : setWarning(false);\n    // check if username doesn't match one of usernames in MongoDatabase\n  };\n  const startNewGame = () => {\n    switchPopup(true)\n    if(difficulty) {\n      startGame(difficulty)\n      loadNewQuestion()\n    }\n  }\n  const loadNewQuestion = async () => {\n    startLoading()\n    hideHint()\n    setHintCounter(0)\n    showRandomGame(await pickRandomGame(game_database))\n  } \n  const quitGame = () => {\n    hideHint()\n    setHintCounter(0)\n    showUsernamePanel(true)\n    setDifficulty(false)\n    endGame()\n  }\n  const getHint = () => {\n    showHint(...hints.splice(Math.floor(Math.random() * hints.length), 1))\n    setHintCounter(hintCounter => hintCounter + 1)\n  }\n  const checkAnswer = async (answer) => {\n    const answerTimeEnd = moment()\n    const user_answer = answer === random_game.name\n        ? {\n            title: random_game.name,\n            time: answerTimeEnd.diff(answerTimeStart),\n            score: Number((1000/answerTimeEnd.diff(answerTimeStart)*10000*((10-hintCounter)/10)).toFixed()),\n            correct: true,\n            hints_used: hintCounter,\n          }\n        : {\n            title: random_game.name,\n            time: answerTimeEnd.diff(answerTimeStart),\n            score: 0,\n            correct: false,\n            skip: answer === \"player_skipped_game\" ? true: false,\n            hints_used: hintCounter,\n          };\n    pushNewAnswer(user_answer)\n    loadNewQuestion()\n  }\n\n  useEffect(() => {\n    !game_status.isLoading && setAnswerTimeStart(moment())\n  }, [game_status])\n  useEffect(() => {\n    random_game && setHints(random_game.hints) \n  }, [random_game])\n\n  return (\n    <>\n      <Table top>    \n        {!game_status.isStarted ?\n          <Typography key={\"key0015\"} link onClick={() => startNewGame()}>start a new challenge</Typography>\n          : game_status.isLoading ?\n           <Typography key={'key0016'} link>loading</Typography>\n           : (\n            <Fragment>\n              {hintCounter < 3 && <Typography key={\"key0011\"} link onClick={() => getHint()}>get a hint</Typography>}\n              <Typography key={\"key0012\"} link onClick={() => checkAnswer(\"player_skipped_game\")}>skip</Typography>\n              <Typography key={\"key0013\"} link onClick={() => quitGame()}>quit</Typography>\n            </Fragment>\n          )}\n      </Table>\n      <Table bottom>\n        {(game_status.isStarted && !game_status.isLoading && random_game.answers) ?\n        random_game.answers.map((answer, i) => (\n        <Typography key={\"key0021\"+i} answer onClick={(answer) => checkAnswer(answer.target.innerText)}>{answer}</Typography>))\n        : ``}\n      </Table>\n      <SC.Popup title=\"Hello gamergeek!\" switch_popup={popup}>\n          {usernamePanel ? (\n            <Fragment>\n              <SC.WelcomeText>Let’s see how good you are! Starting from your name...</SC.WelcomeText>\n              <SC.TextInput type=\"text\" onChange={() => handleTyping()} />\n              <SC.TextInputHint visible={warning}>Wrong nickname</SC.TextInputHint>\n              <SC.PlayButton onClick={() => showUsernamePanel(false)}>Let's Play!</SC.PlayButton>\n            </Fragment>\n          ) : (\n            <Fragment>\n              <SC.WelcomeText center>Set game difficulty...</SC.WelcomeText>\n              {game_difficulty.map((diff_lvl, i) => (\n                <SC.PlayButton key={\"key0011\" + i} onClick={() => {switchPopup(false); setDifficulty(diff_lvl)}}>\n                  {diff_lvl}\n                </SC.PlayButton>\n              ))}\n            </Fragment>\n          )}\n      </SC.Popup>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}