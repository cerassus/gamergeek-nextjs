{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var START_GAME = \"START_GAME\";\nexport var END_GAME = \"END_GAME\";\nexport var SHOW_RANDOM_GAME = \"SHOW_RANDOM_GAME\";\nexport var NEW_ANSWER = \"NEW_ANSWER\";\nexport var LOAD_NEW_GAME = \"LOAD_NEW_GAME\";\nexport var COUNTDOWN = \"COUNTDOWN\";\nexport var startGame = function startGame(difficulty) {\n  return {\n    type: START_GAME,\n    difficulty: difficulty\n  };\n};\nexport var resumeGame = function resumeGame() {\n  return {\n    type: START_GAME\n  };\n};\nexport var endGame = function endGame() {\n  return {\n    type: END_GAME\n  };\n};\nexport var showRandomGame = function showRandomGame(game) {\n  return {\n    type: SHOW_RANDOM_GAME,\n    game: game\n  };\n};\nexport var pushNewAnswer = function pushNewAnswer(answer) {\n  return {\n    type: NEW_ANSWER,\n    answer: answer\n  };\n};\nexport var loadNewGame = function loadNewGame() {\n  return {\n    type: LOAD_NEW_GAME\n  };\n};\nexport var countdown = function countdown() {\n  return {\n    type: COUNTDOWN\n  };\n};\n\nfunction runCounter() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setInterval(function () {\n                dispatch(countdown());\n              }, 1000);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}","map":{"version":3,"sources":["/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/redux/actions.js"],"names":["START_GAME","END_GAME","SHOW_RANDOM_GAME","NEW_ANSWER","LOAD_NEW_GAME","COUNTDOWN","startGame","difficulty","type","resumeGame","endGame","showRandomGame","game","pushNewAnswer","answer","loadNewGame","countdown","runCounter","dispatch","setInterval"],"mappings":";;AAAA,OAAO,IAAMA,UAAU,GAAG,YAAnB;AACP,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,IAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,IAAMC,SAAS,GAAG,WAAlB;AAGP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,UAAD;AAAA,SAAiB;AACtCC,IAAAA,IAAI,EAAER,UADgC;AAEtCO,IAAAA,UAAU,EAAVA;AAFsC,GAAjB;AAAA,CAAlB;AAKP,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAO;AAC7BD,IAAAA,IAAI,EAAER;AADuB,GAAP;AAAA,CAAnB;AAIP,OAAO,IAAMU,OAAO,GAAG,SAAVA,OAAU;AAAA,SAAO;AAC1BF,IAAAA,IAAI,EAAEP;AADoB,GAAP;AAAA,CAAhB;AAIP,OAAO,IAAMU,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD;AAAA,SAAW;AACrCJ,IAAAA,IAAI,EAAEN,gBAD+B;AAErCU,IAAAA,IAAI,EAAJA;AAFqC,GAAX;AAAA,CAAvB;AAKP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,MAAD;AAAA,SAAa;AACtCN,IAAAA,IAAI,EAAEL,UADgC;AAEtCW,IAAAA,MAAM,EAANA;AAFsC,GAAb;AAAA,CAAtB;AAKP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAO;AAC9BP,IAAAA,IAAI,EAAEJ;AADwB,GAAP;AAAA,CAApB;AAIP,OAAO,IAAMY,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAO;AAC5BR,IAAAA,IAAI,EAAEH;AADsB,GAAP;AAAA,CAAlB;;AAIP,SAASY,UAAT,GAAsB;AAClB;AAAA,wEAAO,iBAAgBC,QAAhB;AAAA;AAAA;AAAA;AAAA;AACHC,cAAAA,WAAW,CAAC,YAAW;AACnBD,gBAAAA,QAAQ,CAACF,SAAS,EAAV,CAAR;AACH,eAFU,EAER,IAFQ,CAAX;;AADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAKH","sourcesContent":["export const START_GAME = \"START_GAME\";\nexport const END_GAME = \"END_GAME\";\nexport const SHOW_RANDOM_GAME = \"SHOW_RANDOM_GAME\";\nexport const NEW_ANSWER = \"NEW_ANSWER\";\nexport const LOAD_NEW_GAME = \"LOAD_NEW_GAME\";\nexport const COUNTDOWN = \"COUNTDOWN\";\n\n\nexport const startGame = (difficulty) => ({\n    type: START_GAME,\n    difficulty,\n})\n\nexport const resumeGame = () => ({\n    type: START_GAME,\n})\n\nexport const endGame = () => ({\n    type: END_GAME,\n})\n\nexport const showRandomGame = (game) => ({\n    type: SHOW_RANDOM_GAME,\n    game,\n})\n\nexport const pushNewAnswer = (answer) => ({\n    type: NEW_ANSWER,\n    answer,\n})\n\nexport const loadNewGame = () => ({\n    type: LOAD_NEW_GAME,\n})\n\nexport const countdown = () => ({\n    type: COUNTDOWN,\n})\n\nfunction runCounter() {\n    return async function (dispatch) {\n        setInterval(function() {\n            dispatch(countdown())\n        }, 1000)\n    }\n}\n"]},"metadata":{},"sourceType":"module"}