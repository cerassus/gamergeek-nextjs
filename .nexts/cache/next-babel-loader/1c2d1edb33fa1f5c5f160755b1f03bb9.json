{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/components/main/challenge/TableTop.js\",\n    _s = $RefreshSig$();\n\nimport Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\nimport React from \"react\";\nimport { pickRandomGame } from \"../../../global/fetch\";\nimport { games as source } from \"../../../global/games\";\n\nvar game_database = _toConsumableArray(source.results).map(function (game) {\n  return game = {\n    id: game.id\n  };\n});\n\nconsole.log(game_database);\nexport default function TableTop(_ref) {\n  _s();\n\n  var game_status = _ref.game_status,\n      startGame = _ref.startGame,\n      stopGame = _ref.stopGame,\n      generateGame = _ref.generateGame,\n      getRandomGame = _ref.getRandomGame;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      difficultyChoice = _React$useState2[0],\n      showDifficultyChoice = _React$useState2[1];\n\n  var skip = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var randomik;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return pickRandomGame(game_database);\n\n            case 2:\n              randomik = _context.sent;\n              getRandomGame(randomik);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function skip() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var stop = function stop() {\n    showDifficultyChoice(false);\n    return stopGame();\n  };\n\n  var start = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(difficulty) {\n      var randomik;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return pickRandomGame(game_database);\n\n            case 2:\n              randomik = _context2.sent;\n              getRandomGame(randomik);\n              startGame(difficulty);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function start(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    top: true,\n    children: game_status ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        href: \"/\",\n        children: \"get a hint\"\n      }, Math.random() * 10000, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: skip,\n        children: \"skip\"\n      }, Math.random() * 10000, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: stop,\n        children: \"quit\"\n      }, Math.random() * 10000, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : difficultyChoice ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        children: \"set difficulty: \"\n      }, Math.random() * 10000, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: function onClick() {\n          return start(0);\n        },\n        children: \"easy\"\n      }, Math.random() * 10000, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: function onClick() {\n          return start(1);\n        },\n        children: \"medium\"\n      }, Math.random() * 10000, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: function onClick() {\n          return start(2);\n        },\n        children: \"hard\"\n      }, Math.random() * 10000, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n      link: true,\n      onClick: function onClick() {\n        return showDifficultyChoice(true);\n      },\n      children: \"start a new challenge\"\n    }, Math.random() * 10000, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n} // export default function TableTop({ game_status, startGame, stopGame }) {\n//   const [difficultyChoice, showDifficultyChoice] = React.useState(false)\n//   const stop = () => {\n//     showDifficultyChoice(false);\n//     return stopGame();\n//   }\n//   return (\n//     <Table top>\n//       {(!game_status && difficultyChoice) && (\n//         <>\n//         <Typography link>set difficulty: </Typography>\n//         <Typography link onClick={() => startGame(0)}>easy</Typography>\n//         <Typography link onClick={() => startGame(1)}>medium</Typography>\n//         <Typography link onClick={() => startGame(2)}>hard</Typography>\n//         </>\n//       )}\n//       {(!game_status && !difficultyChoice) && (\n//         <Typography link onClick={() => showDifficultyChoice(true)}>start a new challenge</Typography>\n//       )}\n//       {game_status && (\n//         <>\n//           <Typography link href=\"/\">get a hint</Typography>\n//           <Typography link href=\"/\">skip</Typography>\n//           <Typography link onClick={stop}>quit</Typography>\n//         </>\n//       )}\n//     </Table>\n//   );\n// }\n\n_s(TableTop, \"v0Nho68mWNkC/ol++Z6UofPgdr8=\");\n\n_c = TableTop;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableTop\");","map":{"version":3,"sources":["/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/components/main/challenge/TableTop.js"],"names":["Table","Typography","React","pickRandomGame","games","source","game_database","results","map","game","id","console","log","TableTop","game_status","startGame","stopGame","generateGame","getRandomGame","useState","difficultyChoice","showDifficultyChoice","skip","randomik","stop","start","difficulty","Math","random"],"mappings":"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","sourcesContent":["import Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\nimport React from \"react\"\nimport { pickRandomGame } from \"../../../global/fetch\"\nimport { games as source } from \"../../../global/games\"\n\nconst game_database = [...source.results].map(game => game = {\n    id: game.id,\n})\n\nconsole.log(game_database)\n\nexport default function TableTop({ game_status, startGame, stopGame, generateGame, getRandomGame }) {\n  const [difficultyChoice, showDifficultyChoice] = React.useState(false)\n  const skip = async () => {\n    const randomik = await pickRandomGame(game_database)\n    getRandomGame(randomik)\n  }\n  const stop = () => {\n    showDifficultyChoice(false);\n    return stopGame();\n  }\n  const start = async (difficulty) => {\n    const randomik = await pickRandomGame(game_database)\n    getRandomGame(randomik)\n    startGame(difficulty)\n  }\n  return (\n    <Table top>\n      {game_status ? (\n        <>\n          <Typography key={Math.random() * 10000} link href=\"/\">get a hint</Typography>\n          <Typography key={Math.random() * 10000} link onClick={skip}>skip</Typography>\n          <Typography key={Math.random() * 10000} link onClick={stop}>quit</Typography>\n        </>\n      ) : difficultyChoice ? (\n        <>\n        <Typography key={Math.random() * 10000} link >set difficulty: </Typography>\n        <Typography key={Math.random() * 10000} link onClick={() => start(0)}>easy</Typography>\n        <Typography key={Math.random() * 10000} link onClick={() => start(1)}>medium</Typography>\n        <Typography key={Math.random() * 10000} link onClick={() => start(2)}>hard</Typography>\n        </>\n      ) : <Typography key={Math.random() * 10000} link onClick={() => showDifficultyChoice(true)}>start a new challenge</Typography>}\n    </Table>\n  );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// export default function TableTop({ game_status, startGame, stopGame }) {\n//   const [difficultyChoice, showDifficultyChoice] = React.useState(false)\n//   const stop = () => {\n//     showDifficultyChoice(false);\n//     return stopGame();\n//   }\n//   return (\n//     <Table top>\n//       {(!game_status && difficultyChoice) && (\n//         <>\n//         <Typography link>set difficulty: </Typography>\n//         <Typography link onClick={() => startGame(0)}>easy</Typography>\n//         <Typography link onClick={() => startGame(1)}>medium</Typography>\n//         <Typography link onClick={() => startGame(2)}>hard</Typography>\n//         </>\n//       )}\n//       {(!game_status && !difficultyChoice) && (\n//         <Typography link onClick={() => showDifficultyChoice(true)}>start a new challenge</Typography>\n//       )}\n\n//       {game_status && (\n//         <>\n//           <Typography link href=\"/\">get a hint</Typography>\n//           <Typography link href=\"/\">skip</Typography>\n//           <Typography link onClick={stop}>quit</Typography>\n//         </>\n//       )}\n//     </Table>\n//   );\n// }\n\n\n"]},"metadata":{},"sourceType":"module"}