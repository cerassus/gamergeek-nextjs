{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/cerassus/Websites/gamergeek-nextjs/pages/index.js\";\nimport Layout from \"../layout/Layout\";\nimport ScreenshotViewer from \"../containers/ScreenshotViewer\";\nimport Table from \"../containers/Table\";\nimport Popup from \"../components/styled-components/Popup\";\nimport { useState, useEffect } from \"react\";\nexport default function HomePage() {\n  const {\n    0: game_prepare,\n    1: setGamePrepare\n  } = useState(false);\n  const {\n    0: game_summary,\n    1: setGameSummary\n  } = useState(false);\n  const {\n    0: difficulty,\n    1: setDifficulty\n  } = useState(false);\n  useEffect(() => {\n    !game_prepare && setDifficulty(false);\n  }, [game_prepare]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Layout, {\n      title: \"Challenge\",\n      children: [/*#__PURE__*/_jsxDEV(ScreenshotViewer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        showGamePreparePopup: boolean => setGamePrepare(boolean),\n        showGameSummary: boolean => setGameSummary(boolean),\n        difficultyFromPopup: difficulty\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), game_prepare ? /*#__PURE__*/_jsxDEV(Popup, {\n      game_prepare: true,\n      setDifficulty: difficulty => setDifficulty(difficulty)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : game_summary && /*#__PURE__*/_jsxDEV(Popup, {\n      game_summary: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true);\n} // Dodać counter czasu gry\n// Dodanie POPUPa z podsumowaniem gry, który pojawia się po upływie czasu lub po kliknięciu QUIT\n// HINTS animation\n// React.useEffect(() => {\n//   game_status.isStarted ?\n//   startTimer()\n//   : console.log('game over')\n// }, [game_status.isStarted])\n// React.useEffect(() => {\n//   game_status.isRunning ? console.log('running') : game_status.isLoading && console.log('loading')\n// }, [game_status.isRunning])","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/pages/index.js"],"names":["Layout","ScreenshotViewer","Table","Popup","useState","useEffect","HomePage","game_prepare","setGamePrepare","game_summary","setGameSummary","difficulty","setDifficulty","boolean"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,kBAAnB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,KAAP,MAAkB,uCAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,QAAT,GAAoB;AACjC,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAiCJ,QAAQ,CAAC,KAAD,CAA/C;AACA,QAAM;AAAA,OAACK,YAAD;AAAA,OAAeC;AAAf,MAAiCN,QAAQ,CAAC,KAAD,CAA/C;AACA,QAAM;AAAA,OAACO,UAAD;AAAA,OAAaC;AAAb,MAA8BR,QAAQ,CAAC,KAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,KAACE,YAAD,IAAiBK,aAAa,CAAC,KAAD,CAA9B;AACD,GAFQ,EAEN,CAACL,YAAD,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAAA,8BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACE,QAAA,oBAAoB,EAAGM,OAAD,IAAaL,cAAc,CAACK,OAAD,CADnD;AAEE,QAAA,eAAe,EAAGA,OAAD,IAAaH,cAAc,CAACG,OAAD,CAF9C;AAGE,QAAA,mBAAmB,EAAEF;AAHvB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EASGJ,YAAY,gBACX,QAAC,KAAD;AACE,MAAA,YAAY,MADd;AAEE,MAAA,aAAa,EAAGI,UAAD,IAAgBC,aAAa,CAACD,UAAD;AAF9C;AAAA;AAAA;AAAA;AAAA,YADW,GAMXF,YAAY,iBAAI,QAAC,KAAD;AAAO,MAAA,YAAY;AAAnB;AAAA;AAAA;AAAA;AAAA,YAfpB;AAAA,kBADF;AAoBD,C,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Layout from \"../layout/Layout\";\nimport ScreenshotViewer from \"../containers/ScreenshotViewer\";\nimport Table from \"../containers/Table\";\nimport Popup from \"../components/styled-components/Popup\";\nimport { useState, useEffect } from \"react\";\n\nexport default function HomePage() {\n  const [game_prepare, setGamePrepare] = useState(false);\n  const [game_summary, setGameSummary] = useState(false);\n  const [difficulty, setDifficulty] = useState(false);\n\n  useEffect(() => {\n    !game_prepare && setDifficulty(false);\n  }, [game_prepare]);\n\n  return (\n    <>\n      <Layout title=\"Challenge\">\n        <ScreenshotViewer />\n        <Table\n          showGamePreparePopup={(boolean) => setGamePrepare(boolean)}\n          showGameSummary={(boolean) => setGameSummary(boolean)}\n          difficultyFromPopup={difficulty}\n        />\n      </Layout>\n      {game_prepare ? (\n        <Popup\n          game_prepare\n          setDifficulty={(difficulty) => setDifficulty(difficulty)}\n        />\n      ) : (\n        game_summary && <Popup game_summary />\n      )}\n    </>\n  );\n}\n\n// Dodać counter czasu gry\n// Dodanie POPUPa z podsumowaniem gry, który pojawia się po upływie czasu lub po kliknięciu QUIT\n// HINTS animation\n\n// React.useEffect(() => {\n//   game_status.isStarted ?\n//   startTimer()\n//   : console.log('game over')\n// }, [game_status.isStarted])\n// React.useEffect(() => {\n//   game_status.isRunning ? console.log('running') : game_status.isLoading && console.log('loading')\n// }, [game_status.isRunning])\n"]},"metadata":{},"sourceType":"module"}