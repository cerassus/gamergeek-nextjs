{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/components/styled-components/MainCounter.js\";\nimport styled from \"styled-components\";\nimport React from \"react\";\nimport { countdown } from \"../../redux/actions\";\nimport moment from \"moment\";\nconst CounterContainer = styled.div`\n  text-transform: uppercase;\n  font-weight: 900;\n  font-size: 3rem;\n  display: inline-block;\n`;\nexport default function MainCounter({\n  game_status,\n  main_counter,\n  countdown\n}) {\n  React.useEffect(({\n    game_status\n  }) => {\n    if (game_status.isStarted) {\n      const runCounting = setInterval(() => {\n        game_status.isRunning && countdown();\n      }, 1000);\n    }\n  }, [game_status.isStarted]);\n  return /*#__PURE__*/_jsxDEV(CounterContainer, {\n    children: [main_counter, \" s\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n} // export default function MainCounter({game_status, main_counter}) {\n//   React.useEffect(() => {\n//     if(game_status.isStarted) {\n//       let startingValue = 60\n//       const DIV = document.getElementById('counter')\n//       const task = () => {\n//         startingValue--\n//         DIV.innerText = startingValue\n//         startingValue === 0 && stopCounting()\n//       }\n//       const runCounting = setInterval(task, 1000)\n//       const stopCounting = () => clearInterval(runCounting)\n//     }\n//   },[game_status.isStarted])\n//   return (\n//     <CounterContainer>\n//       <div id='counter'></div>\n//     </CounterContainer>\n//   )\n// }\n// React.useEffect(() => {\n//   game_status.isStarted ? \n//   startTimer()\n//   : console.log('game over')\n// }, [game_status.isStarted])\n// React.useEffect(() => {\n//   game_status.isRunning ? console.log('running') : game_status.isLoading && console.log('loading') \n// }, [game_status.isRunning])","map":{"version":3,"sources":["/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/components/styled-components/MainCounter.js"],"names":["styled","React","countdown","moment","CounterContainer","div","MainCounter","game_status","main_counter","useEffect","isStarted","runCounting","setInterval","isRunning"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,qBAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,gBAAgB,GAAGJ,MAAM,CAACK,GAAI;AACpC;AACA;AACA;AACA;AACA,CALA;AAOA,eAAe,SAASC,WAAT,CAAqB;AAACC,EAAAA,WAAD;AAAcC,EAAAA,YAAd;AAA4BN,EAAAA;AAA5B,CAArB,EAA6D;AAC1ED,EAAAA,KAAK,CAACQ,SAAN,CAAgB,CAAC;AAACF,IAAAA;AAAD,GAAD,KAAmB;AACjC,QAAGA,WAAW,CAACG,SAAf,EAA0B;AACxB,YAAMC,WAAW,GAAGC,WAAW,CAAC,MAAM;AACpCL,QAAAA,WAAW,CAACM,SAAZ,IAAyBX,SAAS,EAAlC;AACD,OAF8B,EAE5B,IAF4B,CAA/B;AAGD;AACF,GAND,EAME,CAACK,WAAW,CAACG,SAAb,CANF;AAOA,sBACE,QAAC,gBAAD;AAAA,eACGF,YADH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import styled from \"styled-components\";\nimport React from \"react\"\nimport {countdown} from \"../../redux/actions\"\nimport moment from \"moment\"\n\nconst CounterContainer = styled.div`\n  text-transform: uppercase;\n  font-weight: 900;\n  font-size: 3rem;\n  display: inline-block;\n`;\n\nexport default function MainCounter({game_status, main_counter, countdown}) {\n  React.useEffect(({game_status}) => {\n    if(game_status.isStarted) {\n      const runCounting = setInterval(() => {\n        game_status.isRunning && countdown()\n      }, 1000)\n    }\n  },[game_status.isStarted])\n  return (\n    <CounterContainer>\n      {main_counter} s\n    </CounterContainer>\n  )\n}\n\n\n// export default function MainCounter({game_status, main_counter}) {\n//   React.useEffect(() => {\n//     if(game_status.isStarted) {\n//       let startingValue = 60\n//       const DIV = document.getElementById('counter')\n//       const task = () => {\n//         startingValue--\n//         DIV.innerText = startingValue\n//         startingValue === 0 && stopCounting()\n//       }\n//       const runCounting = setInterval(task, 1000)\n//       const stopCounting = () => clearInterval(runCounting)\n//     }\n//   },[game_status.isStarted])\n//   return (\n//     <CounterContainer>\n//       <div id='counter'></div>\n//     </CounterContainer>\n//   )\n// }\n\n\n\n\n\n\n\n// React.useEffect(() => {\n//   game_status.isStarted ? \n//   startTimer()\n//   : console.log('game over')\n// }, [game_status.isStarted])\n// React.useEffect(() => {\n//   game_status.isRunning ? console.log('running') : game_status.isLoading && console.log('loading') \n// }, [game_status.isRunning])"]},"metadata":{},"sourceType":"module"}