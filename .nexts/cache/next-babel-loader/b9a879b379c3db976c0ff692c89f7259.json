{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { combineReducers } from \"redux\";\nimport moment from 'moment';\nimport * as actions from \"./actions\";\nconst game_status_initial = {\n  isStarted: false,\n  isRunning: false,\n  isLoading: false\n};\n\nconst random_game = (state = \"\", action) => action.type === actions.SHOW_RANDOM_GAME ? action.game : state;\n\nconst game_status = (state = game_status_initial, action) => {\n  switch (action.type) {\n    case actions.START_GAME:\n      return {\n        isStarted: true,\n        isRunning: true,\n        isLoading: false\n      };\n\n    case actions.LOAD_NEW_GAME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isRunning: false,\n        isLoading: true\n      });\n\n    case actions.END_GAME:\n      return game_status_initial;\n\n    default:\n      return state;\n  }\n}; // const user_score = (state = [], action) => action.type === actions.NEW_ANSWER ? [...state, action.answer] : state\n\n\nconst user_score = (state = [], action) => {\n  if (action.type === actions.NEW_ANSWER) {\n    console.log([...state, action.answer]);\n    return [...state, action.answer];\n  } else {\n    return state;\n  }\n};\n\nconst hint = (state = false, action) => {\n  switch (action.type) {\n    case actions.SHOW_HINT:\n      return action.hints;\n\n    case actions.HIDE_HINT:\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nconst main_counter = (state = 60, action) => {\n  switch (action.type) {\n    case actions.COUNTDOWN:\n      return state - 1;\n\n    case actions.END_GAME:\n      return 60;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  game_status,\n  random_game,\n  user_score,\n  main_counter,\n  hint\n});","map":{"version":3,"sources":["/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/redux/reducers.js"],"names":["combineReducers","moment","actions","game_status_initial","isStarted","isRunning","isLoading","random_game","state","action","type","SHOW_RANDOM_GAME","game","game_status","START_GAME","LOAD_NEW_GAME","END_GAME","user_score","NEW_ANSWER","console","log","answer","hint","SHOW_HINT","hints","HIDE_HINT","main_counter","COUNTDOWN"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AAEA,MAAMC,mBAAmB,GAAG;AACxBC,EAAAA,SAAS,EAAE,KADa;AAExBC,EAAAA,SAAS,EAAE,KAFa;AAGxBC,EAAAA,SAAS,EAAE;AAHa,CAA5B;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwBA,MAAM,CAACC,IAAP,KAAgBR,OAAO,CAACS,gBAAxB,GAA2CF,MAAM,CAACG,IAAlD,GAAyDJ,KAArG;;AAEA,MAAMK,WAAW,GAAG,CAACL,KAAK,GAAGL,mBAAT,EAA8BM,MAA9B,KAAyC;AACzD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,OAAO,CAACY,UAAb;AAAyB,aAAO;AACxBV,QAAAA,SAAS,EAAE,IADa;AAExBC,QAAAA,SAAS,EAAE,IAFa;AAGxBC,QAAAA,SAAS,EAAE;AAHa,OAAP;;AAKzB,SAAKJ,OAAO,CAACa,aAAb;AAA4B,6CACjBP,KADiB;AAEpBH,QAAAA,SAAS,EAAE,KAFS;AAGpBC,QAAAA,SAAS,EAAE;AAHS;;AAK5B,SAAKJ,OAAO,CAACc,QAAb;AAAuB,aAAOb,mBAAP;;AACvB;AAAS,aAAOK,KAAP;AAZb;AAcH,CAfD,C,CAiBA;;;AAEA,MAAMS,UAAU,GAAG,CAACT,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACvC,MAAGA,MAAM,CAACC,IAAP,KAAgBR,OAAO,CAACgB,UAA3B,EAAuC;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAC,GAAGZ,KAAJ,EAAWC,MAAM,CAACY,MAAlB,CAAZ;AACA,WAAO,CAAC,GAAGb,KAAJ,EAAWC,MAAM,CAACY,MAAlB,CAAP;AACH,GAHD,MAGO;AACH,WAAOb,KAAP;AACH;AACJ,CAPD;;AASA,MAAMc,IAAI,GAAG,CAACd,KAAK,GAAG,KAAT,EAAgBC,MAAhB,KAA2B;AACpC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,OAAO,CAACqB,SAAb;AAAwB,aAAOd,MAAM,CAACe,KAAd;;AACxB,SAAKtB,OAAO,CAACuB,SAAb;AAAwB,aAAO,KAAP;;AACxB;AAAS,aAAOjB,KAAP;AAHb;AAKH,CAND;;AAWA,MAAMkB,YAAY,GAAG,CAAClB,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACzC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,OAAO,CAACyB,SAAb;AAAwB,aAAOnB,KAAK,GAAG,CAAf;;AACxB,SAAKN,OAAO,CAACc,QAAb;AAAuB,aAAO,EAAP;;AACvB;AAAS,aAAOR,KAAP;AAHb;AAKH,CAND;;AASA,eAAeR,eAAe,CAAC;AAC7Ba,EAAAA,WAD6B;AAE7BN,EAAAA,WAF6B;AAG7BU,EAAAA,UAH6B;AAI7BS,EAAAA,YAJ6B;AAK7BJ,EAAAA;AAL6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from \"redux\"\nimport moment from 'moment'\nimport * as actions from \"./actions\"\n\nconst game_status_initial = {\n    isStarted: false,\n    isRunning: false,\n    isLoading: false,\n}\n\nconst random_game = (state = \"\", action) => action.type === actions.SHOW_RANDOM_GAME ? action.game : state\n\nconst game_status = (state = game_status_initial, action) => {\n    switch(action.type) {\n        case actions.START_GAME: return { \n                isStarted: true,\n                isRunning: true,\n                isLoading: false,\n            }\n        case actions.LOAD_NEW_GAME: return { \n                ...state,\n                isRunning: false,\n                isLoading: true,\n            }\n        case actions.END_GAME: return game_status_initial\n        default: return state\n    }\n}\n\n// const user_score = (state = [], action) => action.type === actions.NEW_ANSWER ? [...state, action.answer] : state\n\nconst user_score = (state = [], action) => {\n    if(action.type === actions.NEW_ANSWER) {\n        console.log([...state, action.answer])\n        return [...state, action.answer]\n    } else {\n        return state\n    }\n}\n\nconst hint = (state = false, action) => {\n    switch(action.type) {\n        case actions.SHOW_HINT: return action.hints\n        case actions.HIDE_HINT: return false\n        default: return state\n    }\n}\n\n\n\n\nconst main_counter = (state = 60, action) => {\n    switch(action.type) {\n        case actions.COUNTDOWN: return state - 1\n        case actions.END_GAME: return 60\n        default: return state\n    }\n}\n\n\nexport default combineReducers({\n  game_status,\n  random_game,\n  user_score,\n  main_counter,\n  hint,\n})"]},"metadata":{},"sourceType":"module"}