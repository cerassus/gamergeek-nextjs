{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/components/styled-components/Screenshot.js\";\nimport styled from \"styled-components\";\nimport Logo from \"./Logo\";\nimport React from \"react\";\nconst ScreenshotContainer = styled.div`\n    background-color: var(--black);\n    width: calc(85% - 4rem);\n    //height: 0;\n    //padding-bottom: calc(47.75% - (0.5 * 4rem));\n    padding-bottom: 2vw;\n    border-radius: 5px;\n    box-shadow: 0 0 25px #FFF;\n    margin: 0 auto;\n    display: flex;\n    position: relative;\n    & > div {\n        margin: 8% auto;\n    }\n    `;\nconst SingleScreenshot = styled.img`\n        display: ${props => !props.status.isLoading ? `block` : `none`};\n        width: 97%;\n        transform: translate(1.5%, 2%);\n        margin: auto;\n        position: relative;\n        border-radius: 3px;\n        transition: all .3s;\n        z-index: 0;\n        opacity: 0;\n        min-width: 97%;\n        max-height: 420px;\n        &:first-child {\n            left: 0%;\n        }\n        &:nth-child(2) {\n            left: -97%;\n        }\n        &:nth-child(3) {\n            left: -194%;\n        }\n        ${props => !props.status.isLoading && (props.index === 0 ? `\n                &:first-child {\n                    z-index: 10;\n                    opacity: 1;\n                }\n                &:not(:first-child) {\n                    z-index: 0;\n                    opacity: 0;\n                }\n                ` : props.index === 1 ? `\n                &:nth-child(2) {\n                    z-index: 10;\n                    opacity: 1;\n                }\n                &:not(:nth-child(2)) {\n                    z-index: 0;\n                    opacity: 0;\n                }\n                ` : `\n                &:nth-child(3) {\n                    z-index: 10;\n                    opacity: 1;\n                }\n                &:not(:nth-child(3)) {\n                    z-index: 0;\n                    opacity: 0;\n                }\n                `)}\n    `;\nexport default function Screenshot({\n  src,\n  index,\n  game_status,\n  resumeGame,\n  user_score\n}) {\n  const [loading, setLoading] = React.useState(0);\n  React.useEffect(() => {\n    if (loading >= 3) {\n      setLoading(0);\n      resumeGame();\n    }\n  }, [loading]);\n  return /*#__PURE__*/_jsxDEV(ScreenshotContainer, {\n    children: game_status.isRunning && src ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [src.map((img, i) => /*#__PURE__*/_jsxDEV(SingleScreenshot, {\n        src: img,\n        alt: \"screenshot_img\",\n        onLoad: () => setLoading(loading + 1),\n        status: game_status,\n        index: index\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 38\n      }, this)), game_status.isLoading && /*#__PURE__*/_jsxDEV(Logo, {\n        big: true,\n        status: game_status,\n        color: user_score.length !== 0 ? user_score[user_score.length - 1].correct : false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Logo, {\n      big: true,\n      status: game_status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/components/styled-components/Screenshot.js"],"names":["styled","Logo","React","ScreenshotContainer","div","SingleScreenshot","img","props","status","isLoading","index","Screenshot","src","game_status","resumeGame","user_score","loading","setLoading","useState","useEffect","isRunning","map","i","length","correct"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,mBAAmB,GAAGH,MAAM,CAACI,GAAI;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAdA;AAgBA,MAAMC,gBAAgB,GAAGL,MAAM,CAACM,GAAI;AACpC,mBAAmBC,KAAK,IAAI,CAACA,KAAK,CAACC,MAAN,CAAaC,SAAd,GAA2B,OAA3B,GAAoC,MAAM;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAUF,KAAK,IACH,CAACA,KAAK,CAACC,MAAN,CAAaC,SAAd,KACEF,KAAK,CAACG,KAAN,KAAgB,CAAhB,GAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBATc,GASMH,KAAK,CAACG,KAAN,KAAgB,CAAhB,GAAqB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAToB,GASC;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBA5BY,CA8BF;AACV,KArDA;AAwDA,eAAe,SAASC,UAAT,CAAoB;AAACC,EAAAA,GAAD;AAAMF,EAAAA,KAAN;AAAaG,EAAAA,WAAb;AAA0BC,EAAAA,UAA1B;AAAsCC,EAAAA;AAAtC,CAApB,EAAuE;AAClF,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,KAAK,CAACgB,QAAN,CAAe,CAAf,CAA9B;AACAhB,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AAClB,QAAGH,OAAO,IAAI,CAAd,EAAiB;AACbC,MAAAA,UAAU,CAAC,CAAD,CAAV;AACAH,MAAAA,UAAU;AACd;AACH,GALD,EAKG,CAACE,OAAD,CALH;AAMA,sBACI,QAAC,mBAAD;AAAA,cACMH,WAAW,CAACO,SAAZ,IAAyBR,GAA1B,gBACD;AAAA,iBACKA,GAAG,CAACS,GAAJ,CAAQ,CAACf,GAAD,EAAMgB,CAAN,kBAAY,QAAC,gBAAD;AAA0B,QAAA,GAAG,EAAEhB,GAA/B;AAAoC,QAAA,GAAG,EAAC,gBAAxC;AAAyD,QAAA,MAAM,EAAE,MAAMW,UAAU,CAACD,OAAO,GAAC,CAAT,CAAjF;AAA8F,QAAA,MAAM,EAAEH,WAAtG;AAAmH,QAAA,KAAK,EAAEH;AAA1H,SAAuBY,CAAvB;AAAA;AAAA;AAAA;AAAA,cAApB,CADL,EAEKT,WAAW,CAACJ,SAAZ,iBAAyB,QAAC,IAAD;AAAM,QAAA,GAAG,MAAT;AAAU,QAAA,MAAM,EAAEI,WAAlB;AAA+B,QAAA,KAAK,EAAEE,UAAU,CAACQ,MAAX,KAAsB,CAAtB,GAA0BR,UAAU,CAACA,UAAU,CAACQ,MAAX,GAAkB,CAAnB,CAAV,CAAgCC,OAA1D,GAAoE;AAA1G;AAAA;AAAA;AAAA;AAAA,cAF9B;AAAA,oBADC,gBAKC,QAAC,IAAD;AAAM,MAAA,GAAG,MAAT;AAAU,MAAA,MAAM,EAAEX;AAAlB;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH","sourcesContent":["import styled from \"styled-components\"\nimport Logo from \"./Logo\"\nimport React from \"react\"\n\nconst ScreenshotContainer = styled.div`\n    background-color: var(--black);\n    width: calc(85% - 4rem);\n    //height: 0;\n    //padding-bottom: calc(47.75% - (0.5 * 4rem));\n    padding-bottom: 2vw;\n    border-radius: 5px;\n    box-shadow: 0 0 25px #FFF;\n    margin: 0 auto;\n    display: flex;\n    position: relative;\n    & > div {\n        margin: 8% auto;\n    }\n    `\n\nconst SingleScreenshot = styled.img`\n        display: ${props => !props.status.isLoading ? `block`: `none`};\n        width: 97%;\n        transform: translate(1.5%, 2%);\n        margin: auto;\n        position: relative;\n        border-radius: 3px;\n        transition: all .3s;\n        z-index: 0;\n        opacity: 0;\n        min-width: 97%;\n        max-height: 420px;\n        &:first-child {\n            left: 0%;\n        }\n        &:nth-child(2) {\n            left: -97%;\n        }\n        &:nth-child(3) {\n            left: -194%;\n        }\n        ${props => (\n            !props.status.isLoading && (\n              props.index === 0 ? `\n                &:first-child {\n                    z-index: 10;\n                    opacity: 1;\n                }\n                &:not(:first-child) {\n                    z-index: 0;\n                    opacity: 0;\n                }\n                ` : props.index === 1 ? `\n                &:nth-child(2) {\n                    z-index: 10;\n                    opacity: 1;\n                }\n                &:not(:nth-child(2)) {\n                    z-index: 0;\n                    opacity: 0;\n                }\n                ` : `\n                &:nth-child(3) {\n                    z-index: 10;\n                    opacity: 1;\n                }\n                &:not(:nth-child(3)) {\n                    z-index: 0;\n                    opacity: 0;\n                }\n                `  \n            )\n        )}\n    `\n\n\nexport default function Screenshot({src, index, game_status, resumeGame, user_score}) { \n    const [loading, setLoading] = React.useState(0)\n    React.useEffect(() => {\n        if(loading >= 3) {\n            setLoading(0)\n            resumeGame()\n       }   \n    }, [loading])\n    return (\n        <ScreenshotContainer >\n            {(game_status.isRunning && src) ? \n            <>\n              {  src.map((img, i) => <SingleScreenshot key={i} src={img} alt=\"screenshot_img\" onLoad={() => setLoading(loading+1)} status={game_status} index={index}/>)   }\n              {  game_status.isLoading && <Logo big status={game_status} color={user_score.length !== 0 ? user_score[user_score.length-1].correct : false} /> }\n            </>\n            : <Logo big status={game_status} /> }\n        </ScreenshotContainer>\n    )\n}"]},"metadata":{},"sourceType":"module"}