{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport * as actions from \"./actions\";\n\nconst game_status = (state = false, action) => action.type === actions.START_GAME ? true : action.type === actions.STOP_GAME ? false : state;\n\nconst random_game = (state = \"\", action) => action.type === actions.GET_RANDOM_GAME ? action.game : state;\n\nconst screenshots_loaded = (state = false, action) => {\n  switch (action.type) {\n    case actions.FILES_LOADED:\n      {\n        console.log('true');\n        return true;\n      }\n\n    case actions.FILES_ARE_LOADING:\n      {\n        console.log('false');\n        return false;\n      }\n\n    default:\n      return state;\n  }\n}; // const user_score = (state = [], action) => action.type === actions.NEW_ANSWER ? [...state, action.answer] : state\n\n\nconst user_score = (state = [], action) => {\n  if (action.type === actions.NEW_ANSWER) {\n    console.log([...state, action.answer]);\n    return [...state, action.answer];\n  } else {\n    return state;\n  }\n};\n\nexport default combineReducers({\n  game_status,\n  random_game,\n  user_score,\n  screenshots_loaded\n}); // const game_database = [...source.results].map((game,i) => game = {\n//     id: game.id,\n//     title: game.name,\n//     screenshots: [\n//         ...game.short_screenshots.slice(0, 3).map(screenshot => screenshot.image)\n//     ],\n//     hints: {\n//         genre: game.genres[game.genres.length-1].name,\n//         year: game.released,\n//     }\n// })","map":{"version":3,"sources":["/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/redux/reducers.js"],"names":["combineReducers","actions","game_status","state","action","type","START_GAME","STOP_GAME","random_game","GET_RANDOM_GAME","game","screenshots_loaded","FILES_LOADED","console","log","FILES_ARE_LOADING","user_score","NEW_ANSWER","answer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG,KAAT,EAAgBC,MAAhB,KAA2BA,MAAM,CAACC,IAAP,KAAgBJ,OAAO,CAACK,UAAxB,GAAqC,IAArC,GAA4CF,MAAM,CAACC,IAAP,KAAgBJ,OAAO,CAACM,SAAxB,GAAoC,KAApC,GAA4CJ,KAAvI;;AAEA,MAAMK,WAAW,GAAG,CAACL,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwBA,MAAM,CAACC,IAAP,KAAgBJ,OAAO,CAACQ,eAAxB,GAA0CL,MAAM,CAACM,IAAjD,GAAwDP,KAApG;;AAEA,MAAMQ,kBAAkB,GAAG,CAACR,KAAK,GAAG,KAAT,EAAgBC,MAAhB,KAA2B;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKJ,OAAO,CAACW,YAAb;AAA2B;AACvBC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,eAAO,IAAP;AACH;;AACD,SAAKb,OAAO,CAACc,iBAAb;AAAgC;AAC5BF,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,eAAO,KAAP;AACH;;AACD;AAAS,aAAOX,KAAP;AATb;AAWH,CAZD,C,CAcA;;;AAEA,MAAMa,UAAU,GAAG,CAACb,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACvC,MAAGA,MAAM,CAACC,IAAP,KAAgBJ,OAAO,CAACgB,UAA3B,EAAuC;AACnCJ,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAC,GAAGX,KAAJ,EAAWC,MAAM,CAACc,MAAlB,CAAZ;AACA,WAAO,CAAC,GAAGf,KAAJ,EAAWC,MAAM,CAACc,MAAlB,CAAP;AACH,GAHD,MAGO;AACH,WAAOf,KAAP;AACH;AACJ,CAPD;;AASA,eAAeH,eAAe,CAAC;AAC7BE,EAAAA,WAD6B;AAE7BM,EAAAA,WAF6B;AAG7BQ,EAAAA,UAH6B;AAI7BL,EAAAA;AAJ6B,CAAD,CAA9B,C,CAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { combineReducers } from \"redux\"\nimport * as actions from \"./actions\"\n\n\n\n\nconst game_status = (state = false, action) => action.type === actions.START_GAME ? true : action.type === actions.STOP_GAME ? false : state\n\nconst random_game = (state = \"\", action) => action.type === actions.GET_RANDOM_GAME ? action.game : state\n\nconst screenshots_loaded = (state = false, action) => {\n    switch(action.type) {\n        case actions.FILES_LOADED: {\n            console.log('true')\n            return true\n        }\n        case actions.FILES_ARE_LOADING: {\n            console.log('false')\n            return false\n        }\n        default: return state\n    }\n}\n\n// const user_score = (state = [], action) => action.type === actions.NEW_ANSWER ? [...state, action.answer] : state\n\nconst user_score = (state = [], action) => {\n    if(action.type === actions.NEW_ANSWER) {\n        console.log([...state, action.answer])\n        return [...state, action.answer]\n    } else {\n        return state\n    }\n}\n\nexport default combineReducers({\n  game_status,\n  random_game,\n  user_score,\n  screenshots_loaded,\n})\n\n\n\n\n\n\n\n\n\n// const game_database = [...source.results].map((game,i) => game = {\n//     id: game.id,\n//     title: game.name,\n//     screenshots: [\n//         ...game.short_screenshots.slice(0, 3).map(screenshot => screenshot.image)\n//     ],\n//     hints: {\n//         genre: game.genres[game.genres.length-1].name,\n//         year: game.released,\n//     }\n// })"]},"metadata":{},"sourceType":"module"}