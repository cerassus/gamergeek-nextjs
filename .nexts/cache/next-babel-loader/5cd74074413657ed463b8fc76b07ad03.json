{"ast":null,"code":"import { connect } from \"react-redux\";\nimport GameNavigatorTop from \"../components/main/challenge/containers/GameNavigatorTop\";\nimport { pushNewAnswer, setHintCounter, startLoading, loadNewQuestion, changePopup, showHint, endGame } from \"../redux/actions\";\n\nconst mapState = state => ({\n  game_is_started: state.game_status.isStarted,\n  game_is_loading: state.game_status.isLoading,\n  game_database: state.game_database,\n  random_game: state.random_game,\n  user_score: state.user_score,\n  hintCounter: state.hint_counter\n});\n\nconst mapDispatch = dispatch => ({\n  changePopup: popup => dispatch(changePopup(popup)),\n  endGame: () => dispatch(endGame()),\n  loadNewQuestion: db => dispatch(loadNewQuestion(db)),\n  startLoading: () => dispatch(startLoading()),\n  showHint: hint => dispatch(showHint(hint)),\n  setHintCounter: () => dispatch(setHintCounter()),\n  pushNewAnswer: answer => dispatch(pushNewAnswer(answer))\n});\n\nexport default connect(mapState, mapDispatch)(GameNavigatorTop);","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/redux_containers/GameNavigatorTop.js"],"names":["connect","GameNavigatorTop","pushNewAnswer","setHintCounter","startLoading","loadNewQuestion","changePopup","showHint","endGame","mapState","state","game_is_started","game_status","isStarted","game_is_loading","isLoading","game_database","random_game","user_score","hintCounter","hint_counter","mapDispatch","dispatch","popup","db","hint","answer"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,gBAAP,MAA6B,0DAA7B;AACA,SAASC,aAAT,EAAwBC,cAAxB,EAAwCC,YAAxC,EAAsDC,eAAtD,EAAuEC,WAAvE,EAAoFC,QAApF,EAA8FC,OAA9F,QAA6G,kBAA7G;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,KAAK;AACzBC,EAAAA,eAAe,EAAED,KAAK,CAACE,WAAN,CAAkBC,SADV;AAEzBC,EAAAA,eAAe,EAAEJ,KAAK,CAACE,WAAN,CAAkBG,SAFV;AAGzBC,EAAAA,aAAa,EAAEN,KAAK,CAACM,aAHI;AAIzBC,EAAAA,WAAW,EAAEP,KAAK,CAACO,WAJM;AAKzBC,EAAAA,UAAU,EAAER,KAAK,CAACQ,UALO;AAMzBC,EAAAA,WAAW,EAAET,KAAK,CAACU;AANM,CAAL,CAAtB;;AASA,MAAMC,WAAW,GAAIC,QAAQ,KAAK;AAChChB,EAAAA,WAAW,EAAGiB,KAAD,IAAWD,QAAQ,CAAChB,WAAW,CAACiB,KAAD,CAAZ,CADA;AAEhCf,EAAAA,OAAO,EAAE,MAAMc,QAAQ,CAACd,OAAO,EAAR,CAFS;AAGhCH,EAAAA,eAAe,EAAGmB,EAAD,IAAQF,QAAQ,CAACjB,eAAe,CAACmB,EAAD,CAAhB,CAHD;AAIhCpB,EAAAA,YAAY,EAAE,MAAMkB,QAAQ,CAAClB,YAAY,EAAb,CAJI;AAKhCG,EAAAA,QAAQ,EAAGkB,IAAD,IAAUH,QAAQ,CAACf,QAAQ,CAACkB,IAAD,CAAT,CALI;AAMhCtB,EAAAA,cAAc,EAAE,MAAMmB,QAAQ,CAACnB,cAAc,EAAf,CANE;AAOhCD,EAAAA,aAAa,EAAGwB,MAAD,IAAYJ,QAAQ,CAACpB,aAAa,CAACwB,MAAD,CAAd;AAPH,CAAL,CAA7B;;AAUA,eAAe1B,OAAO,CAACS,QAAD,EAAWY,WAAX,CAAP,CAA+BpB,gBAA/B,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport GameNavigatorTop from \"../components/main/challenge/containers/GameNavigatorTop\"\nimport { pushNewAnswer, setHintCounter, startLoading, loadNewQuestion, changePopup, showHint, endGame } from \"../redux/actions\"\n\nconst mapState = state => ({\n  game_is_started: state.game_status.isStarted,\n  game_is_loading: state.game_status.isLoading,\n  game_database: state.game_database,\n  random_game: state.random_game,\n  user_score: state.user_score,\n  hintCounter: state.hint_counter,\n})\n\nconst mapDispatch  = dispatch => ({\n  changePopup: (popup) => dispatch(changePopup(popup)),\n  endGame: () => dispatch(endGame()),\n  loadNewQuestion: (db) => dispatch(loadNewQuestion(db)),\n  startLoading: () => dispatch(startLoading()),\n  showHint: (hint) => dispatch(showHint(hint)),\n  setHintCounter: () => dispatch(setHintCounter()),\n  pushNewAnswer: (answer) => dispatch(pushNewAnswer(answer)),\n})\n\nexport default connect(mapState, mapDispatch)(GameNavigatorTop);\n"]},"metadata":{},"sourceType":"module"}