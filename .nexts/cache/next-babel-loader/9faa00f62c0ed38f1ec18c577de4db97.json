{"ast":null,"code":"import { getRandomGame } from \"../redux/actions\";\nexport const pickRandomGame = database => {\n  const randomIndex = Math.floor(Math.random() * database.length);\n  const game = database[randomIndex];\n  database.splice(randomIndex, 1);\n  console.log(database);\n  return getGameDetails(game);\n};\nexport const getGameDetails = async game => {\n  try {\n    const apishot = await fetch(`https://api.rawg.io/api/games/${game.id}`);\n    const game_details = await apishot.json();\n    console.log(game_details);\n    return getGameScreenshots(game_details);\n  } catch (error) {\n    console.log(error);\n    return {};\n  }\n};\nexport function getGameScreenshots(game) {\n  return async function (dispatch) {\n    try {\n      const apishot = await fetch(`https://api.rawg.io/api/games/${game.id}/screenshots`);\n      const screenshots = await apishot.json();\n      const game_screenshots = screenshots.results.splice(0, 3);\n      const gamess = {\n        id: game.id,\n        name: game.name,\n        altname: game.alternative_names,\n        screenshots: [...game_screenshots],\n        hints: {\n          developer: game.developers[0].name,\n          released: game.released,\n          genre: game.genres[game.genres.length - 1].name\n        }\n      };\n      console.log(gamess);\n      return dispatch(getRandomGame(gamess));\n    } catch (error) {\n      console.log(error);\n      return {};\n    }\n  };\n}","map":{"version":3,"sources":["/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/global/fetch.js"],"names":["getRandomGame","pickRandomGame","database","randomIndex","Math","floor","random","length","game","splice","console","log","getGameDetails","apishot","fetch","id","game_details","json","getGameScreenshots","error","dispatch","screenshots","game_screenshots","results","gamess","name","altname","alternative_names","hints","developer","developers","released","genre","genres"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AAEA,OAAO,MAAMC,cAAc,GAAIC,QAAD,IAAc;AACxC,QAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,QAAQ,CAACK,MAApC,CAApB;AACA,QAAMC,IAAI,GAAGN,QAAQ,CAACC,WAAD,CAArB;AACAD,EAAAA,QAAQ,CAACO,MAAT,CAAgBN,WAAhB,EAA6B,CAA7B;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACA,SAAOU,cAAc,CAACJ,IAAD,CAArB;AACH,CANM;AAQP,OAAO,MAAMI,cAAc,GAAG,MAAOJ,IAAP,IAAgB;AAC1C,MAAI;AACA,UAAMK,OAAO,GAAG,MAAMC,KAAK,CAAE,iCAAgCN,IAAI,CAACO,EAAG,EAA1C,CAA3B;AACA,UAAMC,YAAY,GAAG,MAAMH,OAAO,CAACI,IAAR,EAA3B;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYK,YAAZ;AACA,WAAOE,kBAAkB,CAACF,YAAD,CAAzB;AACH,GALD,CAMA,OAAMG,KAAN,EAAa;AACTT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACA,WAAO,EAAP;AACH;AACJ,CAXM;AAaP,OAAO,SAASD,kBAAT,CAA4BV,IAA5B,EAAkC;AACrC,SAAO,gBAAeY,QAAf,EAAyB;AAC5B,QAAI;AACA,YAAMP,OAAO,GAAG,MAAMC,KAAK,CAAE,iCAAgCN,IAAI,CAACO,EAAG,cAA1C,CAA3B;AACA,YAAMM,WAAW,GAAG,MAAMR,OAAO,CAACI,IAAR,EAA1B;AACA,YAAMK,gBAAgB,GAAGD,WAAW,CAACE,OAAZ,CAAoBd,MAApB,CAA2B,CAA3B,EAA6B,CAA7B,CAAzB;AACA,YAAMe,MAAM,GAAG;AACXT,QAAAA,EAAE,EAAEP,IAAI,CAACO,EADE;AAEXU,QAAAA,IAAI,EAAEjB,IAAI,CAACiB,IAFA;AAGXC,QAAAA,OAAO,EAAElB,IAAI,CAACmB,iBAHH;AAIXN,QAAAA,WAAW,EAAE,CAAC,GAAGC,gBAAJ,CAJF;AAKXM,QAAAA,KAAK,EAAE;AACHC,UAAAA,SAAS,EAAErB,IAAI,CAACsB,UAAL,CAAgB,CAAhB,EAAmBL,IAD3B;AAEHM,UAAAA,QAAQ,EAAEvB,IAAI,CAACuB,QAFZ;AAGHC,UAAAA,KAAK,EAAExB,IAAI,CAACyB,MAAL,CAAYzB,IAAI,CAACyB,MAAL,CAAY1B,MAAZ,GAAmB,CAA/B,EAAkCkB;AAHtC;AALI,OAAf;AAWAf,MAAAA,OAAO,CAACC,GAAR,CAAYa,MAAZ;AACA,aAAOJ,QAAQ,CAACpB,aAAa,CAACwB,MAAD,CAAd,CAAf;AACH,KAjBD,CAkBA,OAAML,KAAN,EAAa;AACTT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACA,aAAO,EAAP;AACH;AACJ,GAvBD;AAwBH","sourcesContent":["import { getRandomGame } from \"../redux/actions\"\n\nexport const pickRandomGame = (database) => {\n    const randomIndex = Math.floor(Math.random() * database.length)\n    const game = database[randomIndex]\n    database.splice(randomIndex, 1)\n    console.log(database)\n    return getGameDetails(game)\n}\n\nexport const getGameDetails = async (game) => {\n    try {\n        const apishot = await fetch(`https://api.rawg.io/api/games/${game.id}`)\n        const game_details = await apishot.json()\n        console.log(game_details)\n        return getGameScreenshots(game_details)\n    }\n    catch(error) {\n        console.log(error)\n        return {}\n    }\n}\n  \nexport function getGameScreenshots(game) {\n    return async function(dispatch) {\n        try {\n            const apishot = await fetch(`https://api.rawg.io/api/games/${game.id}/screenshots`)\n            const screenshots = await apishot.json()\n            const game_screenshots = screenshots.results.splice(0,3)\n            const gamess = {\n                id: game.id,\n                name: game.name,\n                altname: game.alternative_names,\n                screenshots: [...game_screenshots],\n                hints: {\n                    developer: game.developers[0].name,\n                    released: game.released,\n                    genre: game.genres[game.genres.length-1].name,\n                }\n            }\n            console.log(gamess)\n            return dispatch(getRandomGame(gamess))\n        }\n        catch(error) {\n            console.log(error)\n            return {}\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}