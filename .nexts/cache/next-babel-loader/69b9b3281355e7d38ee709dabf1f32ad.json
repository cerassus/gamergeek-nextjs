{"ast":null,"code":"import { connect } from \"react-redux\";\nimport GameNavigatorTop from \"../components/main/challenge/containers/GameNavigatorTop\";\nimport { pushNewAnswer, setHintCounter, startLoading, loadNewQuestion, showPopup, showHint, endGame } from \"../redux/actions\";\n\nconst mapState = state => ({\n  game_is_started: state.game_status.isStarted,\n  game_is_loading: state.game_status.isLoading,\n  random_game: state.random_game,\n  hintCounter: state.hint_counter,\n  test: state.test\n});\n\nconst mapDispatch = dispatch => ({\n  showPopup: popup => dispatch(showPopup(popup)),\n  endGame: () => dispatch(endGame()),\n  loadNewQuestion: db => dispatch(loadNewQuestion(db)),\n  startLoading: () => dispatch(startLoading()),\n  showHint: hint => dispatch(showHint(hint)),\n  setHintCounter: () => dispatch(setHintCounter()),\n  pushNewAnswer: answer => dispatch(pushNewAnswer(answer))\n});\n\nexport default connect(mapState, mapDispatch)(GameNavigatorTop);","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/redux_containers/GameNavigatorTop.js"],"names":["connect","GameNavigatorTop","pushNewAnswer","setHintCounter","startLoading","loadNewQuestion","showPopup","showHint","endGame","mapState","state","game_is_started","game_status","isStarted","game_is_loading","isLoading","random_game","hintCounter","hint_counter","test","mapDispatch","dispatch","popup","db","hint","answer"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,gBAAP,MAA6B,0DAA7B;AACA,SAASC,aAAT,EAAwBC,cAAxB,EAAwCC,YAAxC,EAAsDC,eAAtD,EAAuEC,SAAvE,EAAkFC,QAAlF,EAA4FC,OAA5F,QAA2G,kBAA3G;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,KAAK;AACzBC,EAAAA,eAAe,EAAED,KAAK,CAACE,WAAN,CAAkBC,SADV;AAEzBC,EAAAA,eAAe,EAAEJ,KAAK,CAACE,WAAN,CAAkBG,SAFV;AAGzBC,EAAAA,WAAW,EAAEN,KAAK,CAACM,WAHM;AAIzBC,EAAAA,WAAW,EAAEP,KAAK,CAACQ,YAJM;AAKzBC,EAAAA,IAAI,EAAET,KAAK,CAACS;AALa,CAAL,CAAtB;;AAQA,MAAMC,WAAW,GAAIC,QAAQ,KAAK;AAChCf,EAAAA,SAAS,EAAGgB,KAAD,IAAWD,QAAQ,CAACf,SAAS,CAACgB,KAAD,CAAV,CADE;AAEhCd,EAAAA,OAAO,EAAE,MAAMa,QAAQ,CAACb,OAAO,EAAR,CAFS;AAGhCH,EAAAA,eAAe,EAAGkB,EAAD,IAAQF,QAAQ,CAAChB,eAAe,CAACkB,EAAD,CAAhB,CAHD;AAIhCnB,EAAAA,YAAY,EAAE,MAAMiB,QAAQ,CAACjB,YAAY,EAAb,CAJI;AAKhCG,EAAAA,QAAQ,EAAGiB,IAAD,IAAUH,QAAQ,CAACd,QAAQ,CAACiB,IAAD,CAAT,CALI;AAMhCrB,EAAAA,cAAc,EAAE,MAAMkB,QAAQ,CAAClB,cAAc,EAAf,CANE;AAOhCD,EAAAA,aAAa,EAAGuB,MAAD,IAAYJ,QAAQ,CAACnB,aAAa,CAACuB,MAAD,CAAd;AAPH,CAAL,CAA7B;;AAUA,eAAezB,OAAO,CAACS,QAAD,EAAWW,WAAX,CAAP,CAA+BnB,gBAA/B,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport GameNavigatorTop from \"../components/main/challenge/containers/GameNavigatorTop\"\nimport { pushNewAnswer, setHintCounter, startLoading, loadNewQuestion, showPopup, showHint, endGame } from \"../redux/actions\"\n\nconst mapState = state => ({\n  game_is_started: state.game_status.isStarted,\n  game_is_loading: state.game_status.isLoading,\n  random_game: state.random_game,\n  hintCounter: state.hint_counter,\n  test: state.test,\n})\n\nconst mapDispatch  = dispatch => ({\n  showPopup: (popup) => dispatch(showPopup(popup)),\n  endGame: () => dispatch(endGame()),\n  loadNewQuestion: (db) => dispatch(loadNewQuestion(db)),\n  startLoading: () => dispatch(startLoading()),\n  showHint: (hint) => dispatch(showHint(hint)),\n  setHintCounter: () => dispatch(setHintCounter()),\n  pushNewAnswer: (answer) => dispatch(pushNewAnswer(answer)),\n})\n\nexport default connect(mapState, mapDispatch)(GameNavigatorTop);\n"]},"metadata":{},"sourceType":"module"}