{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/components/styled-components/ScoresTable.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  text-align: center;\\n  & span {\\n    font-weight: 700;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  font-family: Montserrat;\\n  font-size: clamp(1.2rem, 2.5vw, 1.6rem);\\n  letter-spacing: 0.05em;\\n  line-height: clamp(2rem, 2.5vw, 3rem);\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from \"styled-components\";\nvar ScoreRow = styled.tr(_templateObject());\n_c = ScoreRow;\nvar ScoreColumn = styled.td(_templateObject2());\n_c2 = ScoreColumn;\nexport default function ScoresTable(_ref) {\n  var _this = this;\n\n  var data = _ref.data;\n  var scores = data.slice(0, 15);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(ScoreRow, {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"No.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: scores.map(function (score, i) {\n        return /*#__PURE__*/_jsxDEV(ScoreRow, {\n          children: [/*#__PURE__*/_jsxDEV(ScoreColumn, {\n            children: i + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(ScoreColumn, {\n            children: score.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(ScoreColumn, {\n            children: score.Date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(ScoreColumn, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: score.Score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 26\n            }, _this), \" points\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, _this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c3 = ScoresTable;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ScoreRow\");\n$RefreshReg$(_c2, \"ScoreColumn\");\n$RefreshReg$(_c3, \"ScoresTable\");","map":{"version":3,"sources":["/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/components/styled-components/ScoresTable.js"],"names":["styled","ScoreRow","tr","ScoreColumn","td","ScoresTable","data","scores","slice","map","score","i","Name","Date","Score"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,QAAQ,GAAGD,MAAM,CAACE,EAAV,mBAAd;KAAMD,Q;AAON,IAAME,WAAW,GAAGH,MAAM,CAACI,EAAV,oBAAjB;MAAMD,W;AAON,eAAe,SAASE,WAAT,OAA+B;AAAA;;AAAA,MAARC,IAAQ,QAARA,IAAQ;AAC5C,MAAMC,MAAM,GAAGD,IAAI,CAACE,KAAL,CAAW,CAAX,EAAc,EAAd,CAAf;AACA,sBACE;AAAA,4BACE;AAAA,6BACE,QAAC,QAAD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAA,gBACGD,MAAM,CAACE,GAAP,CAAW,UAACC,KAAD,EAAQC,CAAR;AAAA,4BACV,QAAC,QAAD;AAAA,kCACE,QAAC,WAAD;AAAA,sBAAcA,CAAC,GAAG;AAAlB;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,QAAC,WAAD;AAAA,sBAAcD,KAAK,CAACE;AAApB;AAAA;AAAA;AAAA;AAAA,mBAFF,eAGE,QAAC,WAAD;AAAA,sBAAcF,KAAK,CAACG;AAApB;AAAA;AAAA;AAAA;AAAA,mBAHF,eAIE,QAAC,WAAD;AAAA,oCAAa;AAAA,wBAAOH,KAAK,CAACI;AAAb;AAAA;AAAA;AAAA;AAAA,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF;AAAA,WAAeH,CAAf;AAAA;AAAA;AAAA;AAAA,iBADU;AAAA,OAAX;AADH;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;MAxBuBN,W","sourcesContent":["import styled from \"styled-components\";\n\nconst ScoreRow = styled.tr`\n  font-family: Montserrat;\n  font-size: clamp(1.2rem, 2.5vw, 1.6rem);\n  letter-spacing: 0.05em;\n  line-height: clamp(2rem, 2.5vw, 3rem);\n`;\n\nconst ScoreColumn = styled.td`\n  text-align: center;\n  & span {\n    font-weight: 700;\n  }\n`;\n\nexport default function ScoresTable({ data }) {\n  const scores = data.slice(0, 15);\n  return (\n    <table>\n      <thead>\n        <ScoreRow>\n          <th>No.</th>\n          <th>Name</th>\n          <th>Date</th>\n          <th>Score</th>\n        </ScoreRow>\n      </thead>\n      <tbody>\n        {scores.map((score, i) => (\n          <ScoreRow key={i}>\n            <ScoreColumn>{i + 1}</ScoreColumn>\n            <ScoreColumn>{score.Name}</ScoreColumn>\n            <ScoreColumn>{score.Date}</ScoreColumn>\n            <ScoreColumn><span>{score.Score}</span> points</ScoreColumn>\n          </ScoreRow>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}