{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/cerassus/Websites/gamergeek-nextjs/pages/leaderboard.js\";\nimport Layout from \"../layout/Layout\";\nimport Container from \"../components/styled-components/Container\";\nimport ScoresTable from \"../components/styled-components/ScoresTable\";\nimport { scores } from \"../global/const\";\nimport mongoose from \"mongoose\";\nexport var __N_SSP = true;\nexport var connectMongoDatabase = function connectMongoDatabase() {\n  mongoose.connect(process.env.MONGODB_URI, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  });\n  mongoose.connection.on('connected', function () {\n    console.log('connected, sir!');\n  });\n  mongoose.connection.on('error', function (err) {\n    console.log('error, sir!', err);\n  });\n};\nexport default function LeaderboardPage(_ref) {\n  var game_results = _ref.game_results;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"Help\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      type: \"standard\",\n      width: \"min(95rem, 95%)\",\n      flex: \"column\",\n      leaderboard: true,\n      children: /*#__PURE__*/_jsxDEV(ScoresTable, {\n        data: scores\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = LeaderboardPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeaderboardPage\");","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/pages/leaderboard.js"],"names":["Layout","Container","ScoresTable","scores","mongoose","connectMongoDatabase","connect","process","env","MONGODB_URI","useNewUrlParser","useUnifiedTopology","connection","on","console","log","err","LeaderboardPage","game_results"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,2CAAtB;AACA,OAAOC,WAAP,MAAwB,6CAAxB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACxCD,EAAAA,QAAQ,CAACE,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,WAA7B,EAA0C;AACtCC,IAAAA,eAAe,EAAE,IADqB;AAEtCC,IAAAA,kBAAkB,EAAE;AAFkB,GAA1C;AAIAP,EAAAA,QAAQ,CAACQ,UAAT,CAAoBC,EAApB,CAAuB,WAAvB,EAAoC,YAAM;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,GAFD;AAGAX,EAAAA,QAAQ,CAACQ,UAAT,CAAoBC,EAApB,CAAuB,OAAvB,EAAgC,UAACG,GAAD,EAAS;AACvCF,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BC,GAA3B;AACD,GAFD;AAGD,CAXM;AAcP,eAAe,SAASC,eAAT,OAAyC;AAAA,MAAfC,YAAe,QAAfA,YAAe;AACtD,sBACE,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA,2BAEI,QAAC,SAAD;AAAW,MAAA,IAAI,EAAC,UAAhB;AAA2B,MAAA,KAAK,EAAC,iBAAjC;AAAmD,MAAA,IAAI,EAAC,QAAxD;AAAiE,MAAA,WAAW,MAA5E;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEf;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;KATuBc,e","sourcesContent":["import Layout from \"../layout/Layout\"\nimport Container from \"../components/styled-components/Container\"\nimport ScoresTable from \"../components/styled-components/ScoresTable\"\nimport { scores } from \"../global/const\"\nimport mongoose from \"mongoose\"\n\nexport const connectMongoDatabase = () => {\n  mongoose.connect(process.env.MONGODB_URI, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n    })\n  mongoose.connection.on('connected', () => {\n    console.log('connected, sir!')\n  })\n  mongoose.connection.on('error', (err) => {\n    console.log('error, sir!', err)\n  })\n}\n\n\nexport default function LeaderboardPage({game_results}) {\n  return (\n    <Layout title=\"Help\"> \n\n        <Container type=\"standard\" width=\"min(95rem, 95%)\" flex=\"column\" leaderboard>\n          <ScoresTable data={scores} />\n        </Container>\n    </Layout>\n  )\n}\n\nexport async function getServerSideProps(context) {\n  const game_results = ['hejho', 'hejho2']\n  connectMongoDatabase()\n  \n  {console.log(game_results)}\n  return  { props: { game_results } }\n}"]},"metadata":{},"sourceType":"module"}