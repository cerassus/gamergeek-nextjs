{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\nimport { useState, useEffect, Fragment } from \"react\";\nimport { getGameDetails, fetchNewGameDatabase } from \"../../../global/fetch\";\nimport moment from 'moment';\nimport * as SC from \"../../styled-components/Popup\";\nvar game_difficulty = [\"easy\", \"medium\", \"hard\"];\nexport default function TableComponent(_ref) {\n  var random_game = _ref.random_game,\n      startGame = _ref.startGame,\n      startLoading = _ref.startLoading,\n      endGame = _ref.endGame,\n      user_score = _ref.user_score,\n      clearUserScore = _ref.clearUserScore,\n      newGameDatabase = _ref.newGameDatabase,\n      showRandomGame = _ref.showRandomGame,\n      pushNewAnswer = _ref.pushNewAnswer,\n      showHint = _ref.showHint,\n      clearHint = _ref.clearHint,\n      game_status = _ref.game_status,\n      game_database = _ref.game_database,\n      removeItemFromDatabase = _ref.removeItemFromDatabase;\n\n  var _useState = useState(false),\n      answerTimeStart = _useState[0],\n      setAnswerTimeStart = _useState[1];\n\n  var _useState2 = useState(0),\n      hintCounter = _useState2[0],\n      setHintCounter = _useState2[1];\n\n  var _useState3 = useState(false),\n      hints = _useState3[0],\n      setHints = _useState3[1];\n\n  var _useState4 = useState(false),\n      difficulty = _useState4[0],\n      setDifficulty = _useState4[1];\n\n  var _useState5 = useState(true),\n      usernamePanel = _useState5[0],\n      showUsernamePanel = _useState5[1];\n\n  var _useState6 = useState(false),\n      warning = _useState6[0],\n      setWarning = _useState6[1];\n\n  var _useState7 = useState(false),\n      popup = _useState7[0],\n      switchPopup = _useState7[1];\n\n  var _useState8 = useState(false),\n      summary = _useState8[0],\n      showSummary = _useState8[1];\n\n  var _useState9 = useState(false),\n      username = _useState9[0],\n      setUsername = _useState9[1];\n\n  var startNewGame = function startNewGame() {\n    switchPopup(true);\n  };\n\n  var loadNewQuestion = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var randomIndex;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              randomIndex = Math.floor(Math.random() * game_database.length);\n              !game_status.isLoading && startLoading();\n              clearHint();\n              setHintCounter(0);\n\n              if (!(game_database === 0)) {\n                _context.next = 8;\n                break;\n              }\n\n              endGame();\n              _context.next = 14;\n              break;\n\n            case 8:\n              _context.t0 = showRandomGame;\n              _context.next = 11;\n              return getGameDetails(game_database[randomIndex]);\n\n            case 11:\n              _context.t1 = _context.sent;\n              (0, _context.t0)(_context.t1);\n              removeItemFromDatabase(randomIndex);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadNewQuestion() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var getNewDatabase = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              startLoading();\n              _context2.t0 = newGameDatabase;\n              _context2.next = 4;\n              return fetchNewGameDatabase(difficulty - 1);\n\n            case 4:\n              _context2.t1 = _context2.sent;\n              (0, _context2.t0)(_context2.t1);\n              _context2.next = 8;\n              return loadNewQuestion();\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getNewDatabase() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var quitGame = function quitGame() {\n    clearHint();\n    setHintCounter(0);\n    setHints(false);\n    showUsernamePanel(true);\n    setDifficulty(false);\n    setUsername(false);\n    setAnswerTimeStart(false);\n    switchPopup(false);\n    user_score.length > 0 && showSummary(true);\n  };\n\n  var getHint = function getHint() {\n    showHint.apply(void 0, _toConsumableArray(hints.splice(Math.floor(Math.random() * hints.length), 1)));\n    setHintCounter(function (hintCounter) {\n      return hintCounter + 1;\n    });\n  };\n\n  var handleTyping = function handleTyping(e) {\n    0 < e.target.value.length && e.target.value.length < 3 ? setWarning(true) : setWarning(false); // check if username doesn't match one of usernames in MongoDatabase\n\n    setUsername(e.target.value);\n  };\n\n  var validateUserName = function validateUserName() {\n    warning || !username ? alert('Wrong username! Try different one!') : showUsernamePanel(false);\n  };\n\n  var close_summary = function close_summary() {\n    showSummary(false);\n    clearUserScore();\n  };\n\n  var checkAnswer = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(answer) {\n      var answerTimeEnd, user_answer;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              answerTimeEnd = moment();\n              user_answer = answer === random_game.name ? {\n                title: random_game.name,\n                time: answerTimeEnd.diff(answerTimeStart),\n                score: Number((1000 / answerTimeEnd.diff(answerTimeStart) * 10000 * ((10 - hintCounter) / 10)).toFixed()),\n                correct: true,\n                hints_used: hintCounter\n              } : {\n                title: random_game.name,\n                time: answerTimeEnd.diff(answerTimeStart),\n                score: 0,\n                correct: false,\n                skip: answer === \"player_skipped_game\" ? true : false,\n                hints_used: hintCounter\n              };\n              pushNewAnswer(user_answer);\n              loadNewQuestion();\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function checkAnswer(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    !game_status.isLoading && setAnswerTimeStart(moment());\n    !game_status.isStarted && quitGame();\n  }, [game_status]);\n  useEffect(function () {\n    random_game && setHints(random_game.hints);\n  }, [random_game]);\n  useEffect(function () {\n    if (difficulty) {\n      switchPopup(false);\n      startGame();\n      getNewDatabase();\n    }\n  }, [difficulty]);\n  useEffect(function () {\n    game_database.length === 120 && loadNewQuestion();\n  }, [game_database]);\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsx(Table, {\n      top: true,\n      children: !game_status.isStarted ? /*#__PURE__*/_jsx(Typography, {\n        link: true,\n        onClick: function onClick() {\n          return startNewGame();\n        },\n        children: \"start a new challenge\"\n      }, \"key0015\") : game_status.isLoading ? /*#__PURE__*/_jsx(Typography, {\n        link: true,\n        children: \"loading\"\n      }, 'key0016') : /*#__PURE__*/_jsxs(Fragment, {\n        children: [hintCounter < 3 && /*#__PURE__*/_jsx(Typography, {\n          link: true,\n          onClick: function onClick() {\n            return getHint();\n          },\n          children: \"get a hint\"\n        }, \"key0011\"), /*#__PURE__*/_jsx(Typography, {\n          link: true,\n          onClick: function onClick() {\n            return checkAnswer(\"player_skipped_game\");\n          },\n          children: \"skip\"\n        }, \"key0012\"), /*#__PURE__*/_jsx(Typography, {\n          link: true,\n          onClick: function onClick() {\n            return endGame();\n          },\n          children: \"quit\"\n        }, \"key0013\")]\n      })\n    }), /*#__PURE__*/_jsx(Table, {\n      bottom: true,\n      children: game_status.isStarted && !game_status.isLoading && random_game.answers ? random_game.answers.map(function (answer, i) {\n        return /*#__PURE__*/_jsx(Typography, {\n          answer: true,\n          onClick: function onClick(answer) {\n            return checkAnswer(answer.target.innerText);\n          },\n          children: answer\n        }, \"key0021\" + i);\n      }) : \"\"\n    }), /*#__PURE__*/_jsx(SC.Popup, {\n      title: \"Hello gamergeek!\",\n      switch_popup: popup,\n      popupIsClosed: function popupIsClosed() {\n        return quitGame();\n      },\n      children: usernamePanel ? /*#__PURE__*/_jsxs(Fragment, {\n        children: [/*#__PURE__*/_jsx(SC.WelcomeText, {\n          children: \"Let\\u2019s see how good you are! Starting from your name...\"\n        }), /*#__PURE__*/_jsx(SC.TextInput, {\n          type: \"text\",\n          onChange: function onChange(e) {\n            return handleTyping(e);\n          }\n        }), /*#__PURE__*/_jsx(SC.TextInputHint, {\n          visible: warning,\n          children: \"Wrong nickname\"\n        }), /*#__PURE__*/_jsx(SC.PlayButton, {\n          onClick: function onClick() {\n            return validateUserName();\n          },\n          children: \"Let's Play!\"\n        })]\n      }) : /*#__PURE__*/_jsxs(Fragment, {\n        children: [/*#__PURE__*/_jsx(SC.WelcomeText, {\n          center: true,\n          children: \"Set game difficulty...\"\n        }), game_difficulty.map(function (diff_lvl, i) {\n          return /*#__PURE__*/_jsx(SC.PlayButton, {\n            onClick: function onClick() {\n              return setDifficulty(i + 1);\n            },\n            children: diff_lvl\n          }, \"key0011\" + i);\n        })]\n      })\n    }), /*#__PURE__*/_jsx(SC.Popup, {\n      title: \"Summary\",\n      switch_popup: summary,\n      popupIsClosed: function popupIsClosed() {\n        return close_summary();\n      },\n      children: user_score.length > 0 && summary && /*#__PURE__*/_jsxs(\"div\", {\n        style: {\n          display: \"flex\",\n          width: \"95%\",\n          padding: \"2rem 0\",\n          justifyContent: \"space-between\"\n        },\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          style: {\n            width: \"50%\",\n            margin: \"1rem\"\n          },\n          children: [/*#__PURE__*/_jsx(SC.WelcomeText, {\n            children: \"The Game\"\n          }), /*#__PURE__*/_jsxs(\"table\", {\n            children: [/*#__PURE__*/_jsxs(\"tr\", {\n              children: [/*#__PURE__*/_jsx(SC.TD, {\n                children: \"Correct answers:\"\n              }), /*#__PURE__*/_jsx(SC.TD, {\n                children: user_score.filter(function (x) {\n                  return x.correct;\n                }).length\n              })]\n            }), /*#__PURE__*/_jsxs(\"tr\", {\n              children: [/*#__PURE__*/_jsx(SC.TD, {\n                children: \"Wrong answers:\"\n              }), /*#__PURE__*/_jsx(SC.TD, {\n                children: user_score.filter(function (x) {\n                  return !x.correct;\n                }).length\n              })]\n            }), /*#__PURE__*/_jsxs(\"tr\", {\n              children: [/*#__PURE__*/_jsx(SC.TD, {\n                children: \"Skipped answers:\"\n              }), /*#__PURE__*/_jsx(SC.TD, {\n                children: user_score.filter(function (x) {\n                  return x.skip;\n                }).length\n              })]\n            }), /*#__PURE__*/_jsxs(\"tr\", {\n              children: [/*#__PURE__*/_jsx(SC.TD, {\n                children: \"Hints used:\"\n              }), /*#__PURE__*/_jsx(SC.TD, {\n                children: user_score.map(function (x) {\n                  return x = x.hints_used;\n                }).reduce(function (acc, y) {\n                  return acc + y;\n                })\n              })]\n            }), /*#__PURE__*/_jsxs(\"tr\", {\n              children: [/*#__PURE__*/_jsx(SC.TD, {\n                children: \"Quickest response:\"\n              }), /*#__PURE__*/_jsx(SC.TD, {\n                children: user_score.map(function (x) {\n                  return x = x.time;\n                }).sort(function (a, b) {\n                  return a - b;\n                })[0] / 1000 + \" sec\"\n              })]\n            }), /*#__PURE__*/_jsxs(\"tr\", {\n              children: [/*#__PURE__*/_jsx(SC.TD, {\n                children: \"Slowest response:\"\n              }), /*#__PURE__*/_jsx(SC.TD, {\n                children: user_score.map(function (x) {\n                  return x = x.time;\n                }).sort(function (a, b) {\n                  return a - b;\n                })[user_score.length - 1] / 1000 + \" sec\"\n              })]\n            }), /*#__PURE__*/_jsxs(\"tr\", {\n              children: [/*#__PURE__*/_jsx(SC.TD, {\n                children: \"Average time response:\"\n              }), /*#__PURE__*/_jsx(SC.TD, {\n                children: (user_score.map(function (x) {\n                  return x = x.time;\n                }).reduce(function (acc, x) {\n                  return acc + x;\n                }) / user_score.length / 1000).toFixed(3) + \" sec\"\n              })]\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          style: {\n            width: \"50%\",\n            margin: \"1rem\",\n            position: \"relative\"\n          },\n          children: [/*#__PURE__*/_jsx(SC.WelcomeText, {\n            children: \"Score:\"\n          }), /*#__PURE__*/_jsxs(SC.ScoreText, {\n            children: [user_score.map(function (score) {\n              return score = score.score;\n            }).reduce(function (acc, score) {\n              return acc + score;\n            }).toLocaleString(), \" \", /*#__PURE__*/_jsx(\"span\", {\n              children: \"points\"\n            })]\n          }), /*#__PURE__*/_jsx(SC.PlayButton, {\n            summary: true,\n            onClick: function onClick() {\n              return close_summary();\n            },\n            children: \"Close\"\n          })]\n        })]\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}