{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from \"redux\";\nimport * as actions from \"./actions\";\n\nvar game_database = function game_database() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.NEW_GAME_DATABASE:\n      return action.database;\n\n    case actions.REMOVE_ITEM:\n      return _toConsumableArray(state.filter(function (x, i) {\n        return i !== action.index && x;\n      }));\n\n    case actions.END_GAME:\n      return [];\n\n    default:\n      return state;\n  }\n};\n\nvar random_game = function random_game() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.SHOW_RANDOM_GAME:\n      return action.game;\n\n    case actions.END_GAME:\n      return \"\";\n\n    default:\n      return state;\n  }\n};\n\nvar user_score = function user_score() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.NEW_ANSWER:\n      {\n        console.log([].concat(_toConsumableArray(state), [action.answer]));\n        return [].concat(_toConsumableArray(state), [action.answer]);\n      }\n\n    case actions.CLEAR_USER_SCORE:\n      return [];\n\n    default:\n      return state;\n  }\n};\n\nvar hints_array = function hints_array() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.SHOW_HINT:\n      {\n        console.log([].concat(_toConsumableArray(state), [action.hint]));\n        return [].concat(_toConsumableArray(state), [action.hint]);\n      }\n\n    case actions.CLEAR_HINT:\n      return [];\n\n    default:\n      return state;\n  }\n};\n\nvar game_status = function game_status() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isStarted: false,\n    isLoading: false\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.START_GAME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isStarted: true\n      });\n\n    case actions.START_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: true\n      });\n\n    case actions.RESUME_GAME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false\n      });\n\n    case actions.END_GAME:\n      return {\n        isLoading: false,\n        isStarted: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  random_game: random_game,\n  user_score: user_score,\n  hints_array: hints_array,\n  game_status: game_status,\n  game_database: game_database\n});","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/redux/reducers.js"],"names":["combineReducers","actions","game_database","state","action","type","NEW_GAME_DATABASE","database","REMOVE_ITEM","filter","x","i","index","END_GAME","random_game","SHOW_RANDOM_GAME","game","user_score","NEW_ANSWER","console","log","answer","CLEAR_USER_SCORE","hints_array","SHOW_HINT","hint","CLEAR_HINT","game_status","isStarted","isLoading","START_GAME","START_LOADING","RESUME_GAME"],"mappings":"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","sourcesContent":["import { combineReducers } from \"redux\"\nimport * as actions from \"./actions\"\n\n\nconst game_database = (state = [], action) => {\n    switch(action.type) {\n        case actions.NEW_GAME_DATABASE: return action.database \n        case actions.REMOVE_ITEM: return ([\n            ...state.filter((x,i) => i !== action.index && x)\n          ])\n        case actions.END_GAME: return []\n        default: return state\n    } \n}\n\nconst random_game = (state = \"\", action) => {\n    switch(action.type) {\n        case actions.SHOW_RANDOM_GAME: return action.game \n        case actions.END_GAME: return \"\"\n        default: return state\n    }\n}\n    \nconst user_score = (state = [], action) => {\n    switch(action.type) {\n        case actions.NEW_ANSWER: {\n            console.log([...state, action.answer])\n            return [...state, action.answer]\n        } \n        case actions.CLEAR_USER_SCORE: return []\n        default: return state\n    }\n}\n\nconst hints_array = (state = [], action) => {\n    switch(action.type) {\n        case actions.SHOW_HINT: {\n            console.log([...state, action.hint])\n            return [...state, action.hint]\n        }\n        case actions.CLEAR_HINT: return []\n        default: return state\n    }\n}\n\nconst game_status = (state = { isStarted: false, isLoading: false }, action) => {\n    switch(action.type) {\n        case actions.START_GAME: return {\n            ...state,\n            isStarted: true,\n        }\n        case actions.START_LOADING: return {\n            ...state,\n            isLoading: true,\n        }\n        case actions.RESUME_GAME: return {\n            ...state,\n            isLoading: false,\n        }\n        case actions.END_GAME: return {\n            isLoading: false,\n            isStarted: false,\n        }\n        default: return state\n    }\n}\n\n\nexport default combineReducers({\n  random_game,\n  user_score,\n  hints_array,\n  game_status,\n  game_database,\n})"]},"metadata":{},"sourceType":"module"}