{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { getGameDetails } from \"../global/fetchGameDetails\";\nimport store from \"./store\";\nvar START_GAME = \"START_GAME\";\nvar RESUME_GAME = \"RESUME_GAME\";\nvar END_GAME = \"END_GAME\";\nvar SHOW_RANDOM_GAME = \"SHOW_RANDOM_GAME\";\nvar NEW_ANSWER = \"NEW_ANSWER\";\nvar CLEAR_USER_SCORE = \"CLEAR_USER_SCORE\";\nvar START_LOADING = \"START_LOADING\";\nvar SHOW_HINT = \"SHOW_HINT\";\nvar NEW_GAME_DATABASE = \"NEW_GAME_DATABASE\";\nvar REMOVE_ITEM = \"REMOVE_ITEM\";\nvar SHOW_POPUP = \"SHOW_POPUP\";\nvar SET_HINT_COUNTER = \"SET_HINT_COUNTER\";\nvar TEST = \"TEST\";\n\nvar startGame = function startGame() {\n  return {\n    type: START_GAME\n  };\n};\n\nvar resumeGame = function resumeGame() {\n  return {\n    type: RESUME_GAME\n  };\n};\n\nvar endGame = function endGame() {\n  return {\n    type: END_GAME\n  };\n};\n\nvar pushNewAnswer = function pushNewAnswer(answer) {\n  return {\n    type: NEW_ANSWER,\n    answer: answer\n  };\n};\n\nvar showRandomGame = function showRandomGame(game) {\n  return {\n    type: SHOW_RANDOM_GAME,\n    game: game\n  };\n};\n\nvar startLoading = function startLoading() {\n  return {\n    type: START_LOADING\n  };\n};\n\nvar showHint = function showHint(hint) {\n  return {\n    type: SHOW_HINT,\n    hint: hint\n  };\n};\n\nvar clearUserScore = function clearUserScore() {\n  return {\n    type: CLEAR_USER_SCORE\n  };\n};\n\nvar newGameDatabase = function newGameDatabase(database) {\n  return {\n    type: NEW_GAME_DATABASE,\n    database: database\n  };\n};\n\nvar removeItemFromDatabase = function removeItemFromDatabase(index) {\n  return {\n    type: REMOVE_ITEM,\n    index: index\n  };\n};\n\nvar showPopup = function showPopup(popup) {\n  return {\n    type: SHOW_POPUP,\n    popup: popup\n  };\n};\n\nvar setHintCounter = function setHintCounter() {\n  return {\n    type: SET_HINT_COUNTER\n  };\n};\n\nvar test = function test(payload) {\n  return {\n    type: TEST,\n    payload: payload\n  };\n};\n\nfunction loadNewQuestion() {\n  var difficulty = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var game_database, randomIndex, fetchNewGameDatabase, _fetchNewGameDatabase;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _fetchNewGameDatabase = function _fetchNewGameDatabase3() {\n                _fetchNewGameDatabase = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(difficulty) {\n                  var database_array, page, i, apishot, data;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          database_array = [];\n                          page = 0;\n                          _context.t0 = difficulty;\n                          _context.next = _context.t0 === 0 ? 5 : _context.t0 === 1 ? 7 : _context.t0 === 2 ? 9 : 11;\n                          break;\n\n                        case 5:\n                          page = 1;\n                          return _context.abrupt(\"break\", 12);\n\n                        case 7:\n                          page = 4;\n                          return _context.abrupt(\"break\", 12);\n\n                        case 9:\n                          page = 7;\n                          return _context.abrupt(\"break\", 12);\n\n                        case 11:\n                          return _context.abrupt(\"return\", []);\n\n                        case 12:\n                          i = 0;\n\n                        case 13:\n                          if (!(i < 3)) {\n                            _context.next = 31;\n                            break;\n                          }\n\n                          _context.prev = 14;\n                          _context.next = 17;\n                          return fetch(\"https://api.rawg.io/api/games?page=\".concat(page + i, \"&page_size=40\"));\n\n                        case 17:\n                          apishot = _context.sent;\n                          _context.next = 20;\n                          return apishot.json();\n\n                        case 20:\n                          data = _context.sent;\n                          database_array.push(data.results.map(function (game) {\n                            return game = game.id;\n                          }));\n                          _context.next = 28;\n                          break;\n\n                        case 24:\n                          _context.prev = 24;\n                          _context.t1 = _context[\"catch\"](14);\n                          console.log(_context.t1);\n                          return _context.abrupt(\"return\", []);\n\n                        case 28:\n                          i++;\n                          _context.next = 13;\n                          break;\n\n                        case 31:\n                          _context.next = 33;\n                          return dispatch(newGameDatabase(database_array.flat()));\n\n                        case 33:\n                          return _context.abrupt(\"return\", dispatch(loadNewQuestion()));\n\n                        case 34:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee, null, [[14, 24]]);\n                }));\n                return _fetchNewGameDatabase.apply(this, arguments);\n              };\n\n              fetchNewGameDatabase = function _fetchNewGameDatabase2(_x2) {\n                return _fetchNewGameDatabase.apply(this, arguments);\n              };\n\n              game_database = store.getState().game_database;\n              randomIndex = Math.floor(Math.random() * game_database.length);\n\n              if (!(game_database.length === 0)) {\n                _context2.next = 8;\n                break;\n              }\n\n              difficulty ? fetchNewGameDatabase(difficulty - 1) : dispatch(endGame());\n              _context2.next = 22;\n              break;\n\n            case 8:\n              _context2.t0 = dispatch;\n              _context2.t2 = showRandomGame;\n              _context2.next = 12;\n              return getGameDetails(game_database[randomIndex]);\n\n            case 12:\n              _context2.t3 = _context2.sent;\n\n              if (_context2.t3) {\n                _context2.next = 15;\n                break;\n              }\n\n              _context2.t3 = 'error';\n\n            case 15:\n              _context2.t4 = _context2.t3;\n              _context2.t1 = (0, _context2.t2)(_context2.t4);\n\n              if (_context2.t1) {\n                _context2.next = 19;\n                break;\n              }\n\n              _context2.t1 = 'error';\n\n            case 19:\n              _context2.t5 = _context2.t1;\n              (0, _context2.t0)(_context2.t5);\n              dispatch(removeItemFromDatabase(randomIndex));\n\n            case 22:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}\n\nexport { START_GAME, RESUME_GAME, END_GAME, SHOW_RANDOM_GAME, NEW_ANSWER, CLEAR_USER_SCORE, START_LOADING, SHOW_HINT, NEW_GAME_DATABASE, REMOVE_ITEM, SHOW_POPUP, SET_HINT_COUNTER, TEST, startGame, resumeGame, endGame, pushNewAnswer, showRandomGame, startLoading, showHint, clearUserScore, newGameDatabase, removeItemFromDatabase, showPopup, setHintCounter, test, loadNewQuestion };","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/redux/actions.js"],"names":["getGameDetails","store","START_GAME","RESUME_GAME","END_GAME","SHOW_RANDOM_GAME","NEW_ANSWER","CLEAR_USER_SCORE","START_LOADING","SHOW_HINT","NEW_GAME_DATABASE","REMOVE_ITEM","SHOW_POPUP","SET_HINT_COUNTER","TEST","startGame","type","resumeGame","endGame","pushNewAnswer","answer","showRandomGame","game","startLoading","showHint","hint","clearUserScore","newGameDatabase","database","removeItemFromDatabase","index","showPopup","popup","setHintCounter","test","payload","loadNewQuestion","difficulty","dispatch","fetchNewGameDatabase","database_array","page","i","fetch","apishot","json","data","push","results","map","id","console","log","flat","game_database","getState","randomIndex","Math","floor","random","length"],"mappings":"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","sourcesContent":["import { getGameDetails } from \"../global/fetchGameDetails\"\nimport store  from \"./store\"\n\nconst START_GAME = \"START_GAME\";\nconst RESUME_GAME = \"RESUME_GAME\";\nconst END_GAME = \"END_GAME\";\nconst SHOW_RANDOM_GAME = \"SHOW_RANDOM_GAME\";\nconst NEW_ANSWER = \"NEW_ANSWER\";\nconst CLEAR_USER_SCORE = \"CLEAR_USER_SCORE\";\nconst START_LOADING = \"START_LOADING\";\nconst SHOW_HINT = \"SHOW_HINT\";\nconst NEW_GAME_DATABASE = \"NEW_GAME_DATABASE\";\nconst REMOVE_ITEM = \"REMOVE_ITEM\";\nconst SHOW_POPUP = \"SHOW_POPUP\";\nconst SET_HINT_COUNTER = \"SET_HINT_COUNTER\";\n\nconst TEST = \"TEST\";\n\nconst startGame = () => ({\n    type: START_GAME,\n})\n\nconst resumeGame = () => ({\n    type: RESUME_GAME,\n})\n\nconst endGame = () => ({\n    type: END_GAME,\n})\n\nconst pushNewAnswer = (answer) => ({\n    type: NEW_ANSWER,\n    answer,\n})\n\nconst showRandomGame = (game) => ({\n    type: SHOW_RANDOM_GAME,\n    game,\n})\nconst startLoading = () => ({\n    type: START_LOADING,\n})\n\nconst showHint = (hint) => ({\n    type: SHOW_HINT,\n    hint,\n})\n\nconst clearUserScore = () => ({\n    type: CLEAR_USER_SCORE,\n})\n\nconst newGameDatabase = (database) => ({\n    type: NEW_GAME_DATABASE,\n    database,\n})\n\nconst removeItemFromDatabase = (index) => ({\n    type: REMOVE_ITEM,\n    index,\n})\n\nconst showPopup = (popup) => ({\n    type: SHOW_POPUP,\n    popup,\n})\n\nconst setHintCounter = () => ({\n    type: SET_HINT_COUNTER,\n})\n\nconst test = (payload) => ({\n    type: TEST,\n    payload,\n})\n\nfunction loadNewQuestion(difficulty = 0) {\n    return async function(dispatch) {\n        const game_database = store.getState().game_database\n        const randomIndex = Math.floor(Math.random() * game_database.length)\n        if(game_database.length === 0) {\n            difficulty\n                ? fetchNewGameDatabase(difficulty-1)\n                : dispatch(endGame()) \n        } else {\n          dispatch(showRandomGame(await getGameDetails(game_database[randomIndex]) || 'error')|| 'error')\n          dispatch(removeItemFromDatabase(randomIndex))\n        }\n        async function fetchNewGameDatabase(difficulty) {\n                const database_array = []\n                let page = 0\n                switch(difficulty) {\n                    case 0: {page = 1; break;}\n                    case 1: {page = 4; break;}\n                    case 2: {page = 7; break;}\n                    default: return []\n                }\n                for(let i=0; i<3; i++) {\n                    try {\n                        const apishot = await fetch(`https://api.rawg.io/api/games?page=${page+i}&page_size=40`)\n                        const data = await apishot.json()\n                        database_array.push(data.results.map(game => game = game.id))\n                    }\n                    catch(error) {\n                        console.log(error)\n                        return []\n                    }\n                }\n                await dispatch(newGameDatabase(database_array.flat()))\n                return dispatch(loadNewQuestion())\n            }\n    }\n}\n\nexport {\n     START_GAME, RESUME_GAME, END_GAME,SHOW_RANDOM_GAME, NEW_ANSWER, CLEAR_USER_SCORE ,\n     START_LOADING, SHOW_HINT, NEW_GAME_DATABASE, REMOVE_ITEM, SHOW_POPUP , SET_HINT_COUNTER ,TEST,\n     startGame, resumeGame, endGame ,pushNewAnswer, showRandomGame, startLoading,showHint ,\n     clearUserScore, newGameDatabase , removeItemFromDatabase , showPopup , setHintCounter,\n     test , loadNewQuestion }\n\n\n"]},"metadata":{},"sourceType":"module"}