{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/Table.js\";\nimport Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\nimport { useState, useEffect, Fragment } from \"react\";\nimport { pickRandomGame } from \"../../../global/fetch\";\nimport { game_database } from \"../../../global/const\";\nimport moment from 'moment';\nimport Popup, * as SC from \"../../styled-components/Popup\";\nconst game_difficulty = [\"easy\", \"medium\", \"hard\"];\nexport default function TableComponent({\n  random_game,\n  startGame,\n  startLoading,\n  endGame,\n  showRandomGame,\n  pushNewAnswer,\n  showHint,\n  hideHint,\n  game_status\n}) {\n  const {\n    0: answerTimeStart,\n    1: setAnswerTimeStart\n  } = useState(false);\n  const {\n    0: hintCounter,\n    1: setHintCounter\n  } = useState(0);\n  const {\n    0: hints,\n    1: setHints\n  } = useState(false);\n  const {\n    0: difficulty,\n    1: setDifficulty\n  } = useState(false);\n  const {\n    0: usernamePanel,\n    1: showUsernamePanel\n  } = useState(true);\n  const {\n    0: warning,\n    1: setWarning\n  } = useState(false);\n\n  const handleTyping = e => {\n    0 < e.target.value.length && e.target.value.length < 3 ? setWarning(true) : setWarning(false); // check if username doesn't match one of usernames in MongoDatabase\n  };\n\n  const startNewGame = () => {\n    switch_popup(true);\n\n    if (difficulty) {\n      startGame(difficulty);\n      loadNewQuestion();\n    }\n  };\n\n  const loadNewQuestion = async () => {\n    startLoading();\n    hideHint();\n    setHintCounter(0);\n    showRandomGame(await pickRandomGame(game_database));\n  };\n\n  const quitGame = () => {\n    hideHint();\n    setHintCounter(0);\n    showUsernamePanel(true);\n    setDifficulty(false);\n    endGame();\n  };\n\n  const getHint = () => {\n    showHint(...hints.splice(Math.floor(Math.random() * hints.length), 1));\n    setHintCounter(hintCounter => hintCounter + 1);\n  };\n\n  const switch_popup = boolean => boolean;\n\n  const checkAnswer = async answer => {\n    const answerTimeEnd = moment();\n    const user_answer = answer === random_game.name ? {\n      title: random_game.name,\n      time: answerTimeEnd.diff(answerTimeStart),\n      score: Number((1000 / answerTimeEnd.diff(answerTimeStart) * 10000 * ((10 - hintCounter) / 10)).toFixed()),\n      correct: true,\n      hints_used: hintCounter\n    } : {\n      title: random_game.name,\n      time: answerTimeEnd.diff(answerTimeStart),\n      score: 0,\n      correct: false,\n      skip: answer === \"player_skipped_game\" ? true : false,\n      hints_used: hintCounter\n    };\n    pushNewAnswer(user_answer);\n    loadNewQuestion();\n  };\n\n  useEffect(() => {\n    !game_status.isLoading && setAnswerTimeStart(moment());\n  }, [game_status]);\n  useEffect(() => {\n    random_game && setHints(random_game.hints);\n  }, [random_game]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      top: true,\n      children: !game_status.isStarted ? /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: () => startNewGame(),\n        children: \"start a new challenge\"\n      }, \"key0015\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this) : game_status.isLoading ? /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        children: \"loading\"\n      }, 'key0016', false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 12\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [hintCounter < 3 && /*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          onClick: () => getHint(),\n          children: \"get a hint\"\n        }, \"key0011\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          onClick: () => checkAnswer(\"player_skipped_game\"),\n          children: \"skip\"\n        }, \"key0012\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          onClick: () => quitGame(),\n          children: \"quit\"\n        }, \"key0013\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      bottom: true,\n      children: game_status.isStarted && !game_status.isLoading && random_game.answers ? random_game.answers.map((answer, i) => /*#__PURE__*/_jsxDEV(Typography, {\n        answer: true,\n        onClick: answer => checkAnswer(answer.target.innerText),\n        children: answer\n      }, \"key0021\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)) : ``\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      title: \"Hello gamergeek!\",\n      switch_popup: switch_popup,\n      children: usernamePanel ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(SC.WelcomeText, {\n          children: \"Let\\u2019s see how good you are! Starting from your name...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(SC.TextInput, {\n          type: \"text\",\n          onChange: () => handleTyping()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(SC.TextInputHint, {\n          visible: warning,\n          children: \"Wrong nickname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(SC.PlayButton, {\n          onClick: () => showUsernamePanel(false),\n          children: \"Let's Play!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(SC.WelcomeText, {\n          center: true,\n          children: \"Set game difficulty...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this), game_difficulty.map((diff_lvl, i) => /*#__PURE__*/_jsxDEV(SC.PlayButton, {\n          onClick: () => {\n            switch_popup(false);\n            setDifficulty(diff_lvl);\n          },\n          children: diff_lvl\n        }, \"key0011\" + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/Table.js"],"names":["Table","Typography","useState","useEffect","Fragment","pickRandomGame","game_database","moment","Popup","SC","game_difficulty","TableComponent","random_game","startGame","startLoading","endGame","showRandomGame","pushNewAnswer","showHint","hideHint","game_status","answerTimeStart","setAnswerTimeStart","hintCounter","setHintCounter","hints","setHints","difficulty","setDifficulty","usernamePanel","showUsernamePanel","warning","setWarning","handleTyping","e","target","value","length","startNewGame","switch_popup","loadNewQuestion","quitGame","getHint","splice","Math","floor","random","boolean","checkAnswer","answer","answerTimeEnd","user_answer","name","title","time","diff","score","Number","toFixed","correct","hints_used","skip","isLoading","isStarted","answers","map","i","innerText","diff_lvl"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,+BAAlB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,OAA9C;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,EAAc,KAAKC,EAAnB,MAA2B,+BAA3B;AAEA,MAAMC,eAAe,GAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,MAAnB,CAAxB;AAEA,eAAe,SAASC,cAAT,CAAwB;AACnCC,EAAAA,WADmC;AACtBC,EAAAA,SADsB;AACXC,EAAAA,YADW;AACGC,EAAAA,OADH;AAEnCC,EAAAA,cAFmC;AAEnBC,EAAAA,aAFmB;AAEJC,EAAAA,QAFI;AAEMC,EAAAA,QAFN;AAEgBC,EAAAA;AAFhB,CAAxB,EAEuD;AACpE,QAAM;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAAwCpB,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM;AAAA,OAACqB,WAAD;AAAA,OAAcC;AAAd,MAAgCtB,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM;AAAA,OAACuB,KAAD;AAAA,OAAQC;AAAR,MAAoBxB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM;AAAA,OAACyB,UAAD;AAAA,OAAaC;AAAb,MAA8B1B,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAA,OAAC2B,aAAD;AAAA,OAAgBC;AAAhB,MAAqC5B,QAAQ,CAAC,IAAD,CAAnD;AACA,QAAM;AAAA,OAAC6B,OAAD;AAAA,OAAUC;AAAV,MAAwB9B,QAAQ,CAAC,KAAD,CAAtC;;AACA,QAAM+B,YAAY,GAAIC,CAAD,IAAO;AAC1B,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,MAAnB,IAA6BH,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,MAAf,GAAwB,CAArD,GACIL,UAAU,CAAC,IAAD,CADd,GAEIA,UAAU,CAAC,KAAD,CAFd,CAD0B,CAI1B;AACD,GALD;;AAMA,QAAMM,YAAY,GAAG,MAAM;AACzBC,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,QAAGZ,UAAH,EAAe;AACbd,MAAAA,SAAS,CAACc,UAAD,CAAT;AACAa,MAAAA,eAAe;AAChB;AACF,GAND;;AAOA,QAAMA,eAAe,GAAG,YAAY;AAClC1B,IAAAA,YAAY;AACZK,IAAAA,QAAQ;AACRK,IAAAA,cAAc,CAAC,CAAD,CAAd;AACAR,IAAAA,cAAc,CAAC,MAAMX,cAAc,CAACC,aAAD,CAArB,CAAd;AACD,GALD;;AAMA,QAAMmC,QAAQ,GAAG,MAAM;AACrBtB,IAAAA,QAAQ;AACRK,IAAAA,cAAc,CAAC,CAAD,CAAd;AACAM,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAF,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAb,IAAAA,OAAO;AACR,GAND;;AAOA,QAAM2B,OAAO,GAAG,MAAM;AACpBxB,IAAAA,QAAQ,CAAC,GAAGO,KAAK,CAACkB,MAAN,CAAaC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBrB,KAAK,CAACY,MAAjC,CAAb,EAAuD,CAAvD,CAAJ,CAAR;AACAb,IAAAA,cAAc,CAACD,WAAW,IAAIA,WAAW,GAAG,CAA9B,CAAd;AACD,GAHD;;AAIA,QAAMgB,YAAY,GAAIQ,OAAD,IAAaA,OAAlC;;AACA,QAAMC,WAAW,GAAG,MAAOC,MAAP,IAAkB;AACpC,UAAMC,aAAa,GAAG3C,MAAM,EAA5B;AACA,UAAM4C,WAAW,GAAGF,MAAM,KAAKrC,WAAW,CAACwC,IAAvB,GACd;AACEC,MAAAA,KAAK,EAAEzC,WAAW,CAACwC,IADrB;AAEEE,MAAAA,IAAI,EAAEJ,aAAa,CAACK,IAAd,CAAmBlC,eAAnB,CAFR;AAGEmC,MAAAA,KAAK,EAAEC,MAAM,CAAC,CAAC,OAAKP,aAAa,CAACK,IAAd,CAAmBlC,eAAnB,CAAL,GAAyC,KAAzC,IAAgD,CAAC,KAAGE,WAAJ,IAAiB,EAAjE,CAAD,EAAuEmC,OAAvE,EAAD,CAHf;AAIEC,MAAAA,OAAO,EAAE,IAJX;AAKEC,MAAAA,UAAU,EAAErC;AALd,KADc,GAQd;AACE8B,MAAAA,KAAK,EAAEzC,WAAW,CAACwC,IADrB;AAEEE,MAAAA,IAAI,EAAEJ,aAAa,CAACK,IAAd,CAAmBlC,eAAnB,CAFR;AAGEmC,MAAAA,KAAK,EAAE,CAHT;AAIEG,MAAAA,OAAO,EAAE,KAJX;AAKEE,MAAAA,IAAI,EAAEZ,MAAM,KAAK,qBAAX,GAAmC,IAAnC,GAAyC,KALjD;AAMEW,MAAAA,UAAU,EAAErC;AANd,KARN;AAgBAN,IAAAA,aAAa,CAACkC,WAAD,CAAb;AACAX,IAAAA,eAAe;AAChB,GApBD;;AAsBArC,EAAAA,SAAS,CAAC,MAAM;AACd,KAACiB,WAAW,CAAC0C,SAAb,IAA0BxC,kBAAkB,CAACf,MAAM,EAAP,CAA5C;AACD,GAFQ,EAEN,CAACa,WAAD,CAFM,CAAT;AAGAjB,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,WAAW,IAAIc,QAAQ,CAACd,WAAW,CAACa,KAAb,CAAvB;AACD,GAFQ,EAEN,CAACb,WAAD,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,GAAG,MAAV;AAAA,gBACG,CAACQ,WAAW,CAAC2C,SAAb,gBACC,QAAC,UAAD;AAA4B,QAAA,IAAI,MAAhC;AAAiC,QAAA,OAAO,EAAE,MAAMzB,YAAY,EAA5D;AAAA;AAAA,SAAiB,SAAjB;AAAA;AAAA;AAAA;AAAA,cADD,GAEGlB,WAAW,CAAC0C,SAAZ,gBACD,QAAC,UAAD;AAA4B,QAAA,IAAI,MAAhC;AAAA;AAAA,SAAiB,SAAjB;AAAA;AAAA;AAAA;AAAA,cADC,gBAGA,QAAC,QAAD;AAAA,mBACGvC,WAAW,GAAG,CAAd,iBAAmB,QAAC,UAAD;AAA4B,UAAA,IAAI,MAAhC;AAAiC,UAAA,OAAO,EAAE,MAAMmB,OAAO,EAAvD;AAAA;AAAA,WAAiB,SAAjB;AAAA;AAAA;AAAA;AAAA,gBADtB,eAEE,QAAC,UAAD;AAA4B,UAAA,IAAI,MAAhC;AAAiC,UAAA,OAAO,EAAE,MAAMM,WAAW,CAAC,qBAAD,CAA3D;AAAA;AAAA,WAAiB,SAAjB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,UAAD;AAA4B,UAAA,IAAI,MAAhC;AAAiC,UAAA,OAAO,EAAE,MAAMP,QAAQ,EAAxD;AAAA;AAAA,WAAiB,SAAjB;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,YADF,eAcE,QAAC,KAAD;AAAO,MAAA,MAAM,MAAb;AAAA,gBACIrB,WAAW,CAAC2C,SAAZ,IAAyB,CAAC3C,WAAW,CAAC0C,SAAtC,IAAmDlD,WAAW,CAACoD,OAAhE,GACDpD,WAAW,CAACoD,OAAZ,CAAoBC,GAApB,CAAwB,CAAChB,MAAD,EAASiB,CAAT,kBACxB,QAAC,UAAD;AAA8B,QAAA,MAAM,MAApC;AAAqC,QAAA,OAAO,EAAGjB,MAAD,IAAYD,WAAW,CAACC,MAAM,CAACd,MAAP,CAAcgC,SAAf,CAArE;AAAA,kBAAiGlB;AAAjG,SAAiB,YAAUiB,CAA3B;AAAA;AAAA;AAAA;AAAA,cADA,CADC,GAGE;AAJL;AAAA;AAAA;AAAA;AAAA,YAdF,eAoBE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAC,kBAAb;AAAgC,MAAA,YAAY,EAAE3B,YAA9C;AAAA,gBACKV,aAAa,gBACZ,QAAC,QAAD;AAAA,gCACE,QAAC,EAAD,CAAI,WAAJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,EAAD,CAAI,SAAJ;AAAc,UAAA,IAAI,EAAC,MAAnB;AAA0B,UAAA,QAAQ,EAAE,MAAMI,YAAY;AAAtD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,EAAD,CAAI,aAAJ;AAAkB,UAAA,OAAO,EAAEF,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,EAAD,CAAI,UAAJ;AAAe,UAAA,OAAO,EAAE,MAAMD,iBAAiB,CAAC,KAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADY,gBAQZ,QAAC,QAAD;AAAA,gCACE,QAAC,EAAD,CAAI,WAAJ;AAAgB,UAAA,MAAM,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGpB,eAAe,CAACuD,GAAhB,CAAoB,CAACG,QAAD,EAAWF,CAAX,kBACnB,QAAC,EAAD,CAAI,UAAJ;AAAmC,UAAA,OAAO,EAAE,MAAM;AAAC3B,YAAAA,YAAY,CAAC,KAAD,CAAZ;AAAqBX,YAAAA,aAAa,CAACwC,QAAD,CAAb;AAAwB,WAAhG;AAAA,oBACGA;AADH,WAAoB,YAAYF,CAAhC;AAAA;AAAA;AAAA;AAAA,gBADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AATN;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA,kBADF;AA0CD","sourcesContent":["import Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\nimport { useState, useEffect, Fragment } from \"react\";\nimport { pickRandomGame } from \"../../../global/fetch\";\nimport { game_database } from \"../../../global/const\";\nimport moment from 'moment'\nimport Popup, * as SC from \"../../styled-components/Popup\"\n\nconst game_difficulty = [\"easy\", \"medium\", \"hard\"];\n\nexport default function TableComponent({\n    random_game, startGame, startLoading, endGame,\n    showRandomGame, pushNewAnswer, showHint, hideHint, game_status,}) {\n  const [answerTimeStart, setAnswerTimeStart] = useState(false)\n  const [hintCounter, setHintCounter] = useState(0)\n  const [hints, setHints] = useState(false)\n  const [difficulty, setDifficulty] = useState(false)\n  const [usernamePanel, showUsernamePanel] = useState(true);\n  const [warning, setWarning] = useState(false);\n  const handleTyping = (e) => {\n    0 < e.target.value.length && e.target.value.length < 3\n      ? setWarning(true)\n      : setWarning(false);\n    // check if username doesn't match one of usernames in MongoDatabase\n  };\n  const startNewGame = () => {\n    switch_popup(true)\n    if(difficulty) {\n      startGame(difficulty)\n      loadNewQuestion()\n    }\n  }\n  const loadNewQuestion = async () => {\n    startLoading()\n    hideHint()\n    setHintCounter(0)\n    showRandomGame(await pickRandomGame(game_database))\n  } \n  const quitGame = () => {\n    hideHint()\n    setHintCounter(0)\n    showUsernamePanel(true)\n    setDifficulty(false)\n    endGame()\n  }\n  const getHint = () => {\n    showHint(...hints.splice(Math.floor(Math.random() * hints.length), 1))\n    setHintCounter(hintCounter => hintCounter + 1)\n  }\n  const switch_popup = (boolean) => boolean\n  const checkAnswer = async (answer) => {\n    const answerTimeEnd = moment()\n    const user_answer = answer === random_game.name\n        ? {\n            title: random_game.name,\n            time: answerTimeEnd.diff(answerTimeStart),\n            score: Number((1000/answerTimeEnd.diff(answerTimeStart)*10000*((10-hintCounter)/10)).toFixed()),\n            correct: true,\n            hints_used: hintCounter,\n          }\n        : {\n            title: random_game.name,\n            time: answerTimeEnd.diff(answerTimeStart),\n            score: 0,\n            correct: false,\n            skip: answer === \"player_skipped_game\" ? true: false,\n            hints_used: hintCounter,\n          };\n    pushNewAnswer(user_answer)\n    loadNewQuestion()\n  }\n\n  useEffect(() => {\n    !game_status.isLoading && setAnswerTimeStart(moment())\n  }, [game_status])\n  useEffect(() => {\n    random_game && setHints(random_game.hints) \n  }, [random_game])\n\n  return (\n    <>\n      <Table top>    \n        {!game_status.isStarted ?\n          <Typography key={\"key0015\"} link onClick={() => startNewGame()}>start a new challenge</Typography>\n          : game_status.isLoading ?\n           <Typography key={'key0016'} link>loading</Typography>\n           : (\n            <Fragment>\n              {hintCounter < 3 && <Typography key={\"key0011\"} link onClick={() => getHint()}>get a hint</Typography>}\n              <Typography key={\"key0012\"} link onClick={() => checkAnswer(\"player_skipped_game\")}>skip</Typography>\n              <Typography key={\"key0013\"} link onClick={() => quitGame()}>quit</Typography>\n            </Fragment>\n          )}\n      </Table>\n      <Table bottom>\n        {(game_status.isStarted && !game_status.isLoading && random_game.answers) ?\n        random_game.answers.map((answer, i) => (\n        <Typography key={\"key0021\"+i} answer onClick={(answer) => checkAnswer(answer.target.innerText)}>{answer}</Typography>))\n        : ``}\n      </Table>\n      <Popup title=\"Hello gamergeek!\" switch_popup={switch_popup}>\n          {usernamePanel ? (\n            <Fragment>\n              <SC.WelcomeText>Let’s see how good you are! Starting from your name...</SC.WelcomeText>\n              <SC.TextInput type=\"text\" onChange={() => handleTyping()} />\n              <SC.TextInputHint visible={warning}>Wrong nickname</SC.TextInputHint>\n              <SC.PlayButton onClick={() => showUsernamePanel(false)}>Let's Play!</SC.PlayButton>\n            </Fragment>\n          ) : (\n            <Fragment>\n              <SC.WelcomeText center>Set game difficulty...</SC.WelcomeText>\n              {game_difficulty.map((diff_lvl, i) => (\n                <SC.PlayButton key={\"key0011\" + i} onClick={() => {switch_popup(false); setDifficulty(diff_lvl)}}>\n                  {diff_lvl}\n                </SC.PlayButton>\n              ))}\n            </Fragment>\n          )}\n      </Popup>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}