{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/containers/GameNavigatorTop.js\";\nimport Table from \"../../../styled-components/Table\";\nimport Typography from \"../../../styled-components/Typography\";\nimport { useState, useEffect, Fragment } from \"react\";\nexport default function GameNavigatorTop({\n  game_is_started,\n  game_is_loading,\n  skipQuestion,\n  changePopup,\n  endGame,\n  showHint,\n  game_database,\n  loadNewQuestion,\n  startLoading,\n  random_game,\n  user_score\n}) {\n  const {\n    0: hints,\n    1: setHints\n  } = useState(false);\n  const {\n    0: hintCounter,\n    1: setHintCounter\n  } = useState(0);\n\n  const handleClickHint = () => {\n    showHint(...hints.splice(Math.floor(Math.random() * hints.length), 1));\n    setHintCounter(hintCounter => hintCounter + 1);\n  };\n\n  const handleClickSkip = () => {\n    skipQuestion(); // startLoading()\n\n    loadNewQuestion(game_database);\n  };\n\n  useEffect(() => {\n    game_is_loading && setHintCounter(0);\n  }, [game_is_loading]);\n  useEffect(() => {\n    random_game && setHints(random_game.hints);\n  }, [random_game]);\n  useEffect(() => {\n    user_score && user_score.length > 0 && !game_is_started && changePopup('summary');\n  }, [game_is_started]);\n  return /*#__PURE__*/_jsxDEV(Table, {\n    top: true,\n    children: !game_is_started ? /*#__PURE__*/_jsxDEV(Typography, {\n      link: true,\n      onClick: () => changePopup('userdata'),\n      children: \"start a new challenge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this) : game_is_loading ? /*#__PURE__*/_jsxDEV(Typography, {\n      link: true,\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [hintCounter < 3 && /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: () => handleClickHint(),\n        children: \"get a hint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: () => handleClickSkip(),\n        children: \"skip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: () => endGame(),\n        children: \"quit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n}","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/containers/GameNavigatorTop.js"],"names":["Table","Typography","useState","useEffect","Fragment","GameNavigatorTop","game_is_started","game_is_loading","skipQuestion","changePopup","endGame","showHint","game_database","loadNewQuestion","startLoading","random_game","user_score","hints","setHints","hintCounter","setHintCounter","handleClickHint","splice","Math","floor","random","length","handleClickSkip"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,kCAAlB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,OAA9C;AAEA,eAAe,SAASC,gBAAT,CAA0B;AACvCC,EAAAA,eADuC;AAEvCC,EAAAA,eAFuC;AAGvCC,EAAAA,YAHuC;AAIvCC,EAAAA,WAJuC;AAKvCC,EAAAA,OALuC;AAMvCC,EAAAA,QANuC;AAOvCC,EAAAA,aAPuC;AAQvCC,EAAAA,eARuC;AASvCC,EAAAA,YATuC;AAUvCC,EAAAA,WAVuC;AAWvCC,EAAAA;AAXuC,CAA1B,EAYX;AACF,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBhB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM;AAAA,OAACiB,WAAD;AAAA,OAAcC;AAAd,MAAgClB,QAAQ,CAAC,CAAD,CAA9C;;AACA,QAAMmB,eAAe,GAAG,MAAM;AAC5BV,IAAAA,QAAQ,CAAC,GAAGM,KAAK,CAACK,MAAN,CAAaC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBR,KAAK,CAACS,MAAjC,CAAb,EAAuD,CAAvD,CAAJ,CAAR;AACAN,IAAAA,cAAc,CAACD,WAAW,IAAIA,WAAW,GAAG,CAA9B,CAAd;AACD,GAHD;;AAIA,QAAMQ,eAAe,GAAG,MAAM;AAC5BnB,IAAAA,YAAY,GADgB,CAE5B;;AACAK,IAAAA,eAAe,CAACD,aAAD,CAAf;AACD,GAJD;;AAKAT,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,eAAe,IAAIa,cAAc,CAAC,CAAD,CAAjC;AACD,GAFQ,EAEN,CAACb,eAAD,CAFM,CAAT;AAGAJ,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,WAAW,IAAIG,QAAQ,CAACH,WAAW,CAACE,KAAb,CAAvB;AACD,GAFQ,EAEN,CAACF,WAAD,CAFM,CAAT;AAGAZ,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,UAAU,IAAIA,UAAU,CAACU,MAAX,GAAoB,CAAlC,IAAuC,CAACpB,eAAxC,IAA2DG,WAAW,CAAC,SAAD,CAAtE;AACD,GAFQ,EAEN,CAACH,eAAD,CAFM,CAAT;AAGA,sBACI,QAAC,KAAD;AAAO,IAAA,GAAG,MAAV;AAAA,cAEE,CAACA,eAAD,gBACI,QAAC,UAAD;AAAY,MAAA,IAAI,MAAhB;AAAiB,MAAA,OAAO,EAAE,MAAMG,WAAW,CAAC,UAAD,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,GAEIF,eAAe,gBACb,QAAC,UAAD;AAAY,MAAA,IAAI,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADa,gBAGb,QAAC,QAAD;AAAA,iBACGY,WAAW,GAAG,CAAd,iBACD,QAAC,UAAD;AAAY,QAAA,IAAI,MAAhB;AAAiB,QAAA,OAAO,EAAE,MAAME,eAAe,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,UAAD;AAAY,QAAA,IAAI,MAAhB;AAAiB,QAAA,OAAO,EAAE,MAAMM,eAAe,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,UAAD;AAAY,QAAA,IAAI,MAAhB;AAAiB,QAAA,OAAO,EAAE,MAAMjB,OAAO,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPR;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBD","sourcesContent":["import Table from \"../../../styled-components/Table\";\nimport Typography from \"../../../styled-components/Typography\";\nimport { useState, useEffect, Fragment } from \"react\";\n\nexport default function GameNavigatorTop({ \n  game_is_started, \n  game_is_loading,\n  skipQuestion, \n  changePopup,\n  endGame, \n  showHint, \n  game_database,\n  loadNewQuestion,\n  startLoading,\n  random_game,\n  user_score,\n }) {\n  const [hints, setHints] = useState(false)\n  const [hintCounter, setHintCounter] = useState(0)\n  const handleClickHint = () => {\n    showHint(...hints.splice(Math.floor(Math.random() * hints.length), 1))\n    setHintCounter(hintCounter => hintCounter + 1)\n  }\n  const handleClickSkip = () => {\n    skipQuestion()\n    // startLoading()\n    loadNewQuestion(game_database)\n  }\n  useEffect(() => {\n    game_is_loading && setHintCounter(0)\n  }, [game_is_loading])\n  useEffect(() => {\n    random_game && setHints(random_game.hints)\n  }, [random_game])\n  useEffect(() => {\n    user_score && user_score.length > 0 && !game_is_started && changePopup('summary')\n  }, [game_is_started])\n  return (\n      <Table top>    \n        {\n        !game_is_started \n          ? <Typography link onClick={() => changePopup('userdata')}>start a new challenge</Typography>\n          : game_is_loading \n            ? <Typography link>loading</Typography>\n            : (\n              <Fragment>\n                {hintCounter < 3 && \n                <Typography link onClick={() => handleClickHint()}>get a hint</Typography>}\n                <Typography link onClick={() => handleClickSkip()}>skip</Typography>\n                <Typography link onClick={() => endGame()}>quit</Typography>\n              </Fragment>\n            )\n        }\n      </Table>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}