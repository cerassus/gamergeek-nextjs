{"ast":null,"code":"import { connect } from \"react-redux\";\nimport Popup from \"../components/main/challenge/containers/Popup\";\nimport { showPopup, loadNewQuestion, startGame, clearUserScore, startLoading } from \"../redux/actions\";\n\nconst mapState = state => ({\n  popup_to_show: state.popup_to_show\n});\n\nconst mapDispatch = dispatch => ({\n  showPopup: popup_name => dispatch(showPopup(popup_name)),\n  startGame: () => dispatch(startGame()),\n  startLoading: () => dispatch(startLoading()),\n  loadNewQuestion: db => dispatch(loadNewQuestion(db)),\n  clearUserScore: () => dispatch(clearUserScore())\n});\n\nexport default connect(mapState, mapDispatch)(Popup);","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/redux_containers/Popup.js"],"names":["connect","Popup","showPopup","loadNewQuestion","startGame","clearUserScore","startLoading","mapState","state","popup_to_show","mapDispatch","dispatch","popup_name","db"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,+CAAlB;AACA,SACIC,SADJ,EAEIC,eAFJ,EAGIC,SAHJ,EAIIC,cAJJ,EAKIC,YALJ,QAMQ,kBANR;;AAQA,MAAMC,QAAQ,GAAGC,KAAK,KAAK;AACvBC,EAAAA,aAAa,EAAED,KAAK,CAACC;AADE,CAAL,CAAtB;;AAIA,MAAMC,WAAW,GAAGC,QAAQ,KAAK;AAC7BT,EAAAA,SAAS,EAAGU,UAAD,IAAgBD,QAAQ,CAACT,SAAS,CAACU,UAAD,CAAV,CADN;AAE7BR,EAAAA,SAAS,EAAE,MAAMO,QAAQ,CAACP,SAAS,EAAV,CAFI;AAG7BE,EAAAA,YAAY,EAAE,MAAMK,QAAQ,CAACL,YAAY,EAAb,CAHC;AAI7BH,EAAAA,eAAe,EAAGU,EAAD,IAAQF,QAAQ,CAACR,eAAe,CAACU,EAAD,CAAhB,CAJJ;AAK7BR,EAAAA,cAAc,EAAE,MAAMM,QAAQ,CAACN,cAAc,EAAf;AALD,CAAL,CAA5B;;AAQA,eAAeL,OAAO,CAACO,QAAD,EAAWG,WAAX,CAAP,CAA+BT,KAA/B,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport Popup from \"../components/main/challenge/containers/Popup\"\nimport { \n    showPopup, \n    loadNewQuestion, \n    startGame,\n    clearUserScore,\n    startLoading,\n } from \"../redux/actions\"\n\nconst mapState = state => ({\n    popup_to_show: state.popup_to_show,\n  })\n\nconst mapDispatch = dispatch => ({\n    showPopup: (popup_name) => dispatch(showPopup(popup_name)),\n    startGame: () => dispatch(startGame()),\n    startLoading: () => dispatch(startLoading()),\n    loadNewQuestion: (db) => dispatch(loadNewQuestion(db)),\n    clearUserScore: () => dispatch(clearUserScore()),\n})\n\nexport default connect(mapState, mapDispatch)(Popup);\n"]},"metadata":{},"sourceType":"module"}