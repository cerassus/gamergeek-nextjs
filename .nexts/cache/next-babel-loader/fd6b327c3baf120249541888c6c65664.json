{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\nimport { useState, useEffect, Fragment } from \"react\";\nimport { getGameDetails, fetchNewGameDatabase } from \"../../../global/fetch\";\nimport moment from 'moment';\nimport * as SC from \"../../styled-components/Popup\";\nconst game_difficulty = [\"easy\", \"medium\", \"hard\"];\nexport default function TableComponent({\n  random_game,\n  startGame,\n  startLoading,\n  endGame,\n  user_score,\n  clearUserScore,\n  newGameDatabase,\n  showRandomGame,\n  pushNewAnswer,\n  showHint,\n  clearHint,\n  game_status,\n  game_database,\n  removeItemFromDatabase\n}) {\n  const {\n    0: answerTimeStart,\n    1: setAnswerTimeStart\n  } = useState(false);\n  const {\n    0: hintCounter,\n    1: setHintCounter\n  } = useState(0);\n  const {\n    0: hints,\n    1: setHints\n  } = useState(false);\n  const {\n    0: difficulty,\n    1: setDifficulty\n  } = useState(false);\n  const {\n    0: usernamePanel,\n    1: showUsernamePanel\n  } = useState(true);\n  const {\n    0: warning,\n    1: setWarning\n  } = useState(false);\n  const {\n    0: popup,\n    1: switchPopup\n  } = useState(false);\n  const {\n    0: summary,\n    1: showSummary\n  } = useState(false);\n  const {\n    0: username,\n    1: setUsername\n  } = useState(false);\n\n  const startNewGame = () => {\n    switchPopup(true);\n  };\n\n  const loadNewQuestion = async () => {\n    const randomIndex = Math.floor(Math.random() * game_database.length);\n    !game_status.isLoading && startLoading();\n    clearHint();\n    setHintCounter(0);\n\n    if (game_database === 0) {\n      endGame();\n    } else {\n      showRandomGame(await getGameDetails(game_database[randomIndex]));\n      removeItemFromDatabase(randomIndex);\n    }\n  };\n\n  const getNewDatabase = async () => {\n    startLoading();\n    newGameDatabase(await fetchNewGameDatabase(difficulty - 1));\n    await loadNewQuestion();\n  };\n\n  const quitGame = () => {\n    clearHint();\n    setHintCounter(0);\n    setHints(false);\n    showUsernamePanel(true);\n    setDifficulty(false);\n    setUsername(false);\n    setAnswerTimeStart(false);\n    switchPopup(false);\n    user_score.length > 0 && showSummary(true);\n  };\n\n  const getHint = () => {\n    showHint(...hints.splice(Math.floor(Math.random() * hints.length), 1));\n    setHintCounter(hintCounter => hintCounter + 1);\n  };\n\n  const handleTyping = e => {\n    0 < e.target.value.length && e.target.value.length < 3 ? setWarning(true) : setWarning(false); // check if username doesn't match one of usernames in MongoDatabase\n\n    setUsername(e.target.value);\n  };\n\n  const validateUserName = () => {\n    warning || !username ? alert('Wrong username! Try different one!') : showUsernamePanel(false);\n  };\n\n  const close_summary = () => {\n    showSummary(false);\n    clearUserScore();\n  };\n\n  const checkAnswer = async answer => {\n    const answerTimeEnd = moment();\n    const user_answer = answer === random_game.name ? {\n      title: random_game.name,\n      time: answerTimeEnd.diff(answerTimeStart),\n      score: Number((1000 / answerTimeEnd.diff(answerTimeStart) * 10000 * ((10 - hintCounter) / 10)).toFixed()),\n      correct: true,\n      hints_used: hintCounter\n    } : {\n      title: random_game.name,\n      time: answerTimeEnd.diff(answerTimeStart),\n      score: 0,\n      correct: false,\n      skip: answer === \"player_skipped_game\" ? true : false,\n      hints_used: hintCounter\n    };\n    pushNewAnswer(user_answer);\n    loadNewQuestion();\n  };\n\n  useEffect(() => {\n    !game_status.isLoading && setAnswerTimeStart(moment());\n    !game_status.isStarted && quitGame();\n  }, [game_status]);\n  useEffect(() => {\n    random_game && setHints(random_game.hints);\n  }, [random_game]);\n  useEffect(() => {\n    if (difficulty) {\n      switchPopup(false);\n      startGame();\n      getNewDatabase();\n    }\n  }, [difficulty]);\n  useEffect(() => {\n    game_database.length === 120 && loadNewQuestion();\n  }, [game_database]);\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsx(Table, {\n      top: true,\n      children: !game_status.isStarted ? /*#__PURE__*/_jsx(Typography, {\n        link: true,\n        onClick: () => startNewGame(),\n        children: \"start a new challenge\"\n      }, \"key0015\") : game_status.isLoading ? /*#__PURE__*/_jsx(Typography, {\n        link: true,\n        children: \"loading\"\n      }, 'key0016') : /*#__PURE__*/_jsxs(Fragment, {\n        children: [hintCounter < 3 && /*#__PURE__*/_jsx(Typography, {\n          link: true,\n          onClick: () => getHint(),\n          children: \"get a hint\"\n        }, \"key0011\"), /*#__PURE__*/_jsx(Typography, {\n          link: true,\n          onClick: () => checkAnswer(\"player_skipped_game\"),\n          children: \"skip\"\n        }, \"key0012\"), /*#__PURE__*/_jsx(Typography, {\n          link: true,\n          onClick: () => endGame(),\n          children: \"quit\"\n        }, \"key0013\")]\n      })\n    }), /*#__PURE__*/_jsx(Table, {\n      bottom: true,\n      children: game_status.isStarted && !game_status.isLoading && random_game.answers ? random_game.answers.map((answer, i) => /*#__PURE__*/_jsx(Typography, {\n        answer: true,\n        onClick: answer => checkAnswer(answer.target.innerText),\n        children: answer\n      }, \"key0021\" + i)) : ``\n    }), /*#__PURE__*/_jsx(SC.Popup, {\n      title: \"Hello gamergeek!\",\n      switch_popup: popup,\n      popupIsClosed: () => quitGame(),\n      children: usernamePanel ? /*#__PURE__*/_jsxs(Fragment, {\n        children: [/*#__PURE__*/_jsx(SC.WelcomeText, {\n          children: \"Let\\u2019s see how good you are! Starting from your name...\"\n        }), /*#__PURE__*/_jsx(SC.TextInput, {\n          type: \"text\",\n          onChange: e => handleTyping(e)\n        }), /*#__PURE__*/_jsx(SC.TextInputHint, {\n          visible: warning,\n          children: \"Wrong nickname\"\n        }), /*#__PURE__*/_jsx(SC.PlayButton, {\n          onClick: () => validateUserName(),\n          children: \"Let's Play!\"\n        })]\n      }) : /*#__PURE__*/_jsxs(Fragment, {\n        children: [/*#__PURE__*/_jsx(SC.WelcomeText, {\n          center: true,\n          children: \"Set game difficulty...\"\n        }), game_difficulty.map((diff_lvl, i) => /*#__PURE__*/_jsx(SC.PlayButton, {\n          onClick: () => setDifficulty(i + 1),\n          children: diff_lvl\n        }, \"key0011\" + i))]\n      })\n    }), /*#__PURE__*/_jsx(SC.Popup, {\n      title: \"Summary\",\n      switch_popup: summary,\n      popupIsClosed: () => close_summary(),\n      children: user_score.length > 0 && summary && /*#__PURE__*/_jsxs(\"div\", {\n        style: {\n          display: \"flex\",\n          width: \"95%\",\n          padding: \"2rem 0\",\n          justifyContent: \"space-between\"\n        },\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          style: {\n            width: \"50%\",\n            margin: \"1rem\"\n          },\n          children: [/*#__PURE__*/_jsx(SC.WelcomeText, {\n            children: \"The Game\"\n          }), /*#__PURE__*/_jsxs(\"table\", {\n            children: [/*#__PURE__*/_jsxs(\"tr\", {\n              children: [/*#__PURE__*/_jsx(SC.TD, {\n                children: \"Correct answers:\"\n              }), /*#__PURE__*/_jsx(SC.TD, {\n                children: user_score.filter(x => x.correct).length\n              })]\n            }), /*#__PURE__*/_jsxs(\"tr\", {\n              children: [/*#__PURE__*/_jsx(SC.TD, {\n                children: \"Wrong answers:\"\n              }), /*#__PURE__*/_jsx(SC.TD, {\n                children: user_score.filter(x => !x.correct).length\n              })]\n            }), /*#__PURE__*/_jsxs(\"tr\", {\n              children: [/*#__PURE__*/_jsx(SC.TD, {\n                children: \"Skipped answers:\"\n              }), /*#__PURE__*/_jsx(SC.TD, {\n                children: user_score.filter(x => x.skip).length\n              })]\n            }), /*#__PURE__*/_jsxs(\"tr\", {\n              children: [/*#__PURE__*/_jsx(SC.TD, {\n                children: \"Hints used:\"\n              }), /*#__PURE__*/_jsx(SC.TD, {\n                children: user_score.map(x => x = x.hints_used).reduce((acc, y) => acc + y)\n              })]\n            }), /*#__PURE__*/_jsxs(\"tr\", {\n              children: [/*#__PURE__*/_jsx(SC.TD, {\n                children: \"Quickest response:\"\n              }), /*#__PURE__*/_jsx(SC.TD, {\n                children: user_score.map(x => x = x.time).sort((a, b) => a - b)[0] / 1000 + \" sec\"\n              })]\n            }), /*#__PURE__*/_jsxs(\"tr\", {\n              children: [/*#__PURE__*/_jsx(SC.TD, {\n                children: \"Slowest response:\"\n              }), /*#__PURE__*/_jsx(SC.TD, {\n                children: user_score.map(x => x = x.time).sort((a, b) => a - b)[user_score.length - 1] / 1000 + \" sec\"\n              })]\n            }), /*#__PURE__*/_jsxs(\"tr\", {\n              children: [/*#__PURE__*/_jsx(SC.TD, {\n                children: \"Average time response:\"\n              }), /*#__PURE__*/_jsx(SC.TD, {\n                children: (user_score.map(x => x = x.time).reduce((acc, x) => acc + x) / user_score.length / 1000).toFixed(3) + \" sec\"\n              })]\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          style: {\n            width: \"50%\",\n            margin: \"1rem\",\n            position: \"relative\"\n          },\n          children: [/*#__PURE__*/_jsx(SC.WelcomeText, {\n            children: \"Score:\"\n          }), /*#__PURE__*/_jsxs(SC.ScoreText, {\n            children: [user_score.map(score => score = score.score).reduce((acc, score) => acc + score).toLocaleString(), \" \", /*#__PURE__*/_jsx(\"span\", {\n              children: \"points\"\n            })]\n          }), /*#__PURE__*/_jsx(SC.PlayButton, {\n            summary: true,\n            onClick: () => close_summary(),\n            children: \"Close\"\n          })]\n        })]\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}