{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/components/styled-components/MainCounter.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  text-transform: uppercase;\\n  font-weight: 900;\\n  font-size: 3rem;\\n  display: inline-block;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from \"styled-components\";\nimport React from \"react\";\nimport { countdown } from \"../../redux/actions\";\nimport moment from \"moment\";\nvar CounterContainer = styled.div(_templateObject());\n_c = CounterContainer;\nexport default function MainCounter(_ref) {\n  _s();\n\n  var game_status = _ref.game_status,\n      main_counter = _ref.main_counter;\n\n  var _React$useState = React.useState(60),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      gameTime = _React$useState2[0],\n      setGameTime = _React$useState2[1];\n\n  var startTimestamp = moment().startOf(\"day\");\n\n  var startTimer = function startTimer() {\n    console.log(startTimestamp);\n    setInterval(function () {\n      startTimestamp.add(100, 'milisecond');\n      setGameTime(gameTime + 1);\n    }, 100);\n  };\n\n  React.useEffect(function () {\n    game_status.isStarted ? startTimer() : console.log('game over');\n  }, [game_status.isStarted]);\n  React.useEffect(function () {\n    game_status.isRunning ? console.log('running') : game_status.isLoading && console.log('loading');\n  }, [game_status.isRunning]);\n  return /*#__PURE__*/_jsxDEV(CounterContainer, {\n    children: startTimestamp.format('HH:mm:ss')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainCounter, \"BYsGpzX/p25upuetTWhDu0VVH/c=\");\n\n_c2 = MainCounter;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CounterContainer\");\n$RefreshReg$(_c2, \"MainCounter\");","map":{"version":3,"sources":["/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/components/styled-components/MainCounter.js"],"names":["styled","React","countdown","moment","CounterContainer","div","MainCounter","game_status","main_counter","useState","gameTime","setGameTime","startTimestamp","startOf","startTimer","console","log","setInterval","add","useEffect","isStarted","isRunning","isLoading","format"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,qBAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,IAAMC,gBAAgB,GAAGJ,MAAM,CAACK,GAAV,mBAAtB;KAAMD,gB;AAON,eAAe,SAASE,WAAT,OAAkD;AAAA;;AAAA,MAA5BC,WAA4B,QAA5BA,WAA4B;AAAA,MAAfC,YAAe,QAAfA,YAAe;;AAAA,wBAC/BP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAD+B;AAAA;AAAA,MACxDC,QADwD;AAAA,MAC9CC,WAD8C;;AAE/D,MAAMC,cAAc,GAAGT,MAAM,GAAGU,OAAT,CAAiB,KAAjB,CAAvB;;AACA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,cAAZ;AACAK,IAAAA,WAAW,CAAC,YAAW;AACnBL,MAAAA,cAAc,CAACM,GAAf,CAAmB,GAAnB,EAAwB,YAAxB;AACAP,MAAAA,WAAW,CAACD,QAAQ,GAAC,CAAV,CAAX;AACH,KAHU,EAGR,GAHQ,CAAX;AAIH,GAND;;AAOAT,EAAAA,KAAK,CAACkB,SAAN,CAAgB,YAAM;AACpBZ,IAAAA,WAAW,CAACa,SAAZ,GACAN,UAAU,EADV,GAEEC,OAAO,CAACC,GAAR,CAAY,WAAZ,CAFF;AAGD,GAJD,EAIG,CAACT,WAAW,CAACa,SAAb,CAJH;AAKAnB,EAAAA,KAAK,CAACkB,SAAN,CAAgB,YAAM;AACpBZ,IAAAA,WAAW,CAACc,SAAZ,GAAwBN,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAxB,GAAiDT,WAAW,CAACe,SAAZ,IAAyBP,OAAO,CAACC,GAAR,CAAY,SAAZ,CAA1E;AACD,GAFD,EAEG,CAACT,WAAW,CAACc,SAAb,CAFH;AAGA,sBACE,QAAC,gBAAD;AAAA,cACGT,cAAc,CAACW,MAAf,CAAsB,UAAtB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAvBuBjB,W;;MAAAA,W","sourcesContent":["import styled from \"styled-components\";\nimport React from \"react\"\nimport {countdown} from \"../../redux/actions\"\nimport moment from \"moment\"\n\nconst CounterContainer = styled.div`\n  text-transform: uppercase;\n  font-weight: 900;\n  font-size: 3rem;\n  display: inline-block;\n`;\n\nexport default function MainCounter({game_status, main_counter}) {\n  const [gameTime, setGameTime] = React.useState(60)\n  const startTimestamp = moment().startOf(\"day\")\n  const startTimer = () => {\n      console.log(startTimestamp)\n      setInterval(function() {\n          startTimestamp.add(100, 'milisecond');\n          setGameTime(gameTime+1)\n      }, 100);\n  }\n  React.useEffect(() => {\n    game_status.isStarted ? \n    startTimer()\n    : console.log('game over')\n  }, [game_status.isStarted])\n  React.useEffect(() => {\n    game_status.isRunning ? console.log('running') : game_status.isLoading && console.log('loading') \n  }, [game_status.isRunning])\n  return (\n    <CounterContainer>\n      {startTimestamp.format('HH:mm:ss')}\n    </CounterContainer>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}