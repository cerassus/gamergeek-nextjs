{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/cerassus/Websites/gamergeek-nextjs/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport Layout from \"../layout/Layout\";\nimport ScreenshotViewer from \"../containers/ScreenshotViewer\";\nimport Table from \"../containers/Table\";\nimport Popup from \"../components/styled-components/Popup\";\nimport { useState, useEffect } from \"react\";\nexport default function HomePage() {\n  _s();\n\n  var _useState = useState(false),\n      game_prepare = _useState[0],\n      setGamePrepare = _useState[1];\n\n  var _useState2 = useState(false),\n      game_summary = _useState2[0],\n      setGameSummary = _useState2[1];\n\n  var _useState3 = useState(false),\n      difficulty = _useState3[0],\n      _setDifficulty = _useState3[1];\n\n  useEffect(function () {\n    !game_prepare && _setDifficulty(false);\n  }, [game_prepare]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Layout, {\n      title: \"Challenge\",\n      children: [/*#__PURE__*/_jsxDEV(ScreenshotViewer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        showGamePreparePopup: function showGamePreparePopup(_boolean) {\n          return setGamePrepare(_boolean);\n        },\n        showGameSummary: function showGameSummary(_boolean2) {\n          return setGameSummary(_boolean2);\n        },\n        difficultyFromPopup: difficulty\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), game_prepare ? /*#__PURE__*/_jsxDEV(Popup, {\n      game_prepare: true,\n      setDifficulty: function setDifficulty(difficulty) {\n        return _setDifficulty(difficulty);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : game_summary && /*#__PURE__*/_jsxDEV(Popup, {\n      game_summary: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true);\n} // Dodać counter czasu gry\n// Dodanie POPUPa z podsumowaniem gry, który pojawia się po upływie czasu lub po kliknięciu QUIT\n// HINTS animation\n// Wrzuć do Reduxa reducer który będzie decydował czy pokazywać podsumowanie pod koniec gry\n// Popraw kwestię POPUpów i rozdziel na 2 komponenty (summary i prepare)\n// SSR\n// MongoDB\n\n_s(HomePage, \"fRB9lUTmP5FTrI1mwogePnxs4GQ=\");\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/pages/index.js"],"names":["Layout","ScreenshotViewer","Table","Popup","useState","useEffect","HomePage","game_prepare","setGamePrepare","game_summary","setGameSummary","difficulty","setDifficulty","boolean"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,kBAAnB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,KAAP,MAAkB,uCAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAAA,kBACMF,QAAQ,CAAC,KAAD,CADd;AAAA,MAC1BG,YAD0B;AAAA,MACZC,cADY;;AAAA,mBAEMJ,QAAQ,CAAC,KAAD,CAFd;AAAA,MAE1BK,YAF0B;AAAA,MAEZC,cAFY;;AAAA,mBAGGN,QAAQ,CAAC,KAAD,CAHX;AAAA,MAG1BO,UAH0B;AAAA,MAGdC,cAHc;;AAKjCP,EAAAA,SAAS,CAAC,YAAM;AACd,KAACE,YAAD,IAAiBK,cAAa,CAAC,KAAD,CAA9B;AACD,GAFQ,EAEN,CAACL,YAAD,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAAA,8BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACE,QAAA,oBAAoB,EAAE,8BAACM,QAAD;AAAA,iBAAaL,cAAc,CAACK,QAAD,CAA3B;AAAA,SADxB;AAEE,QAAA,eAAe,EAAE,yBAACA,SAAD;AAAA,iBAAaH,cAAc,CAACG,SAAD,CAA3B;AAAA,SAFnB;AAGE,QAAA,mBAAmB,EAAEF;AAHvB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EASGJ,YAAY,gBACX,QAAC,KAAD;AACE,MAAA,YAAY,MADd;AAEE,MAAA,aAAa,EAAE,uBAACI,UAAD;AAAA,eAAgBC,cAAa,CAACD,UAAD,CAA7B;AAAA;AAFjB;AAAA;AAAA;AAAA;AAAA,YADW,GAMXF,YAAY,iBAAI,QAAC,KAAD;AAAO,MAAA,YAAY;AAAnB;AAAA;AAAA;AAAA;AAAA,YAfpB;AAAA,kBADF;AAoBD,C,CAED;AACA;AACA;AAEA;AACA;AAEA;AACA;;GAvCwBH,Q;;KAAAA,Q","sourcesContent":["import Layout from \"../layout/Layout\";\nimport ScreenshotViewer from \"../containers/ScreenshotViewer\";\nimport Table from \"../containers/Table\";\nimport Popup from \"../components/styled-components/Popup\";\nimport { useState, useEffect } from \"react\";\n\nexport default function HomePage() {\n  const [game_prepare, setGamePrepare] = useState(false);\n  const [game_summary, setGameSummary] = useState(false);\n  const [difficulty, setDifficulty] = useState(false);\n\n  useEffect(() => {\n    !game_prepare && setDifficulty(false);\n  }, [game_prepare]);\n\n  return (\n    <>\n      <Layout title=\"Challenge\">\n        <ScreenshotViewer />\n        <Table\n          showGamePreparePopup={(boolean) => setGamePrepare(boolean)}\n          showGameSummary={(boolean) => setGameSummary(boolean)}\n          difficultyFromPopup={difficulty}\n        />\n      </Layout>\n      {game_prepare ? (\n        <Popup\n          game_prepare\n          setDifficulty={(difficulty) => setDifficulty(difficulty)}\n        />\n      ) : (\n        game_summary && <Popup game_summary />\n      )}\n    </>\n  );\n}\n\n// Dodać counter czasu gry\n// Dodanie POPUPa z podsumowaniem gry, który pojawia się po upływie czasu lub po kliknięciu QUIT\n// HINTS animation\n\n// Wrzuć do Reduxa reducer który będzie decydował czy pokazywać podsumowanie pod koniec gry\n// Popraw kwestię POPUpów i rozdziel na 2 komponenty (summary i prepare)\n\n// SSR\n// MongoDB"]},"metadata":{},"sourceType":"module"}