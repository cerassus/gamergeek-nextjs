{"ast":null,"code":"import { connect } from \"react-redux\";\nimport Table from \"../components/main/challenge/Table\";\nimport { newAnswer, startGame, stopGame, getRandomGame, screenshotsAreLoading } from \"../redux/actions\";\n\nconst mapState = state => ({\n  game_status: state.game_status,\n  random_game: state.random_game,\n  screenshots_loaded: state.screenshots_loaded\n});\n\nconst mapDispatch = dispatch => ({\n  newAnswer: answer => dispatch(newAnswer(answer)),\n  getRandomGame: obj => dispatch(getRandomGame(obj)),\n  startGame: difficulty => dispatch(startGame(difficulty)),\n  stopGame: () => dispatch(stopGame()),\n  screenshotsAreLoading: () => dispatch(screenshotsAreLoading())\n});\n\nexport default connect(mapState, mapDispatch)(Table);","map":{"version":3,"sources":["/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/containers/Table.js"],"names":["connect","Table","newAnswer","startGame","stopGame","getRandomGame","screenshotsAreLoading","mapState","state","game_status","random_game","screenshots_loaded","mapDispatch","dispatch","answer","obj","difficulty"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,oCAAlB;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,QAA/B,EAAyCC,aAAzC,EAAwDC,qBAAxD,QAAqF,kBAArF;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,KAAK;AACvBC,EAAAA,WAAW,EAAED,KAAK,CAACC,WADI;AAEvBC,EAAAA,WAAW,EAAEF,KAAK,CAACE,WAFI;AAGvBC,EAAAA,kBAAkB,EAAEH,KAAK,CAACG;AAHH,CAAL,CAAtB;;AAMA,MAAMC,WAAW,GAAIC,QAAQ,KAAK;AAChCX,EAAAA,SAAS,EAAGY,MAAD,IAAYD,QAAQ,CAACX,SAAS,CAACY,MAAD,CAAV,CADC;AAEhCT,EAAAA,aAAa,EAAGU,GAAD,IAASF,QAAQ,CAACR,aAAa,CAACU,GAAD,CAAd,CAFA;AAGhCZ,EAAAA,SAAS,EAAGa,UAAD,IAAgBH,QAAQ,CAACV,SAAS,CAACa,UAAD,CAAV,CAHH;AAIhCZ,EAAAA,QAAQ,EAAE,MAAMS,QAAQ,CAACT,QAAQ,EAAT,CAJQ;AAKhCE,EAAAA,qBAAqB,EAAE,MAAMO,QAAQ,CAACP,qBAAqB,EAAtB;AALL,CAAL,CAA7B;;AAQA,eAAeN,OAAO,CAACO,QAAD,EAAWK,WAAX,CAAP,CAA+BX,KAA/B,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport Table from \"../components/main/challenge/Table\"\nimport { newAnswer, startGame, stopGame, getRandomGame, screenshotsAreLoading } from \"../redux/actions\"\n\nconst mapState = state => ({\n    game_status: state.game_status,\n    random_game: state.random_game,\n    screenshots_loaded: state.screenshots_loaded,\n})\n\nconst mapDispatch  = dispatch => ({\n  newAnswer: (answer) => dispatch(newAnswer(answer)),\n  getRandomGame: (obj) => dispatch(getRandomGame(obj)),\n  startGame: (difficulty) => dispatch(startGame(difficulty)),\n  stopGame: () => dispatch(stopGame()),\n  screenshotsAreLoading: () => dispatch(screenshotsAreLoading()),\n})\n\nexport default connect(mapState, mapDispatch)(Table);\n"]},"metadata":{},"sourceType":"module"}