{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/cerassus/Websites/gamergeek-nextjs/components/styled-components/MainCounter.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  text-transform: lowercase;\\n  font-weight: 900;\\n  font-size: 3rem;\\n  display: inline-block;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { countdown } from \"../../redux/actions\";\nvar CounterContainer = styled.div(_templateObject());\n_c = CounterContainer;\nexport default function MainCounter(_ref) {\n  _s();\n\n  var is_game_started = _ref.is_game_started,\n      is_game_loading = _ref.is_game_loading,\n      game_counter = _ref.game_counter;\n\n  var _useState = useState(100),\n      counter = _useState[0],\n      setCounter = _useState[1];\n\n  var _useState2 = useState(false),\n      didMount = _useState2[0],\n      setDidMount = _useState2[1];\n\n  var _useState3 = useState(false),\n      gameStarted = _useState3[0],\n      setGameStarted = _useState3[1];\n\n  useEffect(function () {\n    if (didMount && gameStarted && !is_game_loading) {\n      console.log('interval begin');\n      var startCounting = setInterval(function () {\n        setCounter(function (counter) {\n          return counter - 1;\n        });\n      }, 1000);\n    }\n\n    if (didMount && gameStarted && is_game_loading) {\n      console.log('interval end');\n      clearInterval(startCounting);\n    }\n  }, [is_game_loading]);\n  useEffect(function () {\n    didMount && (is_game_started ? setGameStarted(true) : setGameStarted(false));\n  }, [is_game_started]);\n  useEffect(function () {\n    setDidMount(true);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CounterContainer, {\n    children: counter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n} // export default function MainCounter({game_status, main_counter}) {\n//   React.useEffect(() => {\n//     if(game_status.isStarted) {\n//       let startingValue = 60\n//       const DIV = document.getElementById('counter')\n//       const task = () => {\n//         startingValue--\n//         DIV.innerText = startingValue\n//         startingValue === 0 && stopCounting()\n//       }\n//       const runCounting = setInterval(task, 1000)\n//       const stopCounting = () => clearInterval(runCounting)\n//     }\n//   },[game_status.isStarted])\n//   return (\n//     <CounterContainer>\n//       <div id='counter'></div>\n//     </CounterContainer>\n//   )\n// }\n// React.useEffect(() => {\n//   game_status.isStarted ? \n//   startTimer()\n//   : console.log('game over')\n// }, [game_status.isStarted])\n// React.useEffect(() => {\n//   game_status.isRunning ? console.log('running') : game_status.isLoading && console.log('loading') \n// }, [game_status.isRunning])\n\n_s(MainCounter, \"kyU2ckt8iWXZI6krPDyC86L4Ihk=\");\n\n_c2 = MainCounter;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CounterContainer\");\n$RefreshReg$(_c2, \"MainCounter\");","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/components/styled-components/MainCounter.js"],"names":["styled","useState","useEffect","moment","countdown","CounterContainer","div","MainCounter","is_game_started","is_game_loading","game_counter","counter","setCounter","didMount","setDidMount","gameStarted","setGameStarted","console","log","startCounting","setInterval","clearInterval"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,IAAMC,gBAAgB,GAAGL,MAAM,CAACM,GAAV,mBAAtB;KAAMD,gB;AAON,eAAe,SAASE,WAAT,OAAuE;AAAA;;AAAA,MAAjDC,eAAiD,QAAjDA,eAAiD;AAAA,MAAhCC,eAAgC,QAAhCA,eAAgC;AAAA,MAAfC,YAAe,QAAfA,YAAe;;AAAA,kBACtDT,QAAQ,CAAC,GAAD,CAD8C;AAAA,MAC7EU,OAD6E;AAAA,MACpEC,UADoE;;AAAA,mBAEpDX,QAAQ,CAAC,KAAD,CAF4C;AAAA,MAE7EY,QAF6E;AAAA,MAEnEC,WAFmE;;AAAA,mBAG9Cb,QAAQ,CAAC,KAAD,CAHsC;AAAA,MAG7Ec,WAH6E;AAAA,MAGhEC,cAHgE;;AAKpFd,EAAAA,SAAS,CAAC,YAAM;AAEd,QAAGW,QAAQ,IAAIE,WAAZ,IAA2B,CAACN,eAA/B,EAAgD;AAC9CQ,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,UAAIC,aAAa,GAAGC,WAAW,CAAC,YAAM;AACpCR,QAAAA,UAAU,CAAC,UAAAD,OAAO;AAAA,iBAAIA,OAAO,GAAG,CAAd;AAAA,SAAR,CAAV;AACD,OAF8B,EAE5B,IAF4B,CAA/B;AAGD;;AACD,QAAGE,QAAQ,IAAIE,WAAZ,IAA2BN,eAA9B,EAA+C;AAC7CQ,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAG,MAAAA,aAAa,CAACF,aAAD,CAAb;AACD;AACF,GAZQ,EAYN,CAACV,eAAD,CAZM,CAAT;AAcAP,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,QAAQ,KAAKL,eAAe,GAAGQ,cAAc,CAAC,IAAD,CAAjB,GAA0BA,cAAc,CAAC,KAAD,CAA5D,CAAR;AACD,GAFQ,EAEN,CAACR,eAAD,CAFM,CAAT;AAIAN,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,gBAAD;AAAA,cACGH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GArEwBJ,W;;MAAAA,W","sourcesContent":["import styled from \"styled-components\";\nimport { useState, useEffect } from \"react\"\nimport moment from \"moment\"\nimport { countdown } from \"../../redux/actions\"\n\nconst CounterContainer = styled.div`\n  text-transform: lowercase;\n  font-weight: 900;\n  font-size: 3rem;\n  display: inline-block;\n`;\n\nexport default function MainCounter({is_game_started, is_game_loading, game_counter}) {\n  const [counter, setCounter] = useState(100)\n  const [didMount, setDidMount] = useState(false)\n  const [gameStarted, setGameStarted] = useState(false)\n\n  useEffect(() => {\n    \n    if(didMount && gameStarted && !is_game_loading) {\n      console.log('interval begin')\n      var startCounting = setInterval(() => {\n        setCounter(counter => counter - 1)\n      }, 1000)\n    }\n    if(didMount && gameStarted && is_game_loading) {\n      console.log('interval end')\n      clearInterval(startCounting)\n    }\n  }, [is_game_loading])\n\n  useEffect(() => {\n    didMount && (is_game_started ? setGameStarted(true) : setGameStarted(false))\n  }, [is_game_started])\n\n  useEffect(() => {\n    setDidMount(true)\n  }, [])\n\n  return (\n    <CounterContainer>\n      {counter}\n    </CounterContainer>\n  )\n}\n\n\n// export default function MainCounter({game_status, main_counter}) {\n//   React.useEffect(() => {\n//     if(game_status.isStarted) {\n//       let startingValue = 60\n//       const DIV = document.getElementById('counter')\n//       const task = () => {\n//         startingValue--\n//         DIV.innerText = startingValue\n//         startingValue === 0 && stopCounting()\n//       }\n//       const runCounting = setInterval(task, 1000)\n//       const stopCounting = () => clearInterval(runCounting)\n//     }\n//   },[game_status.isStarted])\n//   return (\n//     <CounterContainer>\n//       <div id='counter'></div>\n//     </CounterContainer>\n//   )\n// }\n\n\n\n\n\n\n\n// React.useEffect(() => {\n//   game_status.isStarted ? \n//   startTimer()\n//   : console.log('game over')\n// }, [game_status.isStarted])\n// React.useEffect(() => {\n//   game_status.isRunning ? console.log('running') : game_status.isLoading && console.log('loading') \n// }, [game_status.isRunning])"]},"metadata":{},"sourceType":"module"}