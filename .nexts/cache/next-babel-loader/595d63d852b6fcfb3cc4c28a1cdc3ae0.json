{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/popups/PopupUserData.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, Fragment } from \"react\";\nimport * as SC from \"../../../styled-components/Popups\";\nexport function PopupUserData(_ref) {\n  _s();\n\n  var _this = this;\n\n  var gameIsReadyToStart = _ref.gameIsReadyToStart;\n  var game_difficulty = [\"easy\", \"medium\", \"hard\"];\n\n  var _useState = useState(false),\n      username = _useState[0],\n      setUsername = _useState[1];\n\n  var _useState2 = useState(false),\n      warning = _useState2[0],\n      setWarning = _useState2[1];\n\n  var _useState3 = useState(false),\n      difficulty = _useState3[0],\n      setDifficulty = _useState3[1];\n\n  var _useState4 = useState(true),\n      usernamePanel = _useState4[0],\n      showUsernamePanel = _useState4[1];\n\n  var handleTyping = function handleTyping(e) {\n    0 < e.target.value.length && e.target.value.length < 3 ? setWarning(true) : setWarning(false); // check if username doesn't match one of usernames in MongoDatabase\n\n    setUsername(e.target.value);\n  };\n\n  var validateUserName = function validateUserName() {\n    warning || !username ? alert('Wrong username! Try different one!') : showUsernamePanel(false);\n  };\n\n  useEffect(function () {\n    if (difficulty) {\n      gameIsReadyToStart(difficulty);\n    }\n  }, [difficulty]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: usernamePanel ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SC.WelcomeText, {\n        children: \"Let\\u2019s see how good you are! Starting from your name...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SC.TextInput, {\n        type: \"text\",\n        onChange: function onChange(e) {\n          return handleTyping(e);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SC.TextInputHint, {\n        visible: warning,\n        children: \"Wrong nickname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SC.PlayButton, {\n        onClick: function onClick() {\n          return validateUserName();\n        },\n        children: \"Let's Play!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SC.WelcomeText, {\n        center: true,\n        children: \"Set game difficulty...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), game_difficulty.map(function (diff_lvl, i) {\n        return /*#__PURE__*/_jsxDEV(SC.PlayButton, {\n          onClick: function onClick() {\n            return setDifficulty(i + 1);\n          },\n          children: diff_lvl\n        }, \"key0011\" + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PopupUserData, \"f5e9WMxtkELzanBnlMVX4QE57JQ=\");\n\n_c = PopupUserData;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopupUserData\");","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/popups/PopupUserData.js"],"names":["useState","useEffect","Fragment","SC","PopupUserData","gameIsReadyToStart","game_difficulty","username","setUsername","warning","setWarning","difficulty","setDifficulty","usernamePanel","showUsernamePanel","handleTyping","e","target","value","length","validateUserName","alert","map","diff_lvl","i"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,OAA9C;AACA,OAAO,KAAKC,EAAZ,MAAoB,mCAApB;AAEA,OAAO,SAASC,aAAT,OAA+C;AAAA;;AAAA;;AAAA,MAAtBC,kBAAsB,QAAtBA,kBAAsB;AACpD,MAAMC,eAAe,GAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,MAAnB,CAAxB;;AADoD,kBAEpBN,QAAQ,CAAC,KAAD,CAFY;AAAA,MAE7CO,QAF6C;AAAA,MAEnCC,WAFmC;;AAAA,mBAGtBR,QAAQ,CAAC,KAAD,CAHc;AAAA,MAG7CS,OAH6C;AAAA,MAGpCC,UAHoC;;AAAA,mBAIhBV,QAAQ,CAAC,KAAD,CAJQ;AAAA,MAI7CW,UAJ6C;AAAA,MAIjCC,aAJiC;;AAAA,mBAKTZ,QAAQ,CAAC,IAAD,CALC;AAAA,MAK7Ca,aAL6C;AAAA,MAK9BC,iBAL8B;;AAMpD,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AACzB,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,MAAnB,IAA6BH,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,MAAf,GAAwB,CAAtD,GACIT,UAAU,CAAC,IAAD,CADd,GAEIA,UAAU,CAAC,KAAD,CAFd,CAD0B,CAGD;;AACzBF,IAAAA,WAAW,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,GALD;;AAMA,MAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC5BX,IAAAA,OAAO,IAAI,CAACF,QAAb,GACIc,KAAK,CAAC,oCAAD,CADT,GAEIP,iBAAiB,CAAC,KAAD,CAFrB;AAGD,GAJD;;AAKAb,EAAAA,SAAS,CAAC,YAAM;AACd,QAAGU,UAAH,EAAe;AACbN,MAAAA,kBAAkB,CAACM,UAAD,CAAlB;AACD;AACF,GAJQ,EAIP,CAACA,UAAD,CAJO,CAAT;AAKA,sBACE,QAAC,QAAD;AAAA,cACCE,aAAa,gBACZ,QAAC,QAAD;AAAA,8BACE,QAAC,EAAD,CAAI,WAAJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,EAAD,CAAI,SAAJ;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA0B,QAAA,QAAQ,EAAE,kBAACG,CAAD;AAAA,iBAAOD,YAAY,CAACC,CAAD,CAAnB;AAAA;AAApC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,EAAD,CAAI,aAAJ;AAAkB,QAAA,OAAO,EAAEP,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,EAAD,CAAI,UAAJ;AAAe,QAAA,OAAO,EAAE;AAAA,iBAAMW,gBAAgB,EAAtB;AAAA,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADY,gBAQZ,QAAC,QAAD;AAAA,8BACE,QAAC,EAAD,CAAI,WAAJ;AAAgB,QAAA,MAAM,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGd,eAAe,CAACgB,GAAhB,CAAoB,UAACC,QAAD,EAAWC,CAAX;AAAA,4BACnB,QAAC,EAAD,CAAI,UAAJ;AAAmC,UAAA,OAAO,EAAE;AAAA,mBAAMZ,aAAa,CAACY,CAAC,GAAC,CAAH,CAAnB;AAAA,WAA5C;AAAA,oBACGD;AADH,WAAoB,YAAYC,CAAhC;AAAA;AAAA;AAAA;AAAA,iBADmB;AAAA,OAApB,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA3CepB,a;;KAAAA,a","sourcesContent":["import { useState, useEffect, Fragment } from \"react\"\nimport * as SC from \"../../../styled-components/Popups\"\n\nexport function PopupUserData({ gameIsReadyToStart }) {\n  const game_difficulty = [\"easy\", \"medium\", \"hard\"]\n  const [username, setUsername] = useState(false)\n  const [warning, setWarning] = useState(false)\n  const [difficulty, setDifficulty] = useState(false)\n  const [usernamePanel, showUsernamePanel] = useState(true)\n  const handleTyping = (e) => {\n    (0 < e.target.value.length && e.target.value.length < 3) \n      ? setWarning(true)\n      : setWarning(false);   // check if username doesn't match one of usernames in MongoDatabase\n    setUsername(e.target.value)\n  }\n  const validateUserName = () => {\n    (warning || !username) \n      ? alert('Wrong username! Try different one!') \n      : showUsernamePanel(false)\n  }\n  useEffect(() => {\n    if(difficulty) {\n      gameIsReadyToStart(difficulty)\n    }\n  },[difficulty])\n  return (\n    <Fragment>\n    {usernamePanel ? (\n      <Fragment>\n        <SC.WelcomeText>Letâ€™s see how good you are! Starting from your name...</SC.WelcomeText>\n        <SC.TextInput type=\"text\" onChange={(e) => handleTyping(e)} />\n        <SC.TextInputHint visible={warning}>Wrong nickname</SC.TextInputHint>\n        <SC.PlayButton onClick={() => validateUserName()}>Let's Play!</SC.PlayButton>\n      </Fragment>\n    ) : (\n      <Fragment>\n        <SC.WelcomeText center>Set game difficulty...</SC.WelcomeText>\n        {game_difficulty.map((diff_lvl, i) => (\n          <SC.PlayButton key={\"key0011\" + i} onClick={() => setDifficulty(i+1)}>\n            {diff_lvl}\n          </SC.PlayButton>\n        ))}\n      </Fragment>\n    )}\n    </Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}