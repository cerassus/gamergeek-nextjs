{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/Table.js\";\nimport Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\nimport { useState, useEffect, Fragment } from \"react\";\nimport { getGameDetails, fetchNewGameDatabase } from \"../../../global/fetch\";\nimport moment from 'moment';\nimport * as SC from \"../../styled-components/Popup\";\nconst game_difficulty = [\"easy\", \"medium\", \"hard\"];\nexport default function TableComponent({\n  random_game,\n  startGame,\n  startLoading,\n  endGame,\n  user_score,\n  clearUserScore,\n  newGameDatabase,\n  showRandomGame,\n  pushNewAnswer,\n  showHint,\n  clearHint,\n  game_status,\n  game_database,\n  removeItemFromDatabase\n}) {\n  const {\n    0: answerTimeStart,\n    1: setAnswerTimeStart\n  } = useState(false);\n  const {\n    0: hintCounter,\n    1: setHintCounter\n  } = useState(0);\n  const {\n    0: hints,\n    1: setHints\n  } = useState(false);\n  const {\n    0: difficulty,\n    1: setDifficulty\n  } = useState(false);\n  const {\n    0: usernamePanel,\n    1: showUsernamePanel\n  } = useState(true);\n  const {\n    0: warning,\n    1: setWarning\n  } = useState(false);\n  const {\n    0: popup,\n    1: switchPopup\n  } = useState(false);\n  const {\n    0: summary,\n    1: showSummary\n  } = useState(false);\n  const {\n    0: username,\n    1: setUsername\n  } = useState(false);\n\n  const startNewGame = () => {\n    switchPopup(true);\n  };\n\n  const loadNewQuestion = async () => {\n    const randomIndex = Math.floor(Math.random() * game_database.length);\n    !game_status.isLoading && startLoading();\n    clearHint();\n    setHintCounter(0);\n\n    if (game_database === 0) {\n      endGame();\n    } else {\n      showRandomGame(await getGameDetails(game_database[randomIndex]));\n      removeItemFromDatabase(randomIndex);\n    }\n  };\n\n  const getNewDatabase = async () => {\n    startLoading();\n    newGameDatabase(await fetchNewGameDatabase(difficulty - 1));\n    loadNewQuestion();\n  };\n\n  const quitGame = () => {\n    clearHint();\n    setHintCounter(0);\n    setHints(false);\n    showUsernamePanel(true);\n    setDifficulty(false);\n    setUsername(false);\n    setAnswerTimeStart(false);\n    switchPopup(false);\n    user_score.length > 0 && showSummary(true);\n  };\n\n  const getHint = () => {\n    showHint(...hints.splice(Math.floor(Math.random() * hints.length), 1));\n    setHintCounter(hintCounter => hintCounter + 1);\n  };\n\n  const handleTyping = e => {\n    0 < e.target.value.length && e.target.value.length < 3 ? setWarning(true) : setWarning(false); // check if username doesn't match one of usernames in MongoDatabase\n\n    setUsername(e.target.value);\n  };\n\n  const validateUserName = () => {\n    warning || !username ? alert('Wrong username! Try different one!') : showUsernamePanel(false);\n  };\n\n  const close_summary = () => {\n    showSummary(false);\n    clearUserScore();\n  };\n\n  const checkAnswer = async answer => {\n    const answerTimeEnd = moment();\n    const user_answer = answer === random_game.name ? {\n      title: random_game.name,\n      time: answerTimeEnd.diff(answerTimeStart),\n      score: Number((1000 / answerTimeEnd.diff(answerTimeStart) * 10000 * ((10 - hintCounter) / 10)).toFixed()),\n      correct: true,\n      hints_used: hintCounter\n    } : {\n      title: random_game.name,\n      time: answerTimeEnd.diff(answerTimeStart),\n      score: 0,\n      correct: false,\n      skip: answer === \"player_skipped_game\" ? true : false,\n      hints_used: hintCounter\n    };\n    pushNewAnswer(user_answer);\n    loadNewQuestion();\n  };\n\n  useEffect(() => {\n    !game_status.isLoading && setAnswerTimeStart(moment());\n    !game_status.isStarted && quitGame();\n  }, [game_status]);\n  useEffect(() => {\n    random_game && setHints(random_game.hints);\n  }, [random_game]);\n  useEffect(() => {\n    if (difficulty) {\n      switchPopup(false);\n      startGame();\n      getNewDatabase();\n    }\n  }, [difficulty]);\n  useEffect(() => {\n    game_database.length === 120 && loadNewQuestion();\n  }, [game_database]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      top: true,\n      children: !game_status.isStarted ? /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: () => startNewGame(),\n        children: \"start a new challenge\"\n      }, \"key0015\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this) : game_status.isLoading ? /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        children: \"loading\"\n      }, 'key0016', false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 12\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [hintCounter < 3 && /*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          onClick: () => getHint(),\n          children: \"get a hint\"\n        }, \"key0011\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          onClick: () => checkAnswer(\"player_skipped_game\"),\n          children: \"skip\"\n        }, \"key0012\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          onClick: () => endGame(),\n          children: \"quit\"\n        }, \"key0013\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      bottom: true,\n      children: game_status.isStarted && !game_status.isLoading && random_game.answers ? random_game.answers.map((answer, i) => /*#__PURE__*/_jsxDEV(Typography, {\n        answer: true,\n        onClick: answer => checkAnswer(answer.target.innerText),\n        children: answer\n      }, \"key0021\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)) : ``\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SC.Popup, {\n      title: \"Hello gamergeek!\",\n      switch_popup: popup,\n      popupIsClosed: () => quitGame(),\n      children: usernamePanel ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(SC.WelcomeText, {\n          children: \"Let\\u2019s see how good you are! Starting from your name...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(SC.TextInput, {\n          type: \"text\",\n          onChange: e => handleTyping(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(SC.TextInputHint, {\n          visible: warning,\n          children: \"Wrong nickname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(SC.PlayButton, {\n          onClick: () => validateUserName(),\n          children: \"Let's Play!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(SC.WelcomeText, {\n          center: true,\n          children: \"Set game difficulty...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this), game_difficulty.map((diff_lvl, i) => /*#__PURE__*/_jsxDEV(SC.PlayButton, {\n          onClick: () => setDifficulty(i + 1),\n          children: diff_lvl\n        }, \"key0011\" + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SC.Popup, {\n      title: \"Summary\",\n      switch_popup: summary,\n      popupIsClosed: () => close_summary(),\n      children: user_score.length > 0 && summary && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          width: \"95%\",\n          padding: \"2rem 0\",\n          justifyContent: \"space-between\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"50%\",\n            margin: \"1rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(SC.WelcomeText, {\n            children: \"The Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(SC.TD, {\n                children: \"Correct answers:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(SC.TD, {\n                children: user_score.filter(x => x.correct).length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(SC.TD, {\n                children: \"Wrong answers:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(SC.TD, {\n                children: user_score.filter(x => !x.correct).length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(SC.TD, {\n                children: \"Skipped answers:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(SC.TD, {\n                children: user_score.filter(x => x.skip).length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(SC.TD, {\n                children: \"Hints used:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(SC.TD, {\n                children: user_score.map(x => x = x.hints_used).reduce((acc, y) => acc + y)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(SC.TD, {\n                children: \"Quickest response:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(SC.TD, {\n                children: user_score.map(x => x = x.time).sort((a, b) => a - b)[0] / 1000 + \" sec\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(SC.TD, {\n                children: \"Slowest response:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(SC.TD, {\n                children: user_score.map(x => x = x.time).sort((a, b) => a - b)[user_score.length - 1] / 1000 + \" sec\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(SC.TD, {\n                children: \"Average time response:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(SC.TD, {\n                children: (user_score.map(x => x = x.time).reduce((acc, x) => acc + x) / user_score.length / 1000).toFixed(3) + \" sec\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"50%\",\n            margin: \"1rem\",\n            position: \"relative\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(SC.WelcomeText, {\n            children: \"Score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SC.ScoreText, {\n            children: [user_score.map(score => score = score.score).reduce((acc, score) => acc + score).toLocaleString(), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 128\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SC.PlayButton, {\n            summary: true,\n            onClick: () => close_summary(),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/Table.js"],"names":["Table","Typography","useState","useEffect","Fragment","getGameDetails","fetchNewGameDatabase","moment","SC","game_difficulty","TableComponent","random_game","startGame","startLoading","endGame","user_score","clearUserScore","newGameDatabase","showRandomGame","pushNewAnswer","showHint","clearHint","game_status","game_database","removeItemFromDatabase","answerTimeStart","setAnswerTimeStart","hintCounter","setHintCounter","hints","setHints","difficulty","setDifficulty","usernamePanel","showUsernamePanel","warning","setWarning","popup","switchPopup","summary","showSummary","username","setUsername","startNewGame","loadNewQuestion","randomIndex","Math","floor","random","length","isLoading","getNewDatabase","quitGame","getHint","splice","handleTyping","e","target","value","validateUserName","alert","close_summary","checkAnswer","answer","answerTimeEnd","user_answer","name","title","time","diff","score","Number","toFixed","correct","hints_used","skip","isStarted","answers","map","i","innerText","diff_lvl","display","width","padding","justifyContent","margin","filter","x","reduce","acc","y","sort","a","b","position","toLocaleString"],"mappings":"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","sourcesContent":["import Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\nimport { useState, useEffect, Fragment } from \"react\";\nimport { getGameDetails, fetchNewGameDatabase  } from \"../../../global/fetch\";\nimport moment from 'moment'\nimport * as SC from \"../../styled-components/Popup\"\n\nconst game_difficulty = [\"easy\", \"medium\", \"hard\"];\n\nexport default function TableComponent({\n    random_game, startGame, startLoading, endGame, user_score, clearUserScore, newGameDatabase,\n    showRandomGame, pushNewAnswer, showHint, clearHint, game_status, game_database, removeItemFromDatabase }) {\n  const [answerTimeStart, setAnswerTimeStart] = useState(false)\n  const [hintCounter, setHintCounter] = useState(0)\n  const [hints, setHints] = useState(false)\n  const [difficulty, setDifficulty] = useState(false)\n  const [usernamePanel, showUsernamePanel] = useState(true)\n  const [warning, setWarning] = useState(false)\n  const [popup, switchPopup] = useState(false)\n  const [summary, showSummary] = useState(false)\n  const [username, setUsername] = useState(false)\n\n  const startNewGame = () => {\n    switchPopup(true)\n  }\n  const loadNewQuestion = async () => {\n    const randomIndex = Math.floor(Math.random() * game_database.length)\n    !game_status.isLoading && startLoading()\n    clearHint()\n    setHintCounter(0)\n    if(game_database === 0) {\n      endGame() \n    } else {\n      showRandomGame(await getGameDetails(game_database[randomIndex]))\n      removeItemFromDatabase(randomIndex)\n    }\n  } \n  const getNewDatabase = async () => {\n    startLoading()\n    newGameDatabase(await fetchNewGameDatabase(difficulty-1))\n    loadNewQuestion()\n  }\n  const quitGame = () => {\n    clearHint()\n    setHintCounter(0)\n    setHints(false)\n    showUsernamePanel(true)\n    setDifficulty(false)\n    setUsername(false)\n    setAnswerTimeStart(false)\n    switchPopup(false)\n    user_score.length > 0 && showSummary(true)\n  }\n  const getHint = () => {\n    showHint(...hints.splice(Math.floor(Math.random() * hints.length), 1))\n    setHintCounter(hintCounter => hintCounter + 1)\n  }\n  const handleTyping = (e) => {\n    (0 < e.target.value.length && e.target.value.length < 3) \n      ? setWarning(true)\n      : setWarning(false);   // check if username doesn't match one of usernames in MongoDatabase\n    setUsername(e.target.value)\n  }\n  const validateUserName = () => {\n    (warning || !username) ? alert('Wrong username! Try different one!') : showUsernamePanel(false)\n  }\n  const close_summary = () => {\n    showSummary(false)\n    clearUserScore()\n  }\n  const checkAnswer = async (answer) => {\n    const answerTimeEnd = moment()\n    const user_answer = answer === random_game.name\n        ? {\n            title: random_game.name,\n            time: answerTimeEnd.diff(answerTimeStart),\n            score: Number((1000/answerTimeEnd.diff(answerTimeStart)*10000*((10-hintCounter)/10)).toFixed()),\n            correct: true,\n            hints_used: hintCounter,\n          }\n        : {\n            title: random_game.name,\n            time: answerTimeEnd.diff(answerTimeStart),\n            score: 0,\n            correct: false,\n            skip: answer === \"player_skipped_game\" ? true: false,\n            hints_used: hintCounter,\n          };\n    pushNewAnswer(user_answer)\n    loadNewQuestion()\n  }\n\n  useEffect(() => {\n    !game_status.isLoading && setAnswerTimeStart(moment())\n    !game_status.isStarted && quitGame()\n  }, [game_status])\n  useEffect(() => {\n    random_game && setHints(random_game.hints) \n  }, [random_game])\n  useEffect(() => {\n    if(difficulty) {\n      switchPopup(false)\n      startGame()\n      getNewDatabase()\n    }\n  },[difficulty])\n  useEffect(() => {\n    game_database.length === 120 && loadNewQuestion()\n  }, [game_database])\n\n  return (\n    <Fragment>\n      <Table top>    \n        {!game_status.isStarted ?\n          <Typography key={\"key0015\"} link onClick={() => startNewGame()}>start a new challenge</Typography>\n          : game_status.isLoading ?\n           <Typography key={'key0016'} link>loading</Typography>\n           : (\n            <Fragment>\n              {hintCounter < 3 && <Typography key={\"key0011\"} link onClick={() => getHint()}>get a hint</Typography>}\n              <Typography key={\"key0012\"} link onClick={() => checkAnswer(\"player_skipped_game\")}>skip</Typography>\n              <Typography key={\"key0013\"} link onClick={() => endGame()}>quit</Typography>\n            </Fragment>\n          )}\n      </Table>\n      <Table bottom>\n        {(game_status.isStarted && !game_status.isLoading && random_game.answers) ?\n        random_game.answers.map((answer, i) => (\n        <Typography key={\"key0021\"+i} answer onClick={(answer) => checkAnswer(answer.target.innerText)}>{answer}</Typography>))\n        : ``}\n      </Table>\n      <SC.Popup title=\"Hello gamergeek!\" switch_popup={popup} popupIsClosed={() => quitGame()}>\n          {usernamePanel ? (\n            <Fragment>\n              <SC.WelcomeText>Let’s see how good you are! Starting from your name...</SC.WelcomeText>\n              <SC.TextInput type=\"text\" onChange={(e) => handleTyping(e)} />\n              <SC.TextInputHint visible={warning}>Wrong nickname</SC.TextInputHint>\n              <SC.PlayButton onClick={() => validateUserName()}>Let's Play!</SC.PlayButton>\n            </Fragment>\n          ) : (\n            <Fragment>\n              <SC.WelcomeText center>Set game difficulty...</SC.WelcomeText>\n              {game_difficulty.map((diff_lvl, i) => (\n                <SC.PlayButton key={\"key0011\" + i} onClick={() => setDifficulty(i+1)}>\n                  {diff_lvl}\n                </SC.PlayButton>\n              ))}\n            </Fragment>\n          )}\n      </SC.Popup>\n      <SC.Popup title=\"Summary\" switch_popup={summary} popupIsClosed={() => close_summary()}>\n        {(user_score.length > 0 && summary) && (\n          <div style={{display: \"flex\", width: \"95%\", padding: \"2rem 0\", justifyContent: \"space-between\"}}>\n            <div style={{width: \"50%\", margin: \"1rem\"}}>\n              <SC.WelcomeText>The Game</SC.WelcomeText>\n              <table>\n                <tr>\n                  <SC.TD>Correct answers:</SC.TD>\n                  <SC.TD>{user_score.filter(x => x.correct).length}</SC.TD>\n                </tr>\n                <tr>\n                  <SC.TD>Wrong answers:</SC.TD>\n                  <SC.TD>{user_score.filter(x => !x.correct).length}</SC.TD>\n                </tr>\n                <tr>\n                  <SC.TD>Skipped answers:</SC.TD>\n                  <SC.TD>{user_score.filter(x => x.skip).length}</SC.TD>\n                </tr>\n                <tr>\n                  <SC.TD>Hints used:</SC.TD>\n                  <SC.TD>{user_score.map(x => x = x.hints_used).reduce((acc,y) => acc + y)}</SC.TD>\n                </tr>\n                <tr>\n                  <SC.TD>Quickest response:</SC.TD>\n                  <SC.TD>{(user_score.map(x => x = x.time).sort((a,b) => a-b)[0])/1000 + \" sec\" }</SC.TD>\n                </tr>                \n                <tr>\n                  <SC.TD>Slowest response:</SC.TD>\n                  <SC.TD>{(user_score.map(x => x = x.time).sort((a,b) => a-b)[user_score.length-1])/1000 + \" sec\" }</SC.TD>\n                </tr>                \n                <tr>\n                  <SC.TD>Average time response:</SC.TD>\n                  <SC.TD>{((user_score.map(x => x = x.time).reduce((acc, x) => acc + x))/user_score.length/1000).toFixed(3) + \" sec\" }</SC.TD>\n                </tr>\n              </table>\n            </div>\n            <div style={{width: \"50%\", margin: \"1rem\", position: \"relative\"}}>\n              <SC.WelcomeText>Score:</SC.WelcomeText>\n              <SC.ScoreText>{user_score.map(score => score = score.score).reduce((acc,score) => acc + score).toLocaleString()} <span>points</span></SC.ScoreText>\n              <SC.PlayButton summary onClick={() => close_summary()}>Close</SC.PlayButton>\n            </div>\n          </div>\n        )}\n      </SC.Popup>\n    </Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}