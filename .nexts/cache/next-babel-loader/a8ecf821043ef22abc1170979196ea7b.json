{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var fetchNewGameDatabase = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(difficulty) {\n    var database_array, page, i, apishot, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            database_array = [];\n            page = 0;\n            _context.t0 = difficulty;\n            _context.next = _context.t0 === 0 ? 5 : _context.t0 === 1 ? 7 : _context.t0 === 2 ? 9 : 11;\n            break;\n\n          case 5:\n            page = 1;\n            return _context.abrupt(\"break\", 12);\n\n          case 7:\n            page = 4;\n            return _context.abrupt(\"break\", 12);\n\n          case 9:\n            page = 7;\n            return _context.abrupt(\"break\", 12);\n\n          case 11:\n            return _context.abrupt(\"return\", []);\n\n          case 12:\n            i = 0;\n\n          case 13:\n            if (!(i < 3)) {\n              _context.next = 31;\n              break;\n            }\n\n            _context.prev = 14;\n            _context.next = 17;\n            return fetch(\"https://api.rawg.io/api/games?page=\".concat(page + i, \"&page_size=40\"));\n\n          case 17:\n            apishot = _context.sent;\n            _context.next = 20;\n            return apishot.json();\n\n          case 20:\n            data = _context.sent;\n            database_array.push(data.results.map(function (game) {\n              return game = game.id;\n            }));\n            _context.next = 28;\n            break;\n\n          case 24:\n            _context.prev = 24;\n            _context.t1 = _context[\"catch\"](14);\n            console.log(_context.t1);\n            return _context.abrupt(\"return\", []);\n\n          case 28:\n            i++;\n            _context.next = 13;\n            break;\n\n          case 31:\n            console.log(database_array.flat());\n            return _context.abrupt(\"return\", database_array.flat());\n\n          case 33:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[14, 24]]);\n  }));\n\n  return function fetchNewGameDatabase(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/global/fetchNewGameDatabase.js"],"names":["fetchNewGameDatabase","difficulty","database_array","page","i","fetch","apishot","json","data","push","results","map","game","id","console","log","flat"],"mappings":";;AAAA,OAAO,IAAMA,oBAAoB;AAAA,sEAAG,iBAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1BC,YAAAA,cAD0B,GACT,EADS;AAE5BC,YAAAA,IAF4B,GAErB,CAFqB;AAAA,0BAGzBF,UAHyB;AAAA,4CAIvB,CAJuB,uBAKvB,CALuB,uBAMvB,CANuB;AAAA;;AAAA;AAInBE,YAAAA,IAAI,GAAG,CAAP;AAJmB;;AAAA;AAKnBA,YAAAA,IAAI,GAAG,CAAP;AALmB;;AAAA;AAMnBA,YAAAA,IAAI,GAAG,CAAP;AANmB;;AAAA;AAAA,6CAOZ,EAPY;;AAAA;AASxBC,YAAAA,CATwB,GAStB,CATsB;;AAAA;AAAA,kBASnBA,CAAC,GAAC,CATiB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAWFC,KAAK,8CAAuCF,IAAI,GAACC,CAA5C,mBAXH;;AAAA;AAWlBE,YAAAA,OAXkB;AAAA;AAAA,mBAYLA,OAAO,CAACC,IAAR,EAZK;;AAAA;AAYlBC,YAAAA,IAZkB;AAaxBN,YAAAA,cAAc,CAACO,IAAf,CAAoBD,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAiB,UAAAC,IAAI;AAAA,qBAAIA,IAAI,GAAGA,IAAI,CAACC,EAAhB;AAAA,aAArB,CAApB;AAbwB;AAAA;;AAAA;AAAA;AAAA;AAgBxBC,YAAAA,OAAO,CAACC,GAAR;AAhBwB,6CAiBjB,EAjBiB;;AAAA;AASdX,YAAAA,CAAC,EATa;AAAA;AAAA;;AAAA;AAoBhCU,YAAAA,OAAO,CAACC,GAAR,CAAYb,cAAc,CAACc,IAAf,EAAZ;AApBgC,6CAqBzBd,cAAc,CAACc,IAAf,EArByB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAApBhB,oBAAoB;AAAA;AAAA;AAAA,GAA1B","sourcesContent":["export const fetchNewGameDatabase = async (difficulty) => {\n    const database_array = []\n    let page = 0\n    switch(difficulty) {\n        case 0: {page = 1; break;}\n        case 1: {page = 4; break;}\n        case 2: {page = 7; break;}\n        default: return []\n    }\n    for(let i=0; i<3; i++) {\n        try {\n            const apishot = await fetch(`https://api.rawg.io/api/games?page=${page+i}&page_size=40`)\n            const data = await apishot.json()\n            database_array.push(data.results.map(game => game = game.id))\n        }\n        catch(error) {\n            console.log(error)\n            return []\n        }\n    }\n    console.log(database_array.flat())\n    return database_array.flat()\n}"]},"metadata":{},"sourceType":"module"}