{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/components/main/challenge/TableTop.js\";\nimport Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\nimport React from \"react\";\nexport default function TableTop({\n  game_status,\n  startGame,\n  stopGame\n}) {\n  const [difficultyChoice, showDifficultyChoice] = React.useState(false);\n\n  const stop = () => {\n    showDifficultyChoice(false);\n    return stopGame();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    top: true,\n    children: game_status ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        href: \"/\",\n        children: \"get a hint\"\n      }, Math.random() * 10000, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        href: \"/\",\n        children: \"skip\"\n      }, Math.random() * 10000, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: stop,\n        children: \"quit\"\n      }, Math.random() * 10000, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : difficultyChoice ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        children: \"set difficulty: \"\n      }, Math.random() * 10000, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: () => startGame(0),\n        children: \"easy\"\n      }, Math.random() * 10000, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: () => startGame(1),\n        children: \"medium\"\n      }, Math.random() * 10000, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: () => startGame(2),\n        children: \"hard\"\n      }, Math.random() * 10000, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n      link: true,\n      onClick: () => showDifficultyChoice(true),\n      children: \"start a new challenge\"\n    }, Math.random() * 10000, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n} // export default function TableTop({ game_status, startGame, stopGame }) {\n//   const [difficultyChoice, showDifficultyChoice] = React.useState(false)\n//   const stop = () => {\n//     showDifficultyChoice(false);\n//     return stopGame();\n//   }\n//   return (\n//     <Table top>\n//       {(!game_status && difficultyChoice) && (\n//         <>\n//         <Typography link>set difficulty: </Typography>\n//         <Typography link onClick={() => startGame(0)}>easy</Typography>\n//         <Typography link onClick={() => startGame(1)}>medium</Typography>\n//         <Typography link onClick={() => startGame(2)}>hard</Typography>\n//         </>\n//       )}\n//       {(!game_status && !difficultyChoice) && (\n//         <Typography link onClick={() => showDifficultyChoice(true)}>start a new challenge</Typography>\n//       )}\n//       {game_status && (\n//         <>\n//           <Typography link href=\"/\">get a hint</Typography>\n//           <Typography link href=\"/\">skip</Typography>\n//           <Typography link onClick={stop}>quit</Typography>\n//         </>\n//       )}\n//     </Table>\n//   );\n// }","map":{"version":3,"sources":["/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/components/main/challenge/TableTop.js"],"names":["Table","Typography","React","TableTop","game_status","startGame","stopGame","difficultyChoice","showDifficultyChoice","useState","stop","Math","random"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,+BAAlB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAIA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,SAAf;AAA0BC,EAAAA;AAA1B,CAAlB,EAAwD;AACrE,QAAM,CAACC,gBAAD,EAAmBC,oBAAnB,IAA2CN,KAAK,CAACO,QAAN,CAAe,KAAf,CAAjD;;AACA,QAAMC,IAAI,GAAG,MAAM;AACjBF,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACA,WAAOF,QAAQ,EAAf;AACD,GAHD;;AAIA,sBACE,QAAC,KAAD;AAAO,IAAA,GAAG,MAAV;AAAA,cACGF,WAAW,gBACV;AAAA,8BACE,QAAC,UAAD;AAAwC,QAAA,IAAI,MAA5C;AAA6C,QAAA,IAAI,EAAC,GAAlD;AAAA;AAAA,SAAiBO,IAAI,CAACC,MAAL,KAAgB,KAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAwC,QAAA,IAAI,MAA5C;AAA6C,QAAA,IAAI,EAAC,GAAlD;AAAA;AAAA,SAAiBD,IAAI,CAACC,MAAL,KAAgB,KAAjC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,UAAD;AAAwC,QAAA,IAAI,MAA5C;AAA6C,QAAA,OAAO,EAAEF,IAAtD;AAAA;AAAA,SAAiBC,IAAI,CAACC,MAAL,KAAgB,KAAjC;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,oBADU,GAMRL,gBAAgB,gBAClB;AAAA,8BACA,QAAC,UAAD;AAAwC,QAAA,IAAI,MAA5C;AAAA;AAAA,SAAiBI,IAAI,CAACC,MAAL,KAAgB,KAAjC;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,UAAD;AAAwC,QAAA,IAAI,MAA5C;AAA6C,QAAA,OAAO,EAAE,MAAMP,SAAS,CAAC,CAAD,CAArE;AAAA;AAAA,SAAiBM,IAAI,CAACC,MAAL,KAAgB,KAAjC;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA,QAAC,UAAD;AAAwC,QAAA,IAAI,MAA5C;AAA6C,QAAA,OAAO,EAAE,MAAMP,SAAS,CAAC,CAAD,CAArE;AAAA;AAAA,SAAiBM,IAAI,CAACC,MAAL,KAAgB,KAAjC;AAAA;AAAA;AAAA;AAAA,cAHA,eAIA,QAAC,UAAD;AAAwC,QAAA,IAAI,MAA5C;AAA6C,QAAA,OAAO,EAAE,MAAMP,SAAS,CAAC,CAAD,CAArE;AAAA;AAAA,SAAiBM,IAAI,CAACC,MAAL,KAAgB,KAAjC;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA,oBADkB,gBAOhB,QAAC,UAAD;AAAwC,MAAA,IAAI,MAA5C;AAA6C,MAAA,OAAO,EAAE,MAAMJ,oBAAoB,CAAC,IAAD,CAAhF;AAAA;AAAA,OAAiBG,IAAI,CAACC,MAAL,KAAgB,KAAjC;AAAA;AAAA;AAAA;AAAA;AAdN;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,C,CAoBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\nimport React from \"react\"\n\n\n\nexport default function TableTop({ game_status, startGame, stopGame }) {\n  const [difficultyChoice, showDifficultyChoice] = React.useState(false)\n  const stop = () => {\n    showDifficultyChoice(false);\n    return stopGame();\n  }\n  return (\n    <Table top>\n      {game_status ? (\n        <>\n          <Typography key={Math.random() * 10000} link href=\"/\">get a hint</Typography>\n          <Typography key={Math.random() * 10000} link href=\"/\">skip</Typography>\n          <Typography key={Math.random() * 10000} link onClick={stop}>quit</Typography>\n        </>\n      ) : difficultyChoice ? (\n        <>\n        <Typography key={Math.random() * 10000} link >set difficulty: </Typography>\n        <Typography key={Math.random() * 10000} link onClick={() => startGame(0)}>easy</Typography>\n        <Typography key={Math.random() * 10000} link onClick={() => startGame(1)}>medium</Typography>\n        <Typography key={Math.random() * 10000} link onClick={() => startGame(2)}>hard</Typography>\n        </>\n      ) : <Typography key={Math.random() * 10000} link onClick={() => showDifficultyChoice(true)}>start a new challenge</Typography>}\n    </Table>\n  );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// export default function TableTop({ game_status, startGame, stopGame }) {\n//   const [difficultyChoice, showDifficultyChoice] = React.useState(false)\n//   const stop = () => {\n//     showDifficultyChoice(false);\n//     return stopGame();\n//   }\n//   return (\n//     <Table top>\n//       {(!game_status && difficultyChoice) && (\n//         <>\n//         <Typography link>set difficulty: </Typography>\n//         <Typography link onClick={() => startGame(0)}>easy</Typography>\n//         <Typography link onClick={() => startGame(1)}>medium</Typography>\n//         <Typography link onClick={() => startGame(2)}>hard</Typography>\n//         </>\n//       )}\n//       {(!game_status && !difficultyChoice) && (\n//         <Typography link onClick={() => showDifficultyChoice(true)}>start a new challenge</Typography>\n//       )}\n\n//       {game_status && (\n//         <>\n//           <Typography link href=\"/\">get a hint</Typography>\n//           <Typography link href=\"/\">skip</Typography>\n//           <Typography link onClick={stop}>quit</Typography>\n//         </>\n//       )}\n//     </Table>\n//   );\n// }\n\n\n"]},"metadata":{},"sourceType":"module"}