{"ast":null,"code":"export const fetchNewGameDatabase = async difficulty => {\n  const database_array = [];\n  let page = 0;\n\n  switch (difficulty) {\n    case 0:\n      {\n        page = 1;\n        break;\n      }\n\n    case 1:\n      {\n        page = 4;\n        break;\n      }\n\n    case 2:\n      {\n        page = 7;\n        break;\n      }\n\n    default:\n      return [];\n  }\n\n  for (let i = 0; i < 3; i++) {\n    try {\n      const apishot = await fetch(`https://api.rawg.io/api/games?page=${page + i}&page_size=40`);\n      const data = await apishot.json();\n      database_array.push(data.results.map(game => game = game.id));\n    } catch (error) {\n      console.log(error);\n      return [];\n    }\n  }\n\n  console.log(database_array.flat());\n  return database_array.flat();\n};","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/global/fetchNewGameDatabase.js"],"names":["fetchNewGameDatabase","difficulty","database_array","page","i","apishot","fetch","data","json","push","results","map","game","id","error","console","log","flat"],"mappings":"AAAA,OAAO,MAAMA,oBAAoB,GAAG,MAAOC,UAAP,IAAsB;AACtD,QAAMC,cAAc,GAAG,EAAvB;AACA,MAAIC,IAAI,GAAG,CAAX;;AACA,UAAOF,UAAP;AACI,SAAK,CAAL;AAAQ;AAACE,QAAAA,IAAI,GAAG,CAAP;AAAU;AAAO;;AAC1B,SAAK,CAAL;AAAQ;AAACA,QAAAA,IAAI,GAAG,CAAP;AAAU;AAAO;;AAC1B,SAAK,CAAL;AAAQ;AAACA,QAAAA,IAAI,GAAG,CAAP;AAAU;AAAO;;AAC1B;AAAS,aAAO,EAAP;AAJb;;AAMA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,CAAf,EAAkBA,CAAC,EAAnB,EAAuB;AACnB,QAAI;AACA,YAAMC,OAAO,GAAG,MAAMC,KAAK,CAAE,sCAAqCH,IAAI,GAACC,CAAE,eAA9C,CAA3B;AACA,YAAMG,IAAI,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAnB;AACAN,MAAAA,cAAc,CAACO,IAAf,CAAoBF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiBC,IAAI,IAAIA,IAAI,GAAGA,IAAI,CAACC,EAArC,CAApB;AACH,KAJD,CAKA,OAAMC,KAAN,EAAa;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAO,EAAP;AACH;AACJ;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYd,cAAc,CAACe,IAAf,EAAZ;AACA,SAAOf,cAAc,CAACe,IAAf,EAAP;AACH,CAtBM","sourcesContent":["export const fetchNewGameDatabase = async (difficulty) => {\n    const database_array = []\n    let page = 0\n    switch(difficulty) {\n        case 0: {page = 1; break;}\n        case 1: {page = 4; break;}\n        case 2: {page = 7; break;}\n        default: return []\n    }\n    for(let i=0; i<3; i++) {\n        try {\n            const apishot = await fetch(`https://api.rawg.io/api/games?page=${page+i}&page_size=40`)\n            const data = await apishot.json()\n            database_array.push(data.results.map(game => game = game.id))\n        }\n        catch(error) {\n            console.log(error)\n            return []\n        }\n    }\n    console.log(database_array.flat())\n    return database_array.flat()\n}"]},"metadata":{},"sourceType":"module"}