{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/components/main/challenge/ScreenshotViewer.js\",\n    _s = $RefreshSig$();\n\nimport Container from \"../../styled-components/Container\";\nimport Screenshot from \"../../styled-components/Screenshot\";\nimport ScreenshotArrow from \"../../styled-components/ScreenshotArrow\";\nimport React from \"react\";\nvar screenshots = [{\n  src: \"img/witcher.png\"\n}, {\n  src: \"img/witcher2.jpg\"\n}, {\n  src: \"img/witcher1.jpg\"\n}];\nexport default function Challenge() {\n  _s();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      screenshotIndex = _React$useState2[0],\n      setIndex = _React$useState2[1];\n\n  var previousClick = function previousClick() {\n    return screenshotIndex === 0 ? setIndex(2) : setIndex(screenshotIndex - 1);\n  };\n\n  var nextClick = function nextClick() {\n    return screenshotIndex === 2 ? setIndex(0) : setIndex(screenshotIndex + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    type: \"standard\",\n    width: \"min(95rem, 95%)\",\n    flex: true,\n    children: [/*#__PURE__*/_jsxDEV(ScreenshotArrow, {\n      left: true,\n      onClick: previousClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Screenshot, {\n      src: screenshots[screenshotIndex].src\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ScreenshotArrow, {\n      right: true,\n      onClick: nextClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Challenge, \"DavBHKANS0JH6YU0VJYzE4Kg28s=\");\n\n_c = Challenge;\n\nvar _c;\n\n$RefreshReg$(_c, \"Challenge\");","map":{"version":3,"sources":["/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/components/main/challenge/ScreenshotViewer.js"],"names":["Container","Screenshot","ScreenshotArrow","React","screenshots","src","Challenge","useState","screenshotIndex","setIndex","previousClick","nextClick"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,mCAAtB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,eAAP,MAA4B,yCAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,WAAW,GAAG,CAChB;AACIC,EAAAA,GAAG,EAAE;AADT,CADgB,EAIhB;AACIA,EAAAA,GAAG,EAAE;AADT,CAJgB,EAOhB;AACIA,EAAAA,GAAG,EAAE;AADT,CAPgB,CAApB;AAYA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAAA,wBACAH,KAAK,CAACI,QAAN,CAAe,CAAf,CADA;AAAA;AAAA,MAC7BC,eAD6B;AAAA,MACZC,QADY;;AAEpC,MAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,WAAMF,eAAe,KAAK,CAApB,GAAwBC,QAAQ,CAAC,CAAD,CAAhC,GAAsCA,QAAQ,CAACD,eAAe,GAAG,CAAnB,CAApD;AAAA,GAAtB;;AACA,MAAMG,SAAS,GAAG,SAAZA,SAAY;AAAA,WAAMH,eAAe,KAAK,CAApB,GAAwBC,QAAQ,CAAC,CAAD,CAAhC,GAAsCA,QAAQ,CAACD,eAAe,GAAG,CAAnB,CAApD;AAAA,GAAlB;;AACI,sBACI,QAAC,SAAD;AAAW,IAAA,IAAI,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC,iBAAjC;AAAmD,IAAA,IAAI,MAAvD;AAAA,4BACI,QAAC,eAAD;AAAiB,MAAA,IAAI,MAArB;AAAsB,MAAA,OAAO,EAAEE;AAA/B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,UAAD;AAAY,MAAA,GAAG,EAAEN,WAAW,CAACI,eAAD,CAAX,CAA6BH;AAA9C;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,eAAD;AAAiB,MAAA,KAAK,MAAtB;AAAuB,MAAA,OAAO,EAAEM;AAAhC;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAXuBL,S;;KAAAA,S","sourcesContent":["import Container from \"../../styled-components/Container\"\nimport Screenshot from \"../../styled-components/Screenshot\"\nimport ScreenshotArrow from \"../../styled-components/ScreenshotArrow\"\nimport React from \"react\"\n\nconst screenshots = [\n    {\n        src: \"img/witcher.png\",\n    },\n    {\n        src: \"img/witcher2.jpg\",\n    },\n    {\n        src: \"img/witcher1.jpg\",\n    },\n]\n\nexport default function Challenge() {\nconst [screenshotIndex, setIndex] = React.useState(0)\nconst previousClick = () => screenshotIndex === 0 ? setIndex(2) : setIndex(screenshotIndex - 1)\nconst nextClick = () => screenshotIndex === 2 ? setIndex(0) : setIndex(screenshotIndex + 1)\n    return (\n        <Container type=\"standard\" width=\"min(95rem, 95%)\" flex>\n            <ScreenshotArrow left onClick={previousClick}/>\n            <Screenshot src={screenshots[screenshotIndex].src} />\n            <ScreenshotArrow right onClick={nextClick}/>\n        </Container>\n    )\n}"]},"metadata":{},"sourceType":"module"}