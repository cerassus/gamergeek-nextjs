{"ast":null,"code":"import { connect } from \"react-redux\";\nimport TableBottom from \"../components/main/challenge/TableBottom\";\nimport { newAnswer as _newAnswer, getRandomGame as _getRandomGame } from \"../redux/actions\";\n\nvar mapState = function mapState(state) {\n  return {\n    game_status: state.game_status,\n    random_game: state.random_game,\n    screenshots_loaded: state.screenshots_loaded\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    newAnswer: function newAnswer(answer) {\n      return dispatch(_newAnswer(answer));\n    },\n    getRandomGame: function getRandomGame(obj) {\n      return dispatch(_getRandomGame(obj));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(TableBottom);","map":{"version":3,"sources":["/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/containers/TableBottom.js"],"names":["connect","TableBottom","newAnswer","getRandomGame","mapState","state","game_status","random_game","screenshots_loaded","mapDispatch","dispatch","answer","obj"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,SAASC,SAAS,IAATA,UAAT,EAAoBC,aAAa,IAAbA,cAApB,QAAyC,kBAAzC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SAAK;AACvBC,IAAAA,WAAW,EAAED,KAAK,CAACC,WADI;AAEvBC,IAAAA,WAAW,EAAEF,KAAK,CAACE,WAFI;AAGvBC,IAAAA,kBAAkB,EAAEH,KAAK,CAACG;AAHH,GAAL;AAAA,CAAtB;;AAMA,IAAMC,WAAW,GAAI,SAAfA,WAAe,CAAAC,QAAQ;AAAA,SAAK;AAChCR,IAAAA,SAAS,EAAE,mBAACS,MAAD;AAAA,aAAYD,QAAQ,CAACR,UAAS,CAACS,MAAD,CAAV,CAApB;AAAA,KADqB;AAEhCR,IAAAA,aAAa,EAAE,uBAACS,GAAD;AAAA,aAASF,QAAQ,CAACP,cAAa,CAACS,GAAD,CAAd,CAAjB;AAAA;AAFiB,GAAL;AAAA,CAA7B;;AAKA,eAAeZ,OAAO,CAACI,QAAD,EAAWK,WAAX,CAAP,CAA+BR,WAA/B,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport TableBottom from \"../components/main/challenge/TableBottom\"\nimport { newAnswer, getRandomGame } from \"../redux/actions\"\n\nconst mapState = state => ({\n    game_status: state.game_status,\n    random_game: state.random_game,\n    screenshots_loaded: state.screenshots_loaded,\n})\n\nconst mapDispatch  = dispatch => ({\n  newAnswer: (answer) => dispatch(newAnswer(answer)),\n  getRandomGame: (obj) => dispatch(getRandomGame(obj)),\n})\n\nexport default connect(mapState, mapDispatch)(TableBottom);\n"]},"metadata":{},"sourceType":"module"}