{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/Hints.js\";\nimport Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\nexport default function Hints({\n  hints_array\n}) {\n  return hints_array.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n    hint: true,\n    children: hints_array.map((item, i) => /*#__PURE__*/_jsxDEV(Typography, {\n      hint: true,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: Object.entries(item)[0][0] + \": \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), Object.entries(item)[0][1]]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 36\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this) : null;\n}","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/Hints.js"],"names":["Table","Typography","Hints","hints_array","length","map","item","i","Object","entries"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,+BAAlB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAAgC;AAC7C,SAAOA,WAAW,CAACC,MAAZ,GAAqB,CAArB,gBACL,QAAC,KAAD;AAAO,IAAA,IAAI,MAAX;AAAA,cACGD,WAAW,CAACE,GAAZ,CAAgB,CAACC,IAAD,EAAMC,CAAN,kBAAY,QAAC,UAAD;AAAoB,MAAA,IAAI,MAAxB;AAAA,8BAC3B;AAAA,kBAAOC,MAAM,CAACC,OAAP,CAAeH,IAAf,EAAqB,CAArB,EAAwB,CAAxB,IAA6B;AAApC;AAAA;AAAA;AAAA;AAAA,cAD2B,EAE1BE,MAAM,CAACC,OAAP,CAAeH,IAAf,EAAqB,CAArB,EAAwB,CAAxB,CAF0B;AAAA,OAAiBC,CAAjB;AAAA;AAAA;AAAA;AAAA,YAA5B;AADH;AAAA;AAAA;AAAA;AAAA,UADK,GAOH,IAPJ;AAQD","sourcesContent":["import Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\n\nexport default function Hints({ hints_array }) {\n  return hints_array.length > 0 ?\n    <Table hint>\n      {hints_array.map((item,i) => <Typography key={i} hint>\n        <span>{Object.entries(item)[0][0] + \": \"}</span>\n        {Object.entries(item)[0][1]}\n        </Typography>)} \n    </Table>   \n    : null   \n}"]},"metadata":{},"sourceType":"module"}