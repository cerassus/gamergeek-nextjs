{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/components/styled-components/MainCounter.js\";\nimport styled from \"styled-components\";\nimport React from \"react\";\nimport { countdown } from \"../../redux/actions\";\nimport moment from \"moment\";\nconst CounterContainer = styled.div`\n  text-transform: uppercase;\n  font-weight: 900;\n  font-size: 3rem;\n  display: inline-block;\n`;\nexport default function MainCounter({\n  game_status,\n  main_counter\n}) {\n  const [gameTime, setGameTime] = React.useState(60);\n\n  const runCounting = () => setInterval(() => {\n    setGameTime(gameTime - 1);\n  }, 1000);\n\n  const stopCounting = clearInterval(runCounting);\n  return /*#__PURE__*/_jsxDEV(CounterContainer, {\n    onClick: () => runCounting(),\n    children: gameTime > 45 ? gameTime : `poniżej 45 sec`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n} // React.useEffect(() => {\n//   game_status.isStarted ? \n//   startTimer()\n//   : console.log('game over')\n// }, [game_status.isStarted])\n// React.useEffect(() => {\n//   game_status.isRunning ? console.log('running') : game_status.isLoading && console.log('loading') \n// }, [game_status.isRunning])","map":{"version":3,"sources":["/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/components/styled-components/MainCounter.js"],"names":["styled","React","countdown","moment","CounterContainer","div","MainCounter","game_status","main_counter","gameTime","setGameTime","useState","runCounting","setInterval","stopCounting","clearInterval"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,qBAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,gBAAgB,GAAGJ,MAAM,CAACK,GAAI;AACpC;AACA;AACA;AACA;AACA,CALA;AAOA,eAAe,SAASC,WAAT,CAAqB;AAACC,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAArB,EAAkD;AAC/D,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,KAAK,CAACU,QAAN,CAAe,EAAf,CAAhC;;AACA,QAAMC,WAAW,GAAG,MAAMC,WAAW,CAAC,MAAM;AACtCH,IAAAA,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAAX;AACH,GAFkC,EAEhC,IAFgC,CAArC;;AAGA,QAAMK,YAAY,GAAGC,aAAa,CAACH,WAAD,CAAlC;AACA,sBACE,QAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE,MAAMA,WAAW,EAA5C;AAAA,cACGH,QAAQ,GAAG,EAAX,GAAgBA,QAAhB,GAA4B;AAD/B;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import styled from \"styled-components\";\nimport React from \"react\"\nimport {countdown} from \"../../redux/actions\"\nimport moment from \"moment\"\n\nconst CounterContainer = styled.div`\n  text-transform: uppercase;\n  font-weight: 900;\n  font-size: 3rem;\n  display: inline-block;\n`;\n\nexport default function MainCounter({game_status, main_counter}) {\n  const [gameTime, setGameTime] = React.useState(60)\n  const runCounting = () => setInterval(() => {\n        setGameTime(gameTime - 1)\n    }, 1000);\n  const stopCounting = clearInterval(runCounting)\n  return (\n    <CounterContainer onClick={() => runCounting()}>\n      {gameTime > 45 ? gameTime : `poniżej 45 sec`}\n    </CounterContainer>\n  )\n}\n\n\n// React.useEffect(() => {\n//   game_status.isStarted ? \n//   startTimer()\n//   : console.log('game over')\n// }, [game_status.isStarted])\n// React.useEffect(() => {\n//   game_status.isRunning ? console.log('running') : game_status.isLoading && console.log('loading') \n// }, [game_status.isRunning])"]},"metadata":{},"sourceType":"module"}