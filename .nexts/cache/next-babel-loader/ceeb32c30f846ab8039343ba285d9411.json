{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/components/main/challenge/Table.js\";\nimport Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\nimport React from \"react\";\nimport { pickRandomGame } from \"../../../global/fetch\";\nimport { game_database } from \"../../../global/const\";\nconst game_difficulty = ['easy', 'medium', 'hard'];\nexport default function TableTop({\n  game_status,\n  random_game,\n  screenshots_loaded,\n  startGame,\n  stopGame,\n  getRandomGame,\n  newAnswer,\n  screenshotsAreLoading\n}) {\n  const [difficultyChoice, showDifficultyChoice] = React.useState(false);\n\n  const stop = () => {\n    showDifficultyChoice(false);\n    return stopGame();\n  };\n\n  const start = async difficulty => {\n    screenshotsAreLoading();\n    const randomik = await pickRandomGame(game_database);\n    getRandomGame(randomik);\n    difficulty && startGame(difficulty);\n  };\n\n  const checkAnswer = async answer => {\n    const user_answer = answer.target.innerText === random_game.name ? {\n      title: random_game.name,\n      time: 3,\n      score: 2000,\n      correct: true\n    } : {\n      title: random_game.name,\n      time: 3,\n      score: 0,\n      correct: false\n    };\n    newAnswer(user_answer);\n    start();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      top: true,\n      children: game_status && screenshots_loaded === 'loaded' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          href: \"/\",\n          children: \"get a hint\"\n        }, Math.random() * 10000, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          onClick: start,\n          children: \"skip\"\n        }, Math.random() * 10000, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          onClick: stop,\n          children: \"quit\"\n        }, Math.random() * 10000, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : difficultyChoice && !screenshots_loaded ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          children: \"set difficulty: \"\n        }, Math.random() * 10000, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), game_difficulty.map((diff, i) => /*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          onClick: () => start({\n            i\n          }),\n          children: diff\n        }, Math.random() * 10000, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 44\n        }, this))]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: () => showDifficultyChoice(true),\n        children: \"start a new challenge\"\n      }, Math.random() * 10000, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      bottom: true,\n      children: game_status && random_game.answers && screenshots_loaded === 'loaded' ? random_game.answers.map((answer, i) => /*#__PURE__*/_jsxDEV(Typography, {\n        answer: true,\n        onClick: answer => checkAnswer(answer),\n        children: answer\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 52\n      }, this)) : ``\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n} // export default function TableTop({ game_status, startGame, stopGame }) {\n//   const [difficultyChoice, showDifficultyChoice] = React.useState(false)\n//   const stop = () => {\n//     showDifficultyChoice(false);\n//     return stopGame();\n//   }\n//   return (\n//     <Table top>\n//       {(!game_status && difficultyChoice) && (\n//         <>\n//         <Typography link>set difficulty: </Typography>\n//         <Typography link onClick={() => startGame(0)}>easy</Typography>\n//         <Typography link onClick={() => startGame(1)}>medium</Typography>\n//         <Typography link onClick={() => startGame(2)}>hard</Typography>\n//         </>\n//       )}\n//       {(!game_status && !difficultyChoice) && (\n//         <Typography link onClick={() => showDifficultyChoice(true)}>start a new challenge</Typography>\n//       )}\n//       {game_status && (\n//         <>\n//           <Typography link href=\"/\">get a hint</Typography>\n//           <Typography link href=\"/\">skip</Typography>\n//           <Typography link onClick={stop}>quit</Typography>\n//         </>\n//       )}\n//     </Table>\n//   );\n// }","map":{"version":3,"sources":["/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/components/main/challenge/Table.js"],"names":["Table","Typography","React","pickRandomGame","game_database","game_difficulty","TableTop","game_status","random_game","screenshots_loaded","startGame","stopGame","getRandomGame","newAnswer","screenshotsAreLoading","difficultyChoice","showDifficultyChoice","useState","stop","start","difficulty","randomik","checkAnswer","answer","user_answer","target","innerText","name","title","time","score","correct","Math","random","map","diff","i","answers"],"mappings":"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","sourcesContent":["import Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\nimport React from \"react\"\nimport { pickRandomGame } from \"../../../global/fetch\"\nimport { game_database } from \"../../../global/const\"\n\nconst game_difficulty = ['easy', 'medium', 'hard']\n\nexport default function TableTop({ game_status, random_game, screenshots_loaded, startGame, stopGame, getRandomGame, newAnswer, screenshotsAreLoading }) {\n  const [difficultyChoice, showDifficultyChoice] = React.useState(false)\n  const stop = () => {\n    showDifficultyChoice(false);\n    return stopGame();\n  }\n  const start = async (difficulty) => {\n    screenshotsAreLoading()\n    const randomik = await pickRandomGame(game_database)\n    getRandomGame(randomik)\n    difficulty && startGame(difficulty)\n  }\n  const checkAnswer = async (answer) => {\n    const user_answer = answer.target.innerText === random_game.name ? {\n      title: random_game.name,\n      time: 3,\n      score: 2000,\n      correct: true,\n    } : {\n      title: random_game.name,\n      time: 3,\n      score: 0,\n      correct: false,\n    }\n    newAnswer(user_answer)\n    start()\n  }\n  return (\n    <>\n      <Table top>\n        {(game_status && screenshots_loaded === 'loaded') ? (\n          <>\n            <Typography key={Math.random() * 10000} link href=\"/\">get a hint</Typography>\n            <Typography key={Math.random() * 10000} link onClick={start}>skip</Typography>\n            <Typography key={Math.random() * 10000} link onClick={stop}>quit</Typography>\n          </>\n        ) : (difficultyChoice && !screenshots_loaded) ? (\n          <>\n          <Typography key={Math.random() * 10000} link >set difficulty: </Typography>\n          {game_difficulty.map((diff,i) => <Typography key={Math.random() * 10000} link onClick={() => start({i})}>{diff}</Typography>)}\n          </>\n        ) : <Typography key={Math.random() * 10000} link onClick={() => showDifficultyChoice(true)}>start a new challenge</Typography>}\n      </Table>\n          <Table bottom>\n          {(game_status && random_game.answers && screenshots_loaded === 'loaded') ? (\n            random_game.answers.map((answer, i) => <Typography key={i} answer onClick={answer => checkAnswer(answer)}>{answer}</Typography>)\n          ) : ``}\n      </Table>\n    </>\n  );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// export default function TableTop({ game_status, startGame, stopGame }) {\n//   const [difficultyChoice, showDifficultyChoice] = React.useState(false)\n//   const stop = () => {\n//     showDifficultyChoice(false);\n//     return stopGame();\n//   }\n//   return (\n//     <Table top>\n//       {(!game_status && difficultyChoice) && (\n//         <>\n//         <Typography link>set difficulty: </Typography>\n//         <Typography link onClick={() => startGame(0)}>easy</Typography>\n//         <Typography link onClick={() => startGame(1)}>medium</Typography>\n//         <Typography link onClick={() => startGame(2)}>hard</Typography>\n//         </>\n//       )}\n//       {(!game_status && !difficultyChoice) && (\n//         <Typography link onClick={() => showDifficultyChoice(true)}>start a new challenge</Typography>\n//       )}\n\n//       {game_status && (\n//         <>\n//           <Typography link href=\"/\">get a hint</Typography>\n//           <Typography link href=\"/\">skip</Typography>\n//           <Typography link onClick={stop}>quit</Typography>\n//         </>\n//       )}\n//     </Table>\n//   );\n// }\n\n\n"]},"metadata":{},"sourceType":"module"}