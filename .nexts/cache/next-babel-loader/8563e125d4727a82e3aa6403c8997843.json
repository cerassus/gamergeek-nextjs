{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/cerassus/Websites/gamergeek-nextjs/components/styled-components/MainCounter.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  text-transform: lowercase;\\n  font-weight: 900;\\n  font-size: 3rem;\\n  display: inline-block;\\n  & span {\\n    font-size: 2rem;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\nvar CounterContainer = styled.div(_templateObject());\n_c = CounterContainer;\nexport default function MainCounter(_ref) {\n  _s();\n\n  var game_status = _ref.game_status,\n      endGame = _ref.endGame;\n\n  var _useState = useState(60),\n      counter = _useState[0],\n      setCounter = _useState[1];\n\n  var _useState2 = useState(false),\n      didMount = _useState2[0],\n      setDidMount = _useState2[1];\n\n  useEffect(function () {\n    !game_status.isStarted && setCounter(60);\n    var startCounting = didMount && game_status.isStarted && !game_status.isLoading && setInterval(function () {\n      setCounter(function (counter) {\n        return counter - 0.1;\n      });\n    }, 100);\n    return function () {\n      return clearInterval(startCounting);\n    };\n  }, [game_status]);\n  useEffect(function () {\n    return counter <= 0 && endGame();\n  }, [counter]);\n  useEffect(function () {\n    setDidMount(true);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CounterContainer, {\n    children: game_status.isStarted && counter > 0 && \"00:\".concat(counter.toFixed(3), \" s\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n} // export default function MainCounter({is_game_started, is_game_loading}) {\n//   const [counter, setCounter] = useState(100)\n//   const [didMount, setDidMount] = useState(false)\n//   var startCounting\n//   useEffect(() => {\n//     startCounting = (didMount && is_game_started && !is_game_loading) && setInterval(() => {\n//         setCounter(counter => counter - 0.1)\n//       }, 100)\n//     return () => clearInterval(startCounting)\n//   }, [is_game_loading])                                          // merge reducer into obj\n//   useEffect(() => {\n//      if(!is_game_started) {\n//        console.log(startCounting)\n//       return () => clearInterval(startCounting)\n//      }\n//   }, [is_game_started])\n//   useEffect(() => {\n//     setDidMount(true)\n//   }, [])\n//   return (\n//     <CounterContainer>\n//       {counter.toFixed(3)}\n//     </CounterContainer>\n//   )\n// }\n\n_s(MainCounter, \"h0PIiK1p/sltp/0u9kcrm1FY1cc=\");\n\n_c2 = MainCounter;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CounterContainer\");\n$RefreshReg$(_c2, \"MainCounter\");","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/components/styled-components/MainCounter.js"],"names":["styled","useState","useEffect","CounterContainer","div","MainCounter","game_status","endGame","counter","setCounter","didMount","setDidMount","isStarted","startCounting","isLoading","setInterval","clearInterval","toFixed"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,IAAMC,gBAAgB,GAAGH,MAAM,CAACI,GAAV,mBAAtB;KAAMD,gB;AAUN,eAAe,SAASE,WAAT,OAA+C;AAAA;;AAAA,MAAxBC,WAAwB,QAAxBA,WAAwB;AAAA,MAAXC,OAAW,QAAXA,OAAW;;AAAA,kBAC9BN,QAAQ,CAAC,EAAD,CADsB;AAAA,MACrDO,OADqD;AAAA,MAC5CC,UAD4C;;AAAA,mBAE5BR,QAAQ,CAAC,KAAD,CAFoB;AAAA,MAErDS,QAFqD;AAAA,MAE3CC,WAF2C;;AAI5DT,EAAAA,SAAS,CAAC,YAAM;AACd,KAACI,WAAW,CAACM,SAAb,IAA0BH,UAAU,CAAC,EAAD,CAApC;AACA,QAAMI,aAAa,GACjBH,QAAQ,IACRJ,WAAW,CAACM,SADZ,IAEA,CAACN,WAAW,CAACQ,SAFb,IAGAC,WAAW,CAAC,YAAM;AAChBN,MAAAA,UAAU,CAAC,UAACD,OAAD;AAAA,eAAaA,OAAO,GAAG,GAAvB;AAAA,OAAD,CAAV;AACD,KAFU,EAER,GAFQ,CAJb;AAOA,WAAO;AAAA,aAAMQ,aAAa,CAACH,aAAD,CAAnB;AAAA,KAAP;AACD,GAVQ,EAUN,CAACP,WAAD,CAVM,CAAT;AAYAJ,EAAAA,SAAS,CAAC;AAAA,WAAMM,OAAO,IAAI,CAAX,IAAgBD,OAAO,EAA7B;AAAA,GAAD,EAAkC,CAACC,OAAD,CAAlC,CAAT;AAEAN,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,gBAAD;AAAA,cACGL,WAAW,CAACM,SAAZ,IAAyBJ,OAAO,GAAG,CAAnC,iBAA8CA,OAAO,CAACS,OAAR,CAAgB,CAAhB,CAA9C;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;GAzDwBZ,W;;MAAAA,W","sourcesContent":["import styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\n\nconst CounterContainer = styled.div`\n  text-transform: lowercase;\n  font-weight: 900;\n  font-size: 3rem;\n  display: inline-block;\n  & span {\n    font-size: 2rem;\n  }\n`;\n\nexport default function MainCounter({ game_status, endGame }) {\n  const [counter, setCounter] = useState(60);\n  const [didMount, setDidMount] = useState(false);\n\n  useEffect(() => {\n    !game_status.isStarted && setCounter(60);\n    const startCounting =\n      didMount &&\n      game_status.isStarted &&\n      !game_status.isLoading &&\n      setInterval(() => {\n        setCounter((counter) => counter - 0.1);\n      }, 100);\n    return () => clearInterval(startCounting);\n  }, [game_status]);\n\n  useEffect(() => counter <= 0 && endGame(), [counter]);\n\n  useEffect(() => {\n    setDidMount(true);\n  }, []);\n\n  return (\n    <CounterContainer>\n      {game_status.isStarted && counter > 0 && `00:${counter.toFixed(3)} s`}\n      {/* <span>{game_status.isStarted && counter > 0 && `${counter.toFixed(3).replace(/\\d+\\./,'.')} s`}</span> */}\n    </CounterContainer>\n  );\n}\n\n// export default function MainCounter({is_game_started, is_game_loading}) {\n//   const [counter, setCounter] = useState(100)\n//   const [didMount, setDidMount] = useState(false)\n//   var startCounting\n//   useEffect(() => {\n//     startCounting = (didMount && is_game_started && !is_game_loading) && setInterval(() => {\n//         setCounter(counter => counter - 0.1)\n//       }, 100)\n//     return () => clearInterval(startCounting)\n//   }, [is_game_loading])                                          // merge reducer into obj\n\n//   useEffect(() => {\n//      if(!is_game_started) {\n//        console.log(startCounting)\n//       return () => clearInterval(startCounting)\n//      }\n//   }, [is_game_started])\n\n//   useEffect(() => {\n//     setDidMount(true)\n//   }, [])\n\n//   return (\n//     <CounterContainer>\n//       {counter.toFixed(3)}\n//     </CounterContainer>\n//   )\n// }\n"]},"metadata":{},"sourceType":"module"}