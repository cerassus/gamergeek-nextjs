{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/cerassus/Websites/gamergeek-nextjs/components/styled-components/MainCounter.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  text-transform: lowercase;\\n  font-weight: 900;\\n  font-size: 3rem;\\n  display: inline-block;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from \"styled-components\";\nimport { useState, useEffect, Component } from \"react\";\nimport moment from \"moment\";\nimport { countdown } from \"../../redux/actions\";\nvar CounterContainer = styled.div(_templateObject());\n_c = CounterContainer;\n\nvar MainCounter = /*#__PURE__*/function (_Component) {\n  _inherits(MainCounter, _Component);\n\n  var _super = _createSuper(MainCounter);\n\n  function MainCounter(props) {\n    var _this;\n\n    _classCallCheck(this, MainCounter);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      counter: 60\n    };\n    return _this;\n  }\n\n  _createClass(MainCounter, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(this.props);\n\n      if (this.props.is_game_started && !this.props.is_game_loading) {\n        console.log('interval begin');\n        this.startCounting = setInterval(function () {\n          _this2.setState({\n            counter: _this2.state.counter - 1\n          });\n        }, 1000);\n      }\n\n      if (this.props.is_game_started && this.props.is_game_loading) {\n        console.log('interval end');\n        clearInterval(this.startCounting);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(CounterContainer, {\n        children: this.state.counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return MainCounter;\n}(Component); // export default function MainCounter({is_game_started, is_game_loading, game_counter}) {\n//   const [counter, setCounter] = useState(100)\n//   const [didMount, setDidMount] = useState(false)\n//   const [gameStarted, setGameStarted] = useState(false)\n//   useEffect(() => {\n//     if(didMount && gameStarted && !is_game_loading) {\n//       console.log('interval begin')\n//       var startCounting = setInterval(() => {\n//         setCounter(counter => counter - 1)\n//       }, 1000)\n//     }\n//     if(didMount && gameStarted && is_game_loading) {\n//       console.log('interval end')\n//       clearInterval(startCounting)\n//     }\n//   }, [is_game_loading])\n//   useEffect(() => {\n//     didMount && (is_game_started ? setGameStarted(true) : setGameStarted(false))\n//   }, [is_game_started])\n//   useEffect(() => {\n//     setDidMount(true)\n//   }, [])\n//   return (\n//     <CounterContainer>\n//       {counter}\n//     </CounterContainer>\n//   )\n// }\n// export default function MainCounter({game_status, main_counter}) {\n//   React.useEffect(() => {\n//     if(game_status.isStarted) {\n//       let startingValue = 60\n//       const DIV = document.getElementById('counter')\n//       const task = () => {\n//         startingValue--\n//         DIV.innerText = startingValue\n//         startingValue === 0 && stopCounting()\n//       }\n//       const runCounting = setInterval(task, 1000)\n//       const stopCounting = () => clearInterval(runCounting)\n//     }\n//   },[game_status.isStarted])\n//   return (\n//     <CounterContainer>\n//       <div id='counter'></div>\n//     </CounterContainer>\n//   )\n// }\n// React.useEffect(() => {\n//   game_status.isStarted ? \n//   startTimer()\n//   : console.log('game over')\n// }, [game_status.isStarted])\n// React.useEffect(() => {\n//   game_status.isRunning ? console.log('running') : game_status.isLoading && console.log('loading') \n// }, [game_status.isRunning])\n\n\nexport { MainCounter as default };\n\nvar _c;\n\n$RefreshReg$(_c, \"CounterContainer\");","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/components/styled-components/MainCounter.js"],"names":["styled","useState","useEffect","Component","moment","countdown","CounterContainer","div","MainCounter","props","state","counter","console","log","is_game_started","is_game_loading","startCounting","setInterval","setState","clearInterval"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,IAAMC,gBAAgB,GAAGN,MAAM,CAACO,GAAV,mBAAtB;KAAMD,gB;;IAOeE,W;;;;;AACnB,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAFiB;AAKlB;;;;wCACmB;AAAA;;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;;AACA,UAAG,KAAKA,KAAL,CAAWK,eAAX,IAA8B,CAAC,KAAKL,KAAL,CAAWM,eAA7C,EAA8D;AAC5DH,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,aAAKG,aAAL,GAAqBC,WAAW,CAAC,YAAM;AACrC,UAAA,MAAI,CAACC,QAAL,CAAc;AAACP,YAAAA,OAAO,EAAE,MAAI,CAACD,KAAL,CAAWC,OAAX,GAAqB;AAA/B,WAAd;AACD,SAF+B,EAE7B,IAF6B,CAAhC;AAGD;;AACD,UAAG,KAAKF,KAAL,CAAWK,eAAX,IAA8B,KAAKL,KAAL,CAAWM,eAA5C,EAA6D;AAC3DH,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAM,QAAAA,aAAa,CAAC,KAAKH,aAAN,CAAb;AACD;AACF;;;6BACQ;AACP,0BACE,QAAC,gBAAD;AAAA,kBACG,KAAKN,KAAL,CAAWC;AADd;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;;;;EA1BsCR,S,GA+BzC;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SArGqBK,W","sourcesContent":["import styled from \"styled-components\";\nimport { useState, useEffect, Component } from \"react\"\nimport moment from \"moment\"\nimport { countdown } from \"../../redux/actions\"\n\nconst CounterContainer = styled.div`\n  text-transform: lowercase;\n  font-weight: 900;\n  font-size: 3rem;\n  display: inline-block;\n`;\n\nexport default class MainCounter extends Component {\n  constructor(props) {\n    super(props);  \n    this.state = {\n      counter: 60,\n    }\n  }\n  componentDidMount() {\n    console.log(this.props)\n    if(this.props.is_game_started && !this.props.is_game_loading) {\n      console.log('interval begin')\n      this.startCounting = setInterval(() => {\n        this.setState({counter: this.state.counter - 1})\n      }, 1000)\n    }\n    if(this.props.is_game_started && this.props.is_game_loading) {\n      console.log('interval end')\n      clearInterval(this.startCounting)\n    }\n  }\n  render() {\n    return (\n      <CounterContainer>\n        {this.state.counter}\n      </CounterContainer>\n    )\n  }\n}\n  \n\n\n// export default function MainCounter({is_game_started, is_game_loading, game_counter}) {\n//   const [counter, setCounter] = useState(100)\n//   const [didMount, setDidMount] = useState(false)\n//   const [gameStarted, setGameStarted] = useState(false)\n\n//   useEffect(() => {\n    \n//     if(didMount && gameStarted && !is_game_loading) {\n//       console.log('interval begin')\n//       var startCounting = setInterval(() => {\n//         setCounter(counter => counter - 1)\n//       }, 1000)\n//     }\n//     if(didMount && gameStarted && is_game_loading) {\n//       console.log('interval end')\n//       clearInterval(startCounting)\n//     }\n//   }, [is_game_loading])\n\n//   useEffect(() => {\n//     didMount && (is_game_started ? setGameStarted(true) : setGameStarted(false))\n//   }, [is_game_started])\n\n//   useEffect(() => {\n//     setDidMount(true)\n//   }, [])\n\n//   return (\n//     <CounterContainer>\n//       {counter}\n//     </CounterContainer>\n//   )\n// }\n\n\n\n// export default function MainCounter({game_status, main_counter}) {\n//   React.useEffect(() => {\n//     if(game_status.isStarted) {\n//       let startingValue = 60\n//       const DIV = document.getElementById('counter')\n//       const task = () => {\n//         startingValue--\n//         DIV.innerText = startingValue\n//         startingValue === 0 && stopCounting()\n//       }\n//       const runCounting = setInterval(task, 1000)\n//       const stopCounting = () => clearInterval(runCounting)\n//     }\n//   },[game_status.isStarted])\n//   return (\n//     <CounterContainer>\n//       <div id='counter'></div>\n//     </CounterContainer>\n//   )\n// }\n\n\n\n\n\n\n\n// React.useEffect(() => {\n//   game_status.isStarted ? \n//   startTimer()\n//   : console.log('game over')\n// }, [game_status.isStarted])\n// React.useEffect(() => {\n//   game_status.isRunning ? console.log('running') : game_status.isLoading && console.log('loading') \n// }, [game_status.isRunning])"]},"metadata":{},"sourceType":"module"}