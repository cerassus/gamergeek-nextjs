{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/cerassus/Websites/gamergeek-nextjs/components/styled-components/MainCounter.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  text-transform: lowercase;\\n  font-weight: 900;\\n  font-size: 3rem;\\n  display: inline-block;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from \"styled-components\";\nimport { useState, useEffect, Component } from \"react\";\nvar CounterContainer = styled.div(_templateObject());\n_c = CounterContainer;\nexport default function MainCounter(_ref) {\n  _s();\n\n  var is_game_started = _ref.is_game_started,\n      is_game_loading = _ref.is_game_loading;\n\n  var _useState = useState(100),\n      counter = _useState[0],\n      setCounter = _useState[1];\n\n  var _useState2 = useState(false),\n      didMount = _useState2[0],\n      setDidMount = _useState2[1];\n\n  var _useState3 = useState(false),\n      gameStarted = _useState3[0],\n      setGameStarted = _useState3[1];\n\n  useEffect(function () {\n    var startCounting = didMount && gameStarted && !is_game_loading && setInterval(function () {\n      setCounter(function (counter) {\n        return counter - 1;\n      });\n    }, 1000);\n    return function () {\n      return clearInterval(startCounting);\n    };\n  }, [is_game_loading]);\n  useEffect(function () {\n    didMount && (is_game_started ? setGameStarted(true) : setGameStarted(false));\n  }, [is_game_started]);\n  useEffect(function () {\n    setDidMount(true);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CounterContainer, {\n    children: counter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainCounter, \"kyU2ckt8iWXZI6krPDyC86L4Ihk=\");\n\n_c2 = MainCounter;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CounterContainer\");\n$RefreshReg$(_c2, \"MainCounter\");","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/components/styled-components/MainCounter.js"],"names":["styled","useState","useEffect","Component","CounterContainer","div","MainCounter","is_game_started","is_game_loading","counter","setCounter","didMount","setDidMount","gameStarted","setGameStarted","startCounting","setInterval","clearInterval"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,SAA9B,QAA+C,OAA/C;AAGA,IAAMC,gBAAgB,GAAGJ,MAAM,CAACK,GAAV,mBAAtB;KAAMD,gB;AAQN,eAAe,SAASE,WAAT,OAAyD;AAAA;;AAAA,MAAnCC,eAAmC,QAAnCA,eAAmC;AAAA,MAAlBC,eAAkB,QAAlBA,eAAkB;;AAAA,kBACxCP,QAAQ,CAAC,GAAD,CADgC;AAAA,MAC/DQ,OAD+D;AAAA,MACtDC,UADsD;;AAAA,mBAEtCT,QAAQ,CAAC,KAAD,CAF8B;AAAA,MAE/DU,QAF+D;AAAA,MAErDC,WAFqD;;AAAA,mBAGhCX,QAAQ,CAAC,KAAD,CAHwB;AAAA,MAG/DY,WAH+D;AAAA,MAGlDC,cAHkD;;AAItEZ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMa,aAAa,GAAIJ,QAAQ,IAAIE,WAAZ,IAA2B,CAACL,eAA7B,IAAiDQ,WAAW,CAAC,YAAM;AACrFN,MAAAA,UAAU,CAAC,UAAAD,OAAO;AAAA,eAAIA,OAAO,GAAG,CAAd;AAAA,OAAR,CAAV;AACD,KAF+E,EAE7E,IAF6E,CAAlF;AAGA,WAAO;AAAA,aAAMQ,aAAa,CAACF,aAAD,CAAnB;AAAA,KAAP;AACD,GALQ,EAKN,CAACP,eAAD,CALM,CAAT;AAOAN,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,QAAQ,KAAKJ,eAAe,GAAGO,cAAc,CAAC,IAAD,CAAjB,GAA0BA,cAAc,CAAC,KAAD,CAA5D,CAAR;AACD,GAFQ,EAEN,CAACP,eAAD,CAFM,CAAT;AAIAL,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,gBAAD;AAAA,cACGH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAxBuBH,W;;MAAAA,W","sourcesContent":["import styled from \"styled-components\";\nimport { useState, useEffect, Component } from \"react\"\n\n\nconst CounterContainer = styled.div`\n  text-transform: lowercase;\n  font-weight: 900;\n  font-size: 3rem;\n  display: inline-block;\n`;\n\n\nexport default function MainCounter({is_game_started, is_game_loading}) {\n  const [counter, setCounter] = useState(100)\n  const [didMount, setDidMount] = useState(false)\n  const [gameStarted, setGameStarted] = useState(false)\n  useEffect(() => {\n    const startCounting = (didMount && gameStarted && !is_game_loading) && setInterval(() => {\n        setCounter(counter => counter - 1)\n      }, 1000)\n    return () => clearInterval(startCounting)\n  }, [is_game_loading])\n\n  useEffect(() => {\n    didMount && (is_game_started ? setGameStarted(true) : setGameStarted(false))\n  }, [is_game_started])\n\n  useEffect(() => {\n    setDidMount(true)\n  }, [])\n\n  return (\n    <CounterContainer>\n      {counter}\n    </CounterContainer>\n  )\n}"]},"metadata":{},"sourceType":"module"}