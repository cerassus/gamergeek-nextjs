{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var pickRandomGame = function pickRandomGame(database) {\n  var randomIndex = Math.floor(Math.random() * database.length);\n  var game = database[randomIndex];\n  database.splice(randomIndex, 1);\n  console.log(database);\n  return getGameDetails(game);\n};\n\nvar getGameDetails = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(game) {\n    var apishot, game_details;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch(\"https://api.rawg.io/api/games/\".concat(game.id));\n\n          case 3:\n            apishot = _context.sent;\n            _context.next = 6;\n            return apishot.json();\n\n          case 6:\n            game_details = _context.sent;\n            console.log(game_details);\n            return _context.abrupt(\"return\", getGameScreenshots(game_details));\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            return _context.abrupt(\"return\", {});\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 11]]);\n  }));\n\n  return function getGameDetails(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar getGameScreenshots = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(game) {\n    var apishot, screenshots, game_screenshots, answers, gamess;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return fetch(\"https://api.rawg.io/api/games/\".concat(game.id, \"/screenshots\"));\n\n          case 3:\n            apishot = _context2.sent;\n            _context2.next = 6;\n            return apishot.json();\n\n          case 6:\n            screenshots = _context2.sent;\n            game_screenshots = screenshots.results.splice(0, 3).map(function (screen) {\n              return screen = screen.image;\n            });\n            answers = getSimilarGames(game);\n            console.log('hej', answers);\n            gamess = {\n              id: game.id,\n              name: game.name,\n              altname: game.alternative_names,\n              screenshots: _toConsumableArray(game_screenshots),\n              hints: {\n                developer: game.developers[0].name,\n                released: game.released,\n                genre: game.genres[game.genres.length - 1].name\n              },\n              answers: [game.id]\n            };\n            console.log(gamess);\n            return _context2.abrupt(\"return\", gamess);\n\n          case 15:\n            _context2.prev = 15;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n            return _context2.abrupt(\"return\", {});\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 15]]);\n  }));\n\n  return function getGameScreenshots(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar pick3randomsFromArray = function pick3randomsFromArray(array) {\n  var source = _toConsumableArray(array);\n\n  var resultArray = [];\n\n  for (var i = 0; i < 3; i++) {\n    var randomIndex = Math.floor(Math.random() * source.length);\n    resultArray.push(source.splice(randomIndex, 1)[0]);\n  }\n\n  return resultArray;\n};\n\nexport var getSimilarGames = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(game) {\n    var result, apishot, suggested;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return fetch(\"https://api.rawg.io/api/games/\".concat(game.id, \"/suggested\"));\n\n          case 3:\n            apishot = _context3.sent;\n            _context3.next = 6;\n            return apishot.json();\n\n          case 6:\n            suggested = _context3.sent;\n            result = pick3randomsFromArray(suggested.results.map(function (game) {\n              return game = game.name;\n            }));\n            _context3.next = 14;\n            break;\n\n          case 10:\n            _context3.prev = 10;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n            result = [\"Error\", \"Error\", \"Error\"];\n\n          case 14:\n            return _context3.abrupt(\"return\", result);\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 10]]);\n  }));\n\n  return function getSimilarGames(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/global/fetch.js"],"names":["pickRandomGame","database","randomIndex","Math","floor","random","length","game","splice","console","log","getGameDetails","fetch","id","apishot","json","game_details","getGameScreenshots","screenshots","game_screenshots","results","map","screen","image","answers","getSimilarGames","gamess","name","altname","alternative_names","hints","developer","developers","released","genre","genres","pick3randomsFromArray","array","source","resultArray","i","push","suggested","result"],"mappings":";;;AACA,OAAO,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAACC,QAAD,EAAc;AACxC,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,QAAQ,CAACK,MAApC,CAApB;AACA,MAAMC,IAAI,GAAGN,QAAQ,CAACC,WAAD,CAArB;AACAD,EAAAA,QAAQ,CAACO,MAAT,CAAgBN,WAAhB,EAA6B,CAA7B;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACA,SAAOU,cAAc,CAACJ,IAAD,CAArB;AACH,CANM;;AAQP,IAAMI,cAAc;AAAA,sEAAG,iBAAOJ,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEOK,KAAK,yCAAkCL,IAAI,CAACM,EAAvC,EAFZ;;AAAA;AAETC,YAAAA,OAFS;AAAA;AAAA,mBAGYA,OAAO,CAACC,IAAR,EAHZ;;AAAA;AAGTC,YAAAA,YAHS;AAIfP,YAAAA,OAAO,CAACC,GAAR,CAAYM,YAAZ;AAJe,6CAKRC,kBAAkB,CAACD,YAAD,CALV;;AAAA;AAAA;AAAA;AAQfP,YAAAA,OAAO,CAACC,GAAR;AARe,6CASR,EATQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdC,cAAc;AAAA;AAAA;AAAA,GAApB;;AAaA,IAAMM,kBAAkB;AAAA,uEAAG,kBAAOV,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEOK,KAAK,yCAAkCL,IAAI,CAACM,EAAvC,kBAFZ;;AAAA;AAETC,YAAAA,OAFS;AAAA;AAAA,mBAGWA,OAAO,CAACC,IAAR,EAHX;;AAAA;AAGTG,YAAAA,WAHS;AAITC,YAAAA,gBAJS,GAIUD,WAAW,CAACE,OAAZ,CAAoBZ,MAApB,CAA2B,CAA3B,EAA6B,CAA7B,EAAgCa,GAAhC,CAAoC,UAAAC,MAAM;AAAA,qBAAIA,MAAM,GAAGA,MAAM,CAACC,KAApB;AAAA,aAA1C,CAJV;AAMTC,YAAAA,OANS,GAMCC,eAAe,CAAClB,IAAD,CANhB;AAOfE,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBc,OAAnB;AAEME,YAAAA,MATS,GASA;AACXb,cAAAA,EAAE,EAAEN,IAAI,CAACM,EADE;AAEXc,cAAAA,IAAI,EAAEpB,IAAI,CAACoB,IAFA;AAGXC,cAAAA,OAAO,EAAErB,IAAI,CAACsB,iBAHH;AAIXX,cAAAA,WAAW,qBAAMC,gBAAN,CAJA;AAKXW,cAAAA,KAAK,EAAE;AACHC,gBAAAA,SAAS,EAAExB,IAAI,CAACyB,UAAL,CAAgB,CAAhB,EAAmBL,IAD3B;AAEHM,gBAAAA,QAAQ,EAAE1B,IAAI,CAAC0B,QAFZ;AAGHC,gBAAAA,KAAK,EAAE3B,IAAI,CAAC4B,MAAL,CAAY5B,IAAI,CAAC4B,MAAL,CAAY7B,MAAZ,GAAmB,CAA/B,EAAkCqB;AAHtC,eALI;AAUXH,cAAAA,OAAO,EAAE,CAACjB,IAAI,CAACM,EAAN;AAVE,aATA;AAqBfJ,YAAAA,OAAO,CAACC,GAAR,CAAYgB,MAAZ;AArBe,8CAsBRA,MAtBQ;;AAAA;AAAA;AAAA;AAyBfjB,YAAAA,OAAO,CAACC,GAAR;AAzBe,8CA0BR,EA1BQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAlBO,kBAAkB;AAAA;AAAA;AAAA,GAAxB;;AA8BA,IAAMmB,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,KAAD,EAAW;AACrC,MAAMC,MAAM,sBAAOD,KAAP,CAAZ;;AACA,MAAME,WAAW,GAAG,EAApB;;AACA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,CAAhB,EAAmBA,CAAC,EAApB,EAAwB;AACpB,QAAMtC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBiC,MAAM,CAAChC,MAAlC,CAApB;AACAiC,IAAAA,WAAW,CAACE,IAAZ,CAAiBH,MAAM,CAAC9B,MAAP,CAAcN,WAAd,EAA2B,CAA3B,EAA8B,CAA9B,CAAjB;AACH;;AACD,SAAOqC,WAAP;AACH,CARD;;AAUA,OAAO,IAAMd,eAAe;AAAA,uEAAG,kBAAOlB,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGDK,KAAK,yCAAkCL,IAAI,CAACM,EAAvC,gBAHJ;;AAAA;AAGjBC,YAAAA,OAHiB;AAAA;AAAA,mBAICA,OAAO,CAACC,IAAR,EAJD;;AAAA;AAIjB2B,YAAAA,SAJiB;AAKvBC,YAAAA,MAAM,GAAGP,qBAAqB,CAACM,SAAS,CAACtB,OAAV,CAAkBC,GAAlB,CAAsB,UAAAd,IAAI;AAAA,qBAAIA,IAAI,GAAGA,IAAI,CAACoB,IAAhB;AAAA,aAA1B,CAAD,CAA9B;AALuB;AAAA;;AAAA;AAAA;AAAA;AAQvBlB,YAAAA,OAAO,CAACC,GAAR;AACAiC,YAAAA,MAAM,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CAAT;;AATuB;AAAA,8CAWpBA,MAXoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAflB,eAAe;AAAA;AAAA;AAAA,GAArB","sourcesContent":["\nexport const pickRandomGame = (database) => {\n    const randomIndex = Math.floor(Math.random() * database.length)\n    const game = database[randomIndex]\n    database.splice(randomIndex, 1)\n    console.log(database)\n    return getGameDetails(game)\n}\n\nconst getGameDetails = async (game) => {\n    try {\n        const apishot = await fetch(`https://api.rawg.io/api/games/${game.id}`)\n        const game_details = await apishot.json()\n        console.log(game_details)\n        return getGameScreenshots(game_details)\n    }\n    catch(error) {\n        console.log(error)\n        return {}\n    }\n}\n  \nconst getGameScreenshots = async (game) => {\n        try {\n            const apishot = await fetch(`https://api.rawg.io/api/games/${game.id}/screenshots`)\n            const screenshots = await apishot.json()\n            const game_screenshots = screenshots.results.splice(0,3).map(screen => screen = screen.image)\n\n            const answers = getSimilarGames(game)\n            console.log('hej', answers)\n\n            const gamess = {\n                id: game.id,\n                name: game.name,\n                altname: game.alternative_names,\n                screenshots: [...game_screenshots],\n                hints: {\n                    developer: game.developers[0].name,\n                    released: game.released,\n                    genre: game.genres[game.genres.length-1].name,\n                },\n                answers: [game.id],\n            }\n            console.log(gamess)\n            return gamess\n        }\n        catch(error) {\n            console.log(error)\n            return {}\n        }\n}\n\nconst pick3randomsFromArray = (array) => {\n    const source = [...array]\n    const resultArray = []\n    for (let i=0; i<3; i++) {\n        const randomIndex = Math.floor(Math.random() * source.length)\n        resultArray.push(source.splice(randomIndex, 1)[0])\n    }\n    return resultArray\n}\n\nexport const getSimilarGames = async (game) => {\n    let result;\n    try {\n        const apishot = await fetch(`https://api.rawg.io/api/games/${game.id}/suggested`)\n        const suggested = await apishot.json()\n        result = pick3randomsFromArray(suggested.results.map(game => game = game.name))\n    }\n    catch(error) {\n        console.log(error)\n        result = [\"Error\", \"Error\", \"Error\"]\n    }\n    return result\n}"]},"metadata":{},"sourceType":"module"}