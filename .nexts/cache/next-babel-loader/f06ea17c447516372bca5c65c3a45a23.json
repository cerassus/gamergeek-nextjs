{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Table from \"../../../styled-components/Table\";\nimport Typography from \"../../../styled-components/Typography\";\nimport { useState, useEffect, Fragment } from \"react\";\nexport default function GameNavigatorTop({\n  game_is_started,\n  game_is_loading,\n  showPopup,\n  endGame,\n  showHint,\n  loadNewQuestion,\n  startLoading,\n  random_game,\n  setHintCounter,\n  hintCounter,\n  pushNewAnswer,\n  test\n}) {\n  const {\n    0: hints,\n    1: setHints\n  } = useState(false);\n\n  const handleClickHint = () => {\n    showHint(...hints.splice(Math.floor(Math.random() * hints.length), 1));\n    setHintCounter();\n  };\n\n  const handleClickSkip = () => {\n    pushNewAnswer({\n      score: 0,\n      hints_used: hintCounter,\n      skip: true\n    });\n    startLoading();\n    loadNewQuestion();\n  };\n\n  useEffect(() => {\n    random_game && setHints(random_game.hints);\n  }, [random_game]);\n  useEffect(() => {\n    if (random_game && !game_is_started) {\n      pushNewAnswer({\n        score: 0,\n        hints_used: hintCounter\n      });\n      showPopup('summary');\n    }\n  }, [game_is_started]);\n  useEffect(() => {\n    console.log(test);\n  }, [test]);\n  return /*#__PURE__*/_jsx(Table, {\n    top: true,\n    children: !game_is_started ? /*#__PURE__*/_jsx(Typography, {\n      link: true,\n      onClick: () => showPopup('userdata'),\n      children: \"start a new challenge\"\n    }) : game_is_loading ? /*#__PURE__*/_jsx(Typography, {\n      link: true,\n      children: \"loading\"\n    }) : /*#__PURE__*/_jsxs(Fragment, {\n      children: [hintCounter < 3 && /*#__PURE__*/_jsx(Typography, {\n        link: true,\n        onClick: () => handleClickHint(),\n        children: \"get a hint\"\n      }), /*#__PURE__*/_jsx(Typography, {\n        link: true,\n        onClick: () => handleClickSkip(),\n        children: \"skip\"\n      }), /*#__PURE__*/_jsx(Typography, {\n        link: true,\n        onClick: () => endGame(),\n        children: \"quit\"\n      })]\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}