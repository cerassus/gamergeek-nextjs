{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from \"redux\";\nimport * as actions from \"./actions\";\n\nvar random_game = function random_game() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.SHOW_RANDOM_GAME:\n      return action.game;\n\n    case actions.END_GAME:\n      return \"\";\n\n    default:\n      return state;\n  }\n}; // const user_score = (state = [], action) => action.type === actions.NEW_ANSWER ? [...state, action.answer] : state\n\n\nvar user_score = function user_score() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === actions.NEW_ANSWER) {\n    console.log([].concat(_toConsumableArray(state), [action.answer]));\n    return [].concat(_toConsumableArray(state), [action.answer]);\n  } else {\n    return state;\n  }\n};\n\nvar hints_array = function hints_array() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.SHOW_HINT:\n      {\n        console.log([].concat(_toConsumableArray(state), [action.hint]));\n        return [].concat(_toConsumableArray(state), [action.hint]);\n      }\n\n    case actions.HIDE_HINT:\n      return [];\n\n    default:\n      return state;\n  }\n};\n\nvar game_status = function game_status() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isStarted: false,\n    isLoading: false\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.START_GAME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isStarted: true\n      });\n\n    case actions.START_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: true\n      });\n\n    case actions.RESUME_GAME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false\n      });\n\n    case actions.END_GAME:\n      return {\n        isLoading: false,\n        isStarted: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  random_game: random_game,\n  user_score: user_score,\n  hints_array: hints_array,\n  game_status: game_status\n});","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/redux/reducers.js"],"names":["combineReducers","actions","random_game","state","action","type","SHOW_RANDOM_GAME","game","END_GAME","user_score","NEW_ANSWER","console","log","answer","hints_array","SHOW_HINT","hint","HIDE_HINT","game_status","isStarted","isLoading","START_GAME","START_LOADING","RESUME_GAME"],"mappings":";;;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACxC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKJ,OAAO,CAACK,gBAAb;AAA+B,aAAOF,MAAM,CAACG,IAAd;;AAC/B,SAAKN,OAAO,CAACO,QAAb;AAAuB,aAAO,EAAP;;AACvB;AAAS,aAAOL,KAAP;AAHb;AAKH,CAND,C,CAQA;;;AAEA,IAAMM,UAAU,GAAG,SAAbA,UAAa,GAAwB;AAAA,MAAvBN,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACvC,MAAGA,MAAM,CAACC,IAAP,KAAgBJ,OAAO,CAACS,UAA3B,EAAuC;AACnCC,IAAAA,OAAO,CAACC,GAAR,8BAAgBT,KAAhB,IAAuBC,MAAM,CAACS,MAA9B;AACA,wCAAWV,KAAX,IAAkBC,MAAM,CAACS,MAAzB;AACH,GAHD,MAGO;AACH,WAAOV,KAAP;AACH;AACJ,CAPD;;AASA,IAAMW,WAAW,GAAG,SAAdA,WAAc,GAAwB;AAAA,MAAvBX,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACxC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKJ,OAAO,CAACc,SAAb;AAAwB;AACpBJ,QAAAA,OAAO,CAACC,GAAR,8BAAgBT,KAAhB,IAAuBC,MAAM,CAACY,IAA9B;AACA,4CAAWb,KAAX,IAAkBC,MAAM,CAACY,IAAzB;AACH;;AACD,SAAKf,OAAO,CAACgB,SAAb;AAAwB,aAAO,EAAP;;AACxB;AAAS,aAAOd,KAAP;AANb;AAQH,CATD;;AAWA,IAAMe,WAAW,GAAG,SAAdA,WAAc,GAA4D;AAAA,MAA3Df,KAA2D,uEAAnD;AAAEgB,IAAAA,SAAS,EAAE,KAAb;AAAoBC,IAAAA,SAAS,EAAE;AAA/B,GAAmD;AAAA,MAAXhB,MAAW;;AAC5E,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKJ,OAAO,CAACoB,UAAb;AAAyB,6CAClBlB,KADkB;AAErBgB,QAAAA,SAAS,EAAE;AAFU;;AAIzB,SAAKlB,OAAO,CAACqB,aAAb;AAA4B,6CACrBnB,KADqB;AAExBiB,QAAAA,SAAS,EAAE;AAFa;;AAI5B,SAAKnB,OAAO,CAACsB,WAAb;AAA0B,6CACnBpB,KADmB;AAEtBiB,QAAAA,SAAS,EAAE;AAFW;;AAI1B,SAAKnB,OAAO,CAACO,QAAb;AAAuB,aAAO;AAC1BY,QAAAA,SAAS,EAAE,KADe;AAE1BD,QAAAA,SAAS,EAAE;AAFe,OAAP;;AAIvB;AAAS,aAAOhB,KAAP;AAjBb;AAmBH,CApBD;;AAuBA,eAAeH,eAAe,CAAC;AAC7BE,EAAAA,WAAW,EAAXA,WAD6B;AAE7BO,EAAAA,UAAU,EAAVA,UAF6B;AAG7BK,EAAAA,WAAW,EAAXA,WAH6B;AAI7BI,EAAAA,WAAW,EAAXA;AAJ6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from \"redux\"\nimport * as actions from \"./actions\"\n\nconst random_game = (state = \"\", action) => {\n    switch(action.type) {\n        case actions.SHOW_RANDOM_GAME: return action.game \n        case actions.END_GAME: return \"\"\n        default: return state\n    }\n}\n    \n// const user_score = (state = [], action) => action.type === actions.NEW_ANSWER ? [...state, action.answer] : state\n\nconst user_score = (state = [], action) => {\n    if(action.type === actions.NEW_ANSWER) {\n        console.log([...state, action.answer])\n        return [...state, action.answer]\n    } else {\n        return state\n    }\n}\n\nconst hints_array = (state = [], action) => {\n    switch(action.type) {\n        case actions.SHOW_HINT: {\n            console.log([...state, action.hint])\n            return [...state, action.hint]\n        }\n        case actions.HIDE_HINT: return []\n        default: return state\n    }\n}\n\nconst game_status = (state = { isStarted: false, isLoading: false }, action) => {\n    switch(action.type) {\n        case actions.START_GAME: return {\n            ...state,\n            isStarted: true,\n        }\n        case actions.START_LOADING: return {\n            ...state,\n            isLoading: true,\n        }\n        case actions.RESUME_GAME: return {\n            ...state,\n            isLoading: false,\n        }\n        case actions.END_GAME: return {\n            isLoading: false,\n            isStarted: false,\n        }\n        default: return state\n    }\n}\n\n\nexport default combineReducers({\n  random_game,\n  user_score,\n  hints_array,\n  game_status,\n})"]},"metadata":{},"sourceType":"module"}