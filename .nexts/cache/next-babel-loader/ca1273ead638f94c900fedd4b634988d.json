{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/Table.js\",\n    _s = $RefreshSig$();\n\nimport Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\nimport { useState, useEffect, Fragment } from \"react\";\nimport { pickRandomGame } from \"../../../global/fetch\";\nimport { game_database } from \"../../../global/const\";\nimport moment from 'moment';\nimport * as SC from \"../../styled-components/Popup\";\nvar game_difficulty = [\"easy\", \"medium\", \"hard\"];\nexport default function TableComponent(_ref) {\n  _s();\n\n  var _this = this;\n\n  var random_game = _ref.random_game,\n      startGame = _ref.startGame,\n      startLoading = _ref.startLoading,\n      endGame = _ref.endGame,\n      user_score = _ref.user_score,\n      showRandomGame = _ref.showRandomGame,\n      pushNewAnswer = _ref.pushNewAnswer,\n      showHint = _ref.showHint,\n      clearHint = _ref.clearHint,\n      game_status = _ref.game_status;\n\n  var _useState = useState(false),\n      answerTimeStart = _useState[0],\n      setAnswerTimeStart = _useState[1];\n\n  var _useState2 = useState(0),\n      hintCounter = _useState2[0],\n      setHintCounter = _useState2[1];\n\n  var _useState3 = useState(false),\n      hints = _useState3[0],\n      setHints = _useState3[1];\n\n  var _useState4 = useState(false),\n      difficulty = _useState4[0],\n      setDifficulty = _useState4[1];\n\n  var _useState5 = useState(true),\n      usernamePanel = _useState5[0],\n      showUsernamePanel = _useState5[1];\n\n  var _useState6 = useState(false),\n      warning = _useState6[0],\n      setWarning = _useState6[1];\n\n  var _useState7 = useState(false),\n      popup = _useState7[0],\n      switchPopup = _useState7[1];\n\n  var _useState8 = useState(false),\n      summary = _useState8[0],\n      showSummary = _useState8[1];\n\n  var _useState9 = useState(false),\n      username = _useState9[0],\n      setUsername = _useState9[1];\n\n  var startNewGame = function startNewGame() {\n    switchPopup(true);\n  };\n\n  var loadNewQuestion = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              startLoading();\n              clearHint();\n              setHintCounter(0);\n              _context.t0 = showRandomGame;\n              _context.next = 6;\n              return pickRandomGame(game_database);\n\n            case 6:\n              _context.t1 = _context.sent;\n              (0, _context.t0)(_context.t1);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadNewQuestion() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var quitGame = function quitGame() {\n    clearHint();\n    setHintCounter(0);\n    setHints(false);\n    showUsernamePanel(true);\n    setDifficulty(false);\n    setUsername(false);\n    setAnswerTimeStart(false);\n    switchPopup(false);\n    user_score.length > 0 && showSummary(true);\n  };\n\n  var getHint = function getHint() {\n    showHint.apply(void 0, _toConsumableArray(hints.splice(Math.floor(Math.random() * hints.length), 1)));\n    setHintCounter(function (hintCounter) {\n      return hintCounter + 1;\n    });\n  };\n\n  var handleTyping = function handleTyping(e) {\n    0 < e.target.value.length && e.target.value.length < 3 ? setWarning(true) : setWarning(false); // check if username doesn't match one of usernames in MongoDatabase\n\n    setUsername(e.target.value);\n  };\n\n  var validateUserName = function validateUserName() {\n    warning || !username ? alert('Wrong username! Try different one!') : showUsernamePanel(false);\n  };\n\n  var close_summary = function close_summary() {\n    showSummary(false);\n    clearUserScore();\n  };\n\n  var checkAnswer = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(answer) {\n      var answerTimeEnd, user_answer;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              answerTimeEnd = moment();\n              user_answer = answer === random_game.name ? {\n                title: random_game.name,\n                time: answerTimeEnd.diff(answerTimeStart),\n                score: Number((1000 / answerTimeEnd.diff(answerTimeStart) * 10000 * ((10 - hintCounter) / 10)).toFixed()),\n                correct: true,\n                hints_used: hintCounter\n              } : {\n                title: random_game.name,\n                time: answerTimeEnd.diff(answerTimeStart),\n                score: 0,\n                correct: false,\n                skip: answer === \"player_skipped_game\" ? true : false,\n                hints_used: hintCounter\n              };\n              pushNewAnswer(user_answer);\n              loadNewQuestion();\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function checkAnswer(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    !game_status.isLoading && setAnswerTimeStart(moment());\n    !game_status.isStarted && quitGame();\n  }, [game_status]);\n  useEffect(function () {\n    random_game && setHints(random_game.hints);\n  }, [random_game]);\n  useEffect(function () {\n    if (difficulty) {\n      switchPopup(false);\n      startGame(difficulty);\n      loadNewQuestion();\n    }\n  }, [difficulty]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      top: true,\n      children: !game_status.isStarted ? /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: function onClick() {\n          return startNewGame();\n        },\n        children: \"start a new challenge\"\n      }, \"key0015\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this) : game_status.isLoading ? /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        children: \"loading\"\n      }, 'key0016', false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 12\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [hintCounter < 3 && /*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          onClick: function onClick() {\n            return getHint();\n          },\n          children: \"get a hint\"\n        }, \"key0011\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          onClick: function onClick() {\n            return checkAnswer(\"player_skipped_game\");\n          },\n          children: \"skip\"\n        }, \"key0012\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          onClick: function onClick() {\n            return endGame();\n          },\n          children: \"quit\"\n        }, \"key0013\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      bottom: true,\n      children: game_status.isStarted && !game_status.isLoading && random_game.answers ? random_game.answers.map(function (answer, i) {\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          answer: true,\n          onClick: function onClick(answer) {\n            return checkAnswer(answer.target.innerText);\n          },\n          children: answer\n        }, \"key0021\" + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, _this);\n      }) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SC.Popup, {\n      title: \"Hello gamergeek!\",\n      switch_popup: popup,\n      popupIsClosed: function popupIsClosed() {\n        return quitGame();\n      },\n      children: usernamePanel ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(SC.WelcomeText, {\n          children: \"Let\\u2019s see how good you are! Starting from your name...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(SC.TextInput, {\n          type: \"text\",\n          onChange: function onChange(e) {\n            return handleTyping(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(SC.TextInputHint, {\n          visible: warning,\n          children: \"Wrong nickname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(SC.PlayButton, {\n          onClick: function onClick() {\n            return validateUserName();\n          },\n          children: \"Let's Play!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(SC.WelcomeText, {\n          center: true,\n          children: \"Set game difficulty...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this), game_difficulty.map(function (diff_lvl, i) {\n          return /*#__PURE__*/_jsxDEV(SC.PlayButton, {\n            onClick: function onClick() {\n              return setDifficulty(diff_lvl);\n            },\n            children: diff_lvl\n          }, \"key0011\" + i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, _this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SC.Popup, {\n      title: \"Summary\",\n      switch_popup: summary,\n      popupIsClosed: function popupIsClosed() {\n        return close_summary();\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(SC.WelcomeText, {\n            children: \"The Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Corrects answers: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Wrong answers: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Skipped answers: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Hints used: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Quickest response: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Slowest response: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Average time response: GRUBE DUPSKO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(SC.WelcomeText, {\n            children: \"Score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: user_score.map(function (score) {\n              return score = score.score;\n            }).reduce(function (acc, score) {\n              return acc + score;\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SC.PlayButton, {\n            onClick: function onClick() {\n              return close_summary();\n            },\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TableComponent, \"MC/PAy9WobnSFBsNoVyVwP1kWKE=\");\n\n_c = TableComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableComponent\");","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/Table.js"],"names":["Table","Typography","useState","useEffect","Fragment","pickRandomGame","game_database","moment","SC","game_difficulty","TableComponent","random_game","startGame","startLoading","endGame","user_score","showRandomGame","pushNewAnswer","showHint","clearHint","game_status","answerTimeStart","setAnswerTimeStart","hintCounter","setHintCounter","hints","setHints","difficulty","setDifficulty","usernamePanel","showUsernamePanel","warning","setWarning","popup","switchPopup","summary","showSummary","username","setUsername","startNewGame","loadNewQuestion","quitGame","length","getHint","splice","Math","floor","random","handleTyping","e","target","value","validateUserName","alert","close_summary","clearUserScore","checkAnswer","answer","answerTimeEnd","user_answer","name","title","time","diff","score","Number","toFixed","correct","hints_used","skip","isLoading","isStarted","answers","map","i","innerText","diff_lvl","display","reduce","acc"],"mappings":"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","sourcesContent":["import Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\nimport { useState, useEffect, Fragment } from \"react\";\nimport { pickRandomGame } from \"../../../global/fetch\";\nimport { game_database } from \"../../../global/const\";\nimport moment from 'moment'\nimport * as SC from \"../../styled-components/Popup\"\n\nconst game_difficulty = [\"easy\", \"medium\", \"hard\"];\n\nexport default function TableComponent({\n    random_game, startGame, startLoading, endGame, user_score,\n    showRandomGame, pushNewAnswer, showHint, clearHint, game_status,}) {\n  const [answerTimeStart, setAnswerTimeStart] = useState(false)\n  const [hintCounter, setHintCounter] = useState(0)\n  const [hints, setHints] = useState(false)\n  const [difficulty, setDifficulty] = useState(false)\n  const [usernamePanel, showUsernamePanel] = useState(true)\n  const [warning, setWarning] = useState(false)\n  const [popup, switchPopup] = useState(false)\n  const [summary, showSummary] = useState(false)\n  const [username, setUsername] = useState(false)\n\n  const startNewGame = () => {\n    switchPopup(true)\n  }\n  const loadNewQuestion = async () => {\n    startLoading()\n    clearHint()\n    setHintCounter(0)\n    showRandomGame(await pickRandomGame(game_database))\n  } \n  const quitGame = () => {\n    clearHint()\n    setHintCounter(0)\n    setHints(false)\n    showUsernamePanel(true)\n    setDifficulty(false)\n    setUsername(false)\n    setAnswerTimeStart(false)\n    switchPopup(false)\n    user_score.length > 0 && showSummary(true)\n  }\n  const getHint = () => {\n    showHint(...hints.splice(Math.floor(Math.random() * hints.length), 1))\n    setHintCounter(hintCounter => hintCounter + 1)\n  }\n  const handleTyping = (e) => {\n    (0 < e.target.value.length && e.target.value.length < 3) \n      ? setWarning(true)\n      : setWarning(false);   // check if username doesn't match one of usernames in MongoDatabase\n    setUsername(e.target.value)\n  }\n  const validateUserName = () => {\n    (warning || !username) ? alert('Wrong username! Try different one!') : showUsernamePanel(false)\n  }\n  const close_summary = () => {\n    showSummary(false)\n    clearUserScore()\n  }\n  const checkAnswer = async (answer) => {\n    const answerTimeEnd = moment()\n    const user_answer = answer === random_game.name\n        ? {\n            title: random_game.name,\n            time: answerTimeEnd.diff(answerTimeStart),\n            score: Number((1000/answerTimeEnd.diff(answerTimeStart)*10000*((10-hintCounter)/10)).toFixed()),\n            correct: true,\n            hints_used: hintCounter,\n          }\n        : {\n            title: random_game.name,\n            time: answerTimeEnd.diff(answerTimeStart),\n            score: 0,\n            correct: false,\n            skip: answer === \"player_skipped_game\" ? true: false,\n            hints_used: hintCounter,\n          };\n    pushNewAnswer(user_answer)\n    loadNewQuestion()\n  }\n\n  useEffect(() => {\n    !game_status.isLoading && setAnswerTimeStart(moment())\n    !game_status.isStarted && quitGame()\n  }, [game_status])\n  useEffect(() => {\n    random_game && setHints(random_game.hints) \n  }, [random_game])\n  useEffect(() => {\n    if(difficulty) {\n      switchPopup(false)\n      startGame(difficulty)\n      loadNewQuestion()\n    }\n  },[difficulty])\n\n  return (\n    <Fragment>\n      <Table top>    \n        {!game_status.isStarted ?\n          <Typography key={\"key0015\"} link onClick={() => startNewGame()}>start a new challenge</Typography>\n          : game_status.isLoading ?\n           <Typography key={'key0016'} link>loading</Typography>\n           : (\n            <Fragment>\n              {hintCounter < 3 && <Typography key={\"key0011\"} link onClick={() => getHint()}>get a hint</Typography>}\n              <Typography key={\"key0012\"} link onClick={() => checkAnswer(\"player_skipped_game\")}>skip</Typography>\n              <Typography key={\"key0013\"} link onClick={() => endGame()}>quit</Typography>\n            </Fragment>\n          )}\n      </Table>\n      <Table bottom>\n        {(game_status.isStarted && !game_status.isLoading && random_game.answers) ?\n        random_game.answers.map((answer, i) => (\n        <Typography key={\"key0021\"+i} answer onClick={(answer) => checkAnswer(answer.target.innerText)}>{answer}</Typography>))\n        : ``}\n      </Table>\n      <SC.Popup title=\"Hello gamergeek!\" switch_popup={popup} popupIsClosed={() => quitGame()}>\n          {usernamePanel ? (\n            <Fragment>\n              <SC.WelcomeText>Let’s see how good you are! Starting from your name...</SC.WelcomeText>\n              <SC.TextInput type=\"text\" onChange={(e) => handleTyping(e)} />\n              <SC.TextInputHint visible={warning}>Wrong nickname</SC.TextInputHint>\n              <SC.PlayButton onClick={() => validateUserName()}>Let's Play!</SC.PlayButton>\n            </Fragment>\n          ) : (\n            <Fragment>\n              <SC.WelcomeText center>Set game difficulty...</SC.WelcomeText>\n              {game_difficulty.map((diff_lvl, i) => (\n                <SC.PlayButton key={\"key0011\" + i} onClick={() => setDifficulty(diff_lvl)}>\n                  {diff_lvl}\n                </SC.PlayButton>\n              ))}\n            </Fragment>\n          )}\n      </SC.Popup>\n      <SC.Popup title=\"Summary\" switch_popup={summary} popupIsClosed={() => close_summary()}>\n          <div style={{display: \"flex\"}}>\n            <div>\n              <SC.WelcomeText>The Game</SC.WelcomeText>\n              <p>Corrects answers: </p>\n              <p>Wrong answers: </p>\n              <p>Skipped answers: </p>\n              <p>Hints used: </p>\n              <p>Quickest response: </p>\n              <p>Slowest response: </p>\n              <p>Average time response: GRUBE DUPSKO</p>\n            </div>\n            <div>\n              <SC.WelcomeText>Score:</SC.WelcomeText>\n              <div>{user_score.map(score => score = score.score).reduce((acc,score) => acc + score)}</div>\n              <SC.PlayButton onClick={() => close_summary()}>Close</SC.PlayButton>\n            </div>\n          </div>\n      </SC.Popup>\n    </Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}