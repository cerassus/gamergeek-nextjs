{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/components/main/challenge/Table.js\",\n    _s = $RefreshSig$();\n\nimport Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\nimport React from \"react\";\nimport { pickRandomGame } from \"../../../global/fetch\";\nimport { game_database } from \"../../../global/const\";\nvar game_difficulty = ['easy', 'medium', 'hard'];\nexport default function TableTop(_ref) {\n  _s();\n\n  var _this = this;\n\n  var game_status = _ref.game_status,\n      random_game = _ref.random_game,\n      screenshots_loaded = _ref.screenshots_loaded,\n      startGame = _ref.startGame,\n      stopGame = _ref.stopGame,\n      getRandomGame = _ref.getRandomGame,\n      newAnswer = _ref.newAnswer,\n      screenshotsAreLoading = _ref.screenshotsAreLoading;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      difficultyChoice = _React$useState2[0],\n      showDifficultyChoice = _React$useState2[1];\n\n  var stop = function stop() {\n    showDifficultyChoice(false);\n    return stopGame();\n  };\n\n  var start = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(difficulty) {\n      var randomik;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              screenshotsAreLoading();\n              _context.next = 3;\n              return pickRandomGame(game_database);\n\n            case 3:\n              randomik = _context.sent;\n              getRandomGame(randomik);\n              difficulty && startGame(difficulty);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function start(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var checkAnswer = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(answer) {\n      var user_answer;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              user_answer = answer.target.innerText === random_game.name ? {\n                title: random_game.name,\n                time: 3,\n                score: 2000,\n                correct: true\n              } : {\n                title: random_game.name,\n                time: 3,\n                score: 0,\n                correct: false\n              };\n              newAnswer(user_answer);\n              start();\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function checkAnswer(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      top: true,\n      children: game_status && screenshots_loaded === 'loaded' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          href: \"/\",\n          children: \"get a hint\"\n        }, Math.random() * 10000, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          onClick: start,\n          children: \"skip\"\n        }, Math.random() * 10000, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          onClick: stop,\n          children: \"quit\"\n        }, Math.random() * 10000, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : difficultyChoice && !screenshots_loaded ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          children: \"set difficulty: \"\n        }, Math.random() * 10000, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), game_difficulty.map(function (diff, i) {\n          return /*#__PURE__*/_jsxDEV(Typography, {\n            link: true,\n            onClick: function onClick() {\n              return start({\n                i: i\n              });\n            },\n            children: diff\n          }, Math.random() * 10000, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 44\n          }, _this);\n        })]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: function onClick() {\n          return showDifficultyChoice(true);\n        },\n        children: \"start a new challenge\"\n      }, Math.random() * 10000, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      bottom: true,\n      children: game_status && random_game.answers && screenshots_loaded === 'loaded' ? random_game.answers.map(function (answer, i) {\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          answer: true,\n          onClick: function onClick(answer) {\n            return checkAnswer(answer);\n          },\n          children: answer\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 52\n        }, _this);\n      }) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n} // export default function TableTop({ game_status, startGame, stopGame }) {\n//   const [difficultyChoice, showDifficultyChoice] = React.useState(false)\n//   const stop = () => {\n//     showDifficultyChoice(false);\n//     return stopGame();\n//   }\n//   return (\n//     <Table top>\n//       {(!game_status && difficultyChoice) && (\n//         <>\n//         <Typography link>set difficulty: </Typography>\n//         <Typography link onClick={() => startGame(0)}>easy</Typography>\n//         <Typography link onClick={() => startGame(1)}>medium</Typography>\n//         <Typography link onClick={() => startGame(2)}>hard</Typography>\n//         </>\n//       )}\n//       {(!game_status && !difficultyChoice) && (\n//         <Typography link onClick={() => showDifficultyChoice(true)}>start a new challenge</Typography>\n//       )}\n//       {game_status && (\n//         <>\n//           <Typography link href=\"/\">get a hint</Typography>\n//           <Typography link href=\"/\">skip</Typography>\n//           <Typography link onClick={stop}>quit</Typography>\n//         </>\n//       )}\n//     </Table>\n//   );\n// }\n\n_s(TableTop, \"v0Nho68mWNkC/ol++Z6UofPgdr8=\");\n\n_c = TableTop;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableTop\");","map":{"version":3,"sources":["/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/components/main/challenge/Table.js"],"names":["Table","Typography","React","pickRandomGame","game_database","game_difficulty","TableTop","game_status","random_game","screenshots_loaded","startGame","stopGame","getRandomGame","newAnswer","screenshotsAreLoading","useState","difficultyChoice","showDifficultyChoice","stop","start","difficulty","randomik","checkAnswer","answer","user_answer","target","innerText","name","title","time","score","correct","Math","random","map","diff","i","answers"],"mappings":"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","sourcesContent":["import Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\nimport React from \"react\"\nimport { pickRandomGame } from \"../../../global/fetch\"\nimport { game_database } from \"../../../global/const\"\n\nconst game_difficulty = ['easy', 'medium', 'hard']\n\nexport default function TableTop({ game_status, random_game, screenshots_loaded, startGame, stopGame, getRandomGame, newAnswer, screenshotsAreLoading }) {\n  const [difficultyChoice, showDifficultyChoice] = React.useState(false)\n  const stop = () => {\n    showDifficultyChoice(false);\n    return stopGame();\n  }\n  const start = async (difficulty) => {\n    screenshotsAreLoading()\n    const randomik = await pickRandomGame(game_database)\n    getRandomGame(randomik)\n    difficulty && startGame(difficulty)\n  }\n  const checkAnswer = async (answer) => {\n    const user_answer = answer.target.innerText === random_game.name ? {\n      title: random_game.name,\n      time: 3,\n      score: 2000,\n      correct: true,\n    } : {\n      title: random_game.name,\n      time: 3,\n      score: 0,\n      correct: false,\n    }\n    newAnswer(user_answer)\n    start()\n  }\n  return (\n    <>\n      <Table top>\n        {(game_status && screenshots_loaded === 'loaded') ? (\n          <>\n            <Typography key={Math.random() * 10000} link href=\"/\">get a hint</Typography>\n            <Typography key={Math.random() * 10000} link onClick={start}>skip</Typography>\n            <Typography key={Math.random() * 10000} link onClick={stop}>quit</Typography>\n          </>\n        ) : (difficultyChoice && !screenshots_loaded) ? (\n          <>\n          <Typography key={Math.random() * 10000} link >set difficulty: </Typography>\n          {game_difficulty.map((diff,i) => <Typography key={Math.random() * 10000} link onClick={() => start({i})}>{diff}</Typography>)}\n          </>\n        ) : <Typography key={Math.random() * 10000} link onClick={() => showDifficultyChoice(true)}>start a new challenge</Typography>}\n      </Table>\n          <Table bottom>\n          {(game_status && random_game.answers && screenshots_loaded === 'loaded') ? (\n            random_game.answers.map((answer, i) => <Typography key={i} answer onClick={answer => checkAnswer(answer)}>{answer}</Typography>)\n          ) : ``}\n      </Table>\n    </>\n  );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// export default function TableTop({ game_status, startGame, stopGame }) {\n//   const [difficultyChoice, showDifficultyChoice] = React.useState(false)\n//   const stop = () => {\n//     showDifficultyChoice(false);\n//     return stopGame();\n//   }\n//   return (\n//     <Table top>\n//       {(!game_status && difficultyChoice) && (\n//         <>\n//         <Typography link>set difficulty: </Typography>\n//         <Typography link onClick={() => startGame(0)}>easy</Typography>\n//         <Typography link onClick={() => startGame(1)}>medium</Typography>\n//         <Typography link onClick={() => startGame(2)}>hard</Typography>\n//         </>\n//       )}\n//       {(!game_status && !difficultyChoice) && (\n//         <Typography link onClick={() => showDifficultyChoice(true)}>start a new challenge</Typography>\n//       )}\n\n//       {game_status && (\n//         <>\n//           <Typography link href=\"/\">get a hint</Typography>\n//           <Typography link href=\"/\">skip</Typography>\n//           <Typography link onClick={stop}>quit</Typography>\n//         </>\n//       )}\n//     </Table>\n//   );\n// }\n\n\n"]},"metadata":{},"sourceType":"module"}