{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/cerassus/Websites/gamergeek-nextjs/components/styled-components/MainCounter.js\";\nimport styled from \"styled-components\";\nimport { useState, useEffect, Component } from \"react\";\nimport moment from \"moment\";\nimport { countdown } from \"../../redux/actions\";\nconst CounterContainer = styled.div`\n  text-transform: lowercase;\n  font-weight: 900;\n  font-size: 3rem;\n  display: inline-block;\n`;\nexport default class MainCounter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 60\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n\n    if (this.props.is_game_started && !this.props.is_game_loading) {\n      console.log('interval begin');\n      this.startCounting = setInterval(() => {\n        this.setState({\n          counter: this.state.counter - 1\n        });\n      }, 1000);\n    }\n\n    if (this.props.is_game_started && this.props.is_game_loading) {\n      console.log('interval end');\n      clearInterval(this.startCounting);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(CounterContainer, {\n      children: this.state.counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n} // export default function MainCounter({is_game_started, is_game_loading, game_counter}) {\n//   const [counter, setCounter] = useState(100)\n//   const [didMount, setDidMount] = useState(false)\n//   const [gameStarted, setGameStarted] = useState(false)\n//   useEffect(() => {\n//     if(didMount && gameStarted && !is_game_loading) {\n//       console.log('interval begin')\n//       var startCounting = setInterval(() => {\n//         setCounter(counter => counter - 1)\n//       }, 1000)\n//     }\n//     if(didMount && gameStarted && is_game_loading) {\n//       console.log('interval end')\n//       clearInterval(startCounting)\n//     }\n//   }, [is_game_loading])\n//   useEffect(() => {\n//     didMount && (is_game_started ? setGameStarted(true) : setGameStarted(false))\n//   }, [is_game_started])\n//   useEffect(() => {\n//     setDidMount(true)\n//   }, [])\n//   return (\n//     <CounterContainer>\n//       {counter}\n//     </CounterContainer>\n//   )\n// }\n// export default function MainCounter({game_status, main_counter}) {\n//   React.useEffect(() => {\n//     if(game_status.isStarted) {\n//       let startingValue = 60\n//       const DIV = document.getElementById('counter')\n//       const task = () => {\n//         startingValue--\n//         DIV.innerText = startingValue\n//         startingValue === 0 && stopCounting()\n//       }\n//       const runCounting = setInterval(task, 1000)\n//       const stopCounting = () => clearInterval(runCounting)\n//     }\n//   },[game_status.isStarted])\n//   return (\n//     <CounterContainer>\n//       <div id='counter'></div>\n//     </CounterContainer>\n//   )\n// }\n// React.useEffect(() => {\n//   game_status.isStarted ? \n//   startTimer()\n//   : console.log('game over')\n// }, [game_status.isStarted])\n// React.useEffect(() => {\n//   game_status.isRunning ? console.log('running') : game_status.isLoading && console.log('loading') \n// }, [game_status.isRunning])","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/components/styled-components/MainCounter.js"],"names":["styled","useState","useEffect","Component","moment","countdown","CounterContainer","div","MainCounter","constructor","props","state","counter","componentDidMount","console","log","is_game_started","is_game_loading","startCounting","setInterval","setState","clearInterval","render"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,MAAMC,gBAAgB,GAAGN,MAAM,CAACO,GAAI;AACpC;AACA;AACA;AACA;AACA,CALA;AAOA,eAAe,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AACjDM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;;AACA,QAAG,KAAKA,KAAL,CAAWM,eAAX,IAA8B,CAAC,KAAKN,KAAL,CAAWO,eAA7C,EAA8D;AAC5DH,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,WAAKG,aAAL,GAAqBC,WAAW,CAAC,MAAM;AACrC,aAAKC,QAAL,CAAc;AAACR,UAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,GAAqB;AAA/B,SAAd;AACD,OAF+B,EAE7B,IAF6B,CAAhC;AAGD;;AACD,QAAG,KAAKF,KAAL,CAAWM,eAAX,IAA8B,KAAKN,KAAL,CAAWO,eAA5C,EAA6D;AAC3DH,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAM,MAAAA,aAAa,CAAC,KAAKH,aAAN,CAAb;AACD;AACF;;AACDI,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,gBAAD;AAAA,gBACG,KAAKX,KAAL,CAAWC;AADd;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA1BgD,C,CA+BnD;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import styled from \"styled-components\";\nimport { useState, useEffect, Component } from \"react\"\nimport moment from \"moment\"\nimport { countdown } from \"../../redux/actions\"\n\nconst CounterContainer = styled.div`\n  text-transform: lowercase;\n  font-weight: 900;\n  font-size: 3rem;\n  display: inline-block;\n`;\n\nexport default class MainCounter extends Component {\n  constructor(props) {\n    super(props);  \n    this.state = {\n      counter: 60,\n    }\n  }\n  componentDidMount() {\n    console.log(this.props)\n    if(this.props.is_game_started && !this.props.is_game_loading) {\n      console.log('interval begin')\n      this.startCounting = setInterval(() => {\n        this.setState({counter: this.state.counter - 1})\n      }, 1000)\n    }\n    if(this.props.is_game_started && this.props.is_game_loading) {\n      console.log('interval end')\n      clearInterval(this.startCounting)\n    }\n  }\n  render() {\n    return (\n      <CounterContainer>\n        {this.state.counter}\n      </CounterContainer>\n    )\n  }\n}\n  \n\n\n// export default function MainCounter({is_game_started, is_game_loading, game_counter}) {\n//   const [counter, setCounter] = useState(100)\n//   const [didMount, setDidMount] = useState(false)\n//   const [gameStarted, setGameStarted] = useState(false)\n\n//   useEffect(() => {\n    \n//     if(didMount && gameStarted && !is_game_loading) {\n//       console.log('interval begin')\n//       var startCounting = setInterval(() => {\n//         setCounter(counter => counter - 1)\n//       }, 1000)\n//     }\n//     if(didMount && gameStarted && is_game_loading) {\n//       console.log('interval end')\n//       clearInterval(startCounting)\n//     }\n//   }, [is_game_loading])\n\n//   useEffect(() => {\n//     didMount && (is_game_started ? setGameStarted(true) : setGameStarted(false))\n//   }, [is_game_started])\n\n//   useEffect(() => {\n//     setDidMount(true)\n//   }, [])\n\n//   return (\n//     <CounterContainer>\n//       {counter}\n//     </CounterContainer>\n//   )\n// }\n\n\n\n// export default function MainCounter({game_status, main_counter}) {\n//   React.useEffect(() => {\n//     if(game_status.isStarted) {\n//       let startingValue = 60\n//       const DIV = document.getElementById('counter')\n//       const task = () => {\n//         startingValue--\n//         DIV.innerText = startingValue\n//         startingValue === 0 && stopCounting()\n//       }\n//       const runCounting = setInterval(task, 1000)\n//       const stopCounting = () => clearInterval(runCounting)\n//     }\n//   },[game_status.isStarted])\n//   return (\n//     <CounterContainer>\n//       <div id='counter'></div>\n//     </CounterContainer>\n//   )\n// }\n\n\n\n\n\n\n\n// React.useEffect(() => {\n//   game_status.isStarted ? \n//   startTimer()\n//   : console.log('game over')\n// }, [game_status.isStarted])\n// React.useEffect(() => {\n//   game_status.isRunning ? console.log('running') : game_status.isLoading && console.log('loading') \n// }, [game_status.isRunning])"]},"metadata":{},"sourceType":"module"}