{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/containers/GameNavigatorTop.js\",\n    _s = $RefreshSig$();\n\nimport Table from \"../../../styled-components/Table\";\nimport Typography from \"../../../styled-components/Typography\";\nimport { useState, useEffect, Fragment } from \"react\";\nexport default function GameNavigatorTop(_ref) {\n  _s();\n\n  var game_is_started = _ref.game_is_started,\n      game_is_loading = _ref.game_is_loading,\n      skipQuestion = _ref.skipQuestion,\n      changePopup = _ref.changePopup,\n      endGame = _ref.endGame,\n      showHint = _ref.showHint,\n      game_database = _ref.game_database,\n      loadNewQuestion = _ref.loadNewQuestion,\n      startLoading = _ref.startLoading,\n      random_game = _ref.random_game,\n      user_score = _ref.user_score;\n\n  var _useState = useState(false),\n      hints = _useState[0],\n      setHints = _useState[1];\n\n  var _useState2 = useState(0),\n      hintCounter = _useState2[0],\n      setHintCounter = _useState2[1];\n\n  var handleClickHint = function handleClickHint() {\n    showHint.apply(void 0, _toConsumableArray(hints.splice(Math.floor(Math.random() * hints.length), 1)));\n    setHintCounter(function (hintCounter) {\n      return hintCounter + 1;\n    });\n  };\n\n  var handleClickSkip = function handleClickSkip() {\n    skipQuestion(); // startLoading()\n\n    loadNewQuestion(game_database);\n  };\n\n  useEffect(function () {\n    game_is_loading && setHintCounter(0);\n  }, [game_is_loading]);\n  useEffect(function () {\n    random_game && setHints(random_game.hints);\n  }, [random_game]);\n  useEffect(function () {\n    user_score && !game_is_started && changePopup('summary');\n  }, [game_is_started]);\n  return /*#__PURE__*/_jsxDEV(Table, {\n    top: true,\n    children: !game_is_started ? /*#__PURE__*/_jsxDEV(Typography, {\n      link: true,\n      onClick: function onClick() {\n        return changePopup('userdata');\n      },\n      children: \"start a new challenge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this) : game_is_loading ? /*#__PURE__*/_jsxDEV(Typography, {\n      link: true,\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [hintCounter < 3 && /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: function onClick() {\n          return handleClickHint();\n        },\n        children: \"get a hint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: function onClick() {\n          return handleClickSkip();\n        },\n        children: \"skip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: function onClick() {\n          return endGame();\n        },\n        children: \"quit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n}\n\n_s(GameNavigatorTop, \"v6XH3L134l57j6vEAWhd8lUfGOc=\");\n\n_c = GameNavigatorTop;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameNavigatorTop\");","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/containers/GameNavigatorTop.js"],"names":["Table","Typography","useState","useEffect","Fragment","GameNavigatorTop","game_is_started","game_is_loading","skipQuestion","changePopup","endGame","showHint","game_database","loadNewQuestion","startLoading","random_game","user_score","hints","setHints","hintCounter","setHintCounter","handleClickHint","splice","Math","floor","random","length","handleClickSkip"],"mappings":"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","sourcesContent":["import Table from \"../../../styled-components/Table\";\nimport Typography from \"../../../styled-components/Typography\";\nimport { useState, useEffect, Fragment } from \"react\";\n\nexport default function GameNavigatorTop({ \n  game_is_started, \n  game_is_loading,\n  skipQuestion, \n  changePopup,\n  endGame, \n  showHint, \n  game_database,\n  loadNewQuestion,\n  startLoading,\n  random_game,\n  user_score,\n }) {\n  const [hints, setHints] = useState(false)\n  const [hintCounter, setHintCounter] = useState(0)\n  const handleClickHint = () => {\n    showHint(...hints.splice(Math.floor(Math.random() * hints.length), 1))\n    setHintCounter(hintCounter => hintCounter + 1)\n  }\n  const handleClickSkip = () => {\n    skipQuestion()\n    // startLoading()\n    loadNewQuestion(game_database)\n  }\n  useEffect(() => {\n    game_is_loading && setHintCounter(0)\n  }, [game_is_loading])\n  useEffect(() => {\n    random_game && setHints(random_game.hints)\n  }, [random_game])\n  useEffect(() => {\n    user_score && !game_is_started && changePopup('summary')\n  }, [game_is_started])\n  return (\n      <Table top>    \n        {\n        !game_is_started \n          ? <Typography link onClick={() => changePopup('userdata')}>start a new challenge</Typography>\n          : game_is_loading \n            ? <Typography link>loading</Typography>\n            : (\n              <Fragment>\n                {hintCounter < 3 && \n                <Typography link onClick={() => handleClickHint()}>get a hint</Typography>}\n                <Typography link onClick={() => handleClickSkip()}>skip</Typography>\n                <Typography link onClick={() => endGame()}>quit</Typography>\n              </Fragment>\n            )\n        }\n      </Table>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}