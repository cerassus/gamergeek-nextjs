{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { combineReducers } from \"redux\";\nimport * as actions from \"./actions\";\n\nvar random_game = function random_game() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return action.type === actions.SHOW_RANDOM_GAME ? action.game : state;\n}; // const user_score = (state = [], action) => action.type === actions.NEW_ANSWER ? [...state, action.answer] : state\n\n\nvar user_score = function user_score() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === actions.NEW_ANSWER) {\n    console.log([].concat(_toConsumableArray(state), [action.answer]));\n    return [].concat(_toConsumableArray(state), [action.answer]);\n  } else {\n    return state;\n  }\n};\n\nvar hints_array = function hints_array() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.SHOW_HINT:\n      {\n        console.log([].concat(_toConsumableArray(state), [action.hint]));\n        return [].concat(_toConsumableArray(state), [action.hint]);\n      }\n\n    case actions.HIDE_HINT:\n      return [];\n\n    default:\n      return state;\n  }\n};\n\nvar game_counter = function game_counter() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 60;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.COUNTDOWN:\n      return state - 1;\n\n    case actions.END_GAME:\n      return 60;\n\n    default:\n      return state;\n  }\n};\n\nvar is_game_started = function is_game_started() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.START_GAME:\n      {\n        console.log('started');\n        return true;\n      }\n\n    case actions.END_GAME:\n      {\n        console.log('ended');\n        return false;\n      }\n\n    default:\n      return state;\n  }\n};\n\nvar is_game_loading = function is_game_loading() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.LOAD_NEW_ITEM:\n      {\n        console.log('loading start');\n        return true;\n      }\n\n    case actions.RESUME_GAME:\n      {\n        console.log('loading end');\n        return false;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  is_game_started: is_game_started,\n  random_game: random_game,\n  user_score: user_score,\n  game_counter: game_counter,\n  hints_array: hints_array,\n  is_game_loading: is_game_loading\n});","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/redux/reducers.js"],"names":["combineReducers","actions","random_game","state","action","type","SHOW_RANDOM_GAME","game","user_score","NEW_ANSWER","console","log","answer","hints_array","SHOW_HINT","hint","HIDE_HINT","game_counter","COUNTDOWN","END_GAME","is_game_started","START_GAME","is_game_loading","LOAD_NEW_ITEM","RESUME_GAME"],"mappings":"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","sourcesContent":["import { combineReducers } from \"redux\"\nimport * as actions from \"./actions\"\n\nconst random_game = (state = \"\", action) => action.type === actions.SHOW_RANDOM_GAME ? action.game : state\n\n// const user_score = (state = [], action) => action.type === actions.NEW_ANSWER ? [...state, action.answer] : state\n\nconst user_score = (state = [], action) => {\n    if(action.type === actions.NEW_ANSWER) {\n        console.log([...state, action.answer])\n        return [...state, action.answer]\n    } else {\n        return state\n    }\n}\n\nconst hints_array = (state = [], action) => {\n    switch(action.type) {\n        case actions.SHOW_HINT: {\n            console.log([...state, action.hint])\n            return [...state, action.hint]\n        }\n        case actions.HIDE_HINT: return []\n        default: return state\n    }\n}\n\nconst game_counter = (state = 60, action) => {\n    switch(action.type) {\n        case actions.COUNTDOWN: return state - 1\n        case actions.END_GAME: return 60\n        default: return state\n    }\n}\n\nconst is_game_started = (state = false, action) => {\n    switch(action.type) {\n        case actions.START_GAME: {console.log('started'); return true}\n        case actions.END_GAME:  {console.log('ended'); return false}\n        default: return state\n    }\n}\n\nconst is_game_loading = (state = false, action) => {\n    switch(action.type) {\n        case actions.LOAD_NEW_ITEM:  {console.log('loading start'); return true}\n        case actions.RESUME_GAME:  {console.log('loading end'); return false}\n        default: return state\n    }\n}\n\n\nexport default combineReducers({\n  is_game_started,\n  random_game,\n  user_score,\n  game_counter,\n  hints_array,\n  is_game_loading,\n})"]},"metadata":{},"sourceType":"module"}