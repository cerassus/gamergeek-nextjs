{"ast":null,"code":"import { connect } from \"react-redux\";\nimport GameNavigatorBottom from \"../components/main/challenge/containers/GameNavigatorBottom\";\nimport { startLoading, pushNewAnswer, loadNewQuestion } from \"../redux/actions\";\n\nconst mapState = state => ({\n  game_is_started: state.game_status.isStarted,\n  game_is_loading: state.game_status.isLoading,\n  hintCounter: state.hint_counter,\n  random_game: state.random_game,\n  game_database: state.game_database\n});\n\nconst mapDispatch = dispatch => ({\n  pushNewAnswer: answer => dispatch(pushNewAnswer(answer)),\n  loadNewQuestion: db => dispatch(loadNewQuestion(db)),\n  startLoading: () => dispatch(startLoading())\n});\n\nexport default connect(mapState, mapDispatch)(GameNavigatorBottom);","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/redux_containers/GameNavigatorBottom.js"],"names":["connect","GameNavigatorBottom","startLoading","pushNewAnswer","loadNewQuestion","mapState","state","game_is_started","game_status","isStarted","game_is_loading","isLoading","hintCounter","hint_counter","random_game","game_database","mapDispatch","dispatch","answer","db"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,mBAAP,MAAgC,6DAAhC;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,eAAtC,QAA6D,kBAA7D;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,KAAK;AACzBC,EAAAA,eAAe,EAAED,KAAK,CAACE,WAAN,CAAkBC,SADV;AAEzBC,EAAAA,eAAe,EAAEJ,KAAK,CAACE,WAAN,CAAkBG,SAFV;AAGzBC,EAAAA,WAAW,EAAEN,KAAK,CAACO,YAHM;AAIzBC,EAAAA,WAAW,EAAER,KAAK,CAACQ,WAJM;AAKzBC,EAAAA,aAAa,EAAET,KAAK,CAACS;AALI,CAAL,CAAtB;;AAQA,MAAMC,WAAW,GAAIC,QAAQ,KAAK;AAChCd,EAAAA,aAAa,EAAGe,MAAD,IAAYD,QAAQ,CAACd,aAAa,CAACe,MAAD,CAAd,CADH;AAEhCd,EAAAA,eAAe,EAAGe,EAAD,IAAQF,QAAQ,CAACb,eAAe,CAACe,EAAD,CAAhB,CAFD;AAGhCjB,EAAAA,YAAY,EAAE,MAAMe,QAAQ,CAACf,YAAY,EAAb;AAHI,CAAL,CAA7B;;AAMA,eAAeF,OAAO,CAACK,QAAD,EAAWW,WAAX,CAAP,CAA+Bf,mBAA/B,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport GameNavigatorBottom from \"../components/main/challenge/containers/GameNavigatorBottom\"\nimport { startLoading, pushNewAnswer, loadNewQuestion } from \"../redux/actions\"\n\nconst mapState = state => ({\n  game_is_started: state.game_status.isStarted,\n  game_is_loading: state.game_status.isLoading,\n  hintCounter: state.hint_counter,\n  random_game: state.random_game,\n  game_database: state.game_database,\n})\n\nconst mapDispatch  = dispatch => ({\n  pushNewAnswer: (answer) => dispatch(pushNewAnswer(answer)),\n  loadNewQuestion: (db) => dispatch(loadNewQuestion(db)),\n  startLoading: () => dispatch(startLoading()),\n})\n\nexport default connect(mapState, mapDispatch)(GameNavigatorBottom);\n"]},"metadata":{},"sourceType":"module"}