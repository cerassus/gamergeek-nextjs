{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/cerassus/Websites/gamergeek-nextjs/components/styled-components/MainCounter.js\";\nimport styled from \"styled-components\";\nimport { useState, useEffect, Fragment } from \"react\";\nconst CounterContainer = styled.div`\n  text-transform: lowercase;\n  font-weight: 900;\n  font-size: 3rem;\n  display: inline-block;\n  ${props => props.counter < 10 && `color: var(--red)`};\n  max-width: 9ch;\n`;\nexport default function MainCounter({\n  game_status,\n  endGame\n}) {\n  const {\n    0: counter,\n    1: setCounter\n  } = useState(15 .toPrecision(5));\n  const {\n    0: didMount,\n    1: setDidMount\n  } = useState(false);\n  useEffect(() => {\n    !game_status.isStarted && setCounter(15 .toPrecision(5));\n    const startCounting = didMount && game_status.isStarted && !game_status.isLoading && setInterval(() => {\n      setCounter(counter => counter >= 10 ? (counter - 0.1).toPrecision(5) : counter >= 1 ? (counter - 0.1).toPrecision(4) : (counter - 0.1).toPrecision(3));\n    }, 100);\n    return () => clearInterval(startCounting);\n  }, [game_status]);\n  useEffect(() => counter <= 0 && endGame(), [counter]);\n  useEffect(() => {\n    setDidMount(true);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CounterContainer, {\n    counter: counter,\n    children: game_status.isStarted && counter > 0 && (counter >= 10 ? `00:${counter}` : `00:0${counter}`)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/components/styled-components/MainCounter.js"],"names":["styled","useState","useEffect","Fragment","CounterContainer","div","props","counter","MainCounter","game_status","endGame","setCounter","toPrecision","didMount","setDidMount","isStarted","startCounting","isLoading","setInterval","clearInterval"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,OAA9C;AAEA,MAAMC,gBAAgB,GAAGJ,MAAM,CAACK,GAAI;AACpC;AACA;AACA;AACA;AACA,IAAKC,KAAD,IAAWA,KAAK,CAACC,OAAN,GAAgB,EAAhB,IAAuB,mBAAmB;AACzD;AACA,CAPA;AASA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAArB,EAA+C;AAC5D,QAAM;AAAA,OAACH,OAAD;AAAA,OAAUI;AAAV,MAAwBV,QAAQ,CAAE,EAAD,EAAKW,WAAL,CAAiB,CAAjB,CAAD,CAAtC;AACA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,KAACO,WAAW,CAACM,SAAb,IACEJ,UAAU,CAAE,EAAD,EAAKC,WAAL,CAAiB,CAAjB,CAAD,CADZ;AAEA,UAAMI,aAAa,GACjBH,QAAQ,IACRJ,WAAW,CAACM,SADZ,IAEE,CAACN,WAAW,CAACQ,SAFf,IAGIC,WAAW,CAAC,MAAM;AAChBP,MAAAA,UAAU,CAAEJ,OAAD,IACTA,OAAO,IAAI,EAAX,GACE,CAACA,OAAO,GAAG,GAAX,EAAgBK,WAAhB,CAA4B,CAA5B,CADF,GAEEL,OAAO,IAAI,CAAX,GACA,CAACA,OAAO,GAAG,GAAX,EAAgBK,WAAhB,CAA4B,CAA5B,CADA,GAEA,CAACL,OAAO,GAAG,GAAX,EAAgBK,WAAhB,CAA4B,CAA5B,CALM,CAAV;AAML,KAPc,EAOZ,GAPY,CAJjB;AAYA,WAAO,MAAMO,aAAa,CAACH,aAAD,CAA1B;AACD,GAhBQ,EAgBN,CAACP,WAAD,CAhBM,CAAT;AAkBAP,EAAAA,SAAS,CAAC,MAAMK,OAAO,IAAI,CAAX,IAAgBG,OAAO,EAA9B,EAAkC,CAACH,OAAD,CAAlC,CAAT;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEP,OAA3B;AAAA,cACGE,WAAW,CAACM,SAAZ,IACCR,OAAO,GAAG,CADX,KAEGA,OAAO,IAAI,EAAX,GACC,MAAKA,OAAQ,EADd,GAEC,OAAMA,OAAQ,EAJlB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD","sourcesContent":["import styled from \"styled-components\";\nimport { useState, useEffect, Fragment } from \"react\";\n\nconst CounterContainer = styled.div`\n  text-transform: lowercase;\n  font-weight: 900;\n  font-size: 3rem;\n  display: inline-block;\n  ${(props) => props.counter < 10 && `color: var(--red)`};\n  max-width: 9ch;\n`;\n\nexport default function MainCounter({ game_status, endGame }) {\n  const [counter, setCounter] = useState((15).toPrecision(5));\n  const [didMount, setDidMount] = useState(false);\n\n  useEffect(() => {\n    !game_status.isStarted && \n      setCounter((15).toPrecision(5));\n    const startCounting =\n      didMount &&\n      game_status.isStarted &&\n        !game_status.isLoading &&\n          setInterval(() => {\n            setCounter((counter) => \n              counter >= 10 \n              ? (counter - 0.1).toPrecision(5) \n              : counter >= 1\n              ? (counter - 0.1).toPrecision(4)\n              : (counter - 0.1).toPrecision(3))\n      }, 100);\n    return () => clearInterval(startCounting);\n  }, [game_status]);\n\n  useEffect(() => counter <= 0 && endGame(), [counter]);\n\n  useEffect(() => {\n    setDidMount(true);\n  }, []);\n\n  return (\n    <CounterContainer counter={counter}>\n      {game_status.isStarted && \n        counter > 0 && (\n          counter >= 10 ?\n          `00:${counter}` :\n          `00:0${counter}`\n        )}\n    </CounterContainer>\n  );\n}"]},"metadata":{},"sourceType":"module"}