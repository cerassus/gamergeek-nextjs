{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  text-transform: lowercase;\\n  font-weight: 900;\\n  font-size: 3rem;\\n  display: inline-block;\\n  \", \";\\n  max-width: 9ch;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\nvar CounterContainer = styled.div(_templateObject(), function (props) {\n  return props.counter < 10 && \"color: var(--red)\";\n});\nexport default function MainCounter(_ref) {\n  var game_status = _ref.game_status,\n      endGame = _ref.endGame;\n\n  var _useState = useState(30 .toPrecision(5)),\n      counter = _useState[0],\n      setCounter = _useState[1];\n\n  var _useState2 = useState(false),\n      didMount = _useState2[0],\n      setDidMount = _useState2[1];\n\n  useEffect(function () {\n    !game_status.isStarted && setCounter(30 .toPrecision(5));\n    var startCounting = didMount && game_status.isStarted && !game_status.isLoading && setInterval(function () {\n      setCounter(function (counter) {\n        return counter >= 10 ? (counter - 0.1).toPrecision(5) : counter >= 1 ? (counter - 0.1).toPrecision(4) : (counter - 0.1).toPrecision(3);\n      });\n    }, 100);\n    return function () {\n      return clearInterval(startCounting);\n    };\n  }, [game_status]);\n  useEffect(function () {\n    return counter <= 0 && endGame();\n  }, [counter]);\n  useEffect(function () {\n    setDidMount(true);\n  }, []);\n  return /*#__PURE__*/_jsx(CounterContainer, {\n    counter: counter,\n    children: game_status.isStarted && counter > 0 && (counter >= 10 ? \"00:\".concat(counter) : \"00:0\".concat(counter))\n  });\n}","map":null,"metadata":{},"sourceType":"module"}