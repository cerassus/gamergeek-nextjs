{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/containers/Popup.js\";\nimport * as SC from \"../../../styled-components/Popups\";\nimport PopupUserData from \"../popups/PopupUserData\";\nimport PopupSummary from \"../../../../redux_containers/PopupSummary\";\nimport Typography from \"../../../styled-components/Typography\"; //import { fetchNewGameDatabase } from \"../../../../global/fetchNewGameDatabase\"\n\nexport default function Popup({\n  showPopup,\n  startGame,\n  clearUserScore,\n  //   newGameDatabase,\n  loadNewQuestion,\n  popup_to_show,\n  startLoading\n}) {\n  const handleClose = () => {\n    showPopup(false);\n    clearUserScore();\n  };\n\n  const getNewDatabase = async difficulty => {\n    handleClose();\n    startGame();\n    startLoading(); // newGameDatabase(await fetchNewGameDatabase(difficulty-1))\n    // await loadNewQuestion()\n\n    loadNewQuestion(difficulty - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SC.Background, {\n    visibility: true,\n    children: /*#__PURE__*/_jsxDEV(SC.PopupContainer, {\n      children: [/*#__PURE__*/_jsxDEV(SC.TopBar, {\n        children: [/*#__PURE__*/_jsxDEV(SC.Close, {\n          onClick: () => handleClose(),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          hint: true,\n          uppercase: true,\n          gamefont: true,\n          children: popup_to_show === 'userdata' ? `Hello gamergeek!` : popup_to_show === 'summary' ? `Summary` : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SC.Content, {\n        children: popup_to_show === 'userdata' ? /*#__PURE__*/_jsxDEV(PopupUserData, {\n          gameIsReadyToStart: difficulty => getNewDatabase(difficulty)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this) : popup_to_show === 'summary' ? /*#__PURE__*/_jsxDEV(PopupSummary, {\n          close_summary_popup: () => handleClose()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/containers/Popup.js"],"names":["SC","PopupUserData","PopupSummary","Typography","Popup","showPopup","startGame","clearUserScore","loadNewQuestion","popup_to_show","startLoading","handleClose","getNewDatabase","difficulty"],"mappings":";;AAAA,OAAO,KAAKA,EAAZ,MAAoB,mCAApB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,UAAP,MAAuB,uCAAvB,C,CACA;;AAEA,eAAe,SAASC,KAAT,CAAe;AAC1BC,EAAAA,SAD0B;AAE1BC,EAAAA,SAF0B;AAG1BC,EAAAA,cAH0B;AAI7B;AACGC,EAAAA,eAL0B;AAM1BC,EAAAA,aAN0B;AAO1BC,EAAAA;AAP0B,CAAf,EAQT;AACJ,QAAMC,WAAW,GAAG,MAAM;AACxBN,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAE,IAAAA,cAAc;AACf,GAHD;;AAIA,QAAMK,cAAc,GAAG,MAAOC,UAAP,IAAsB;AAC3CF,IAAAA,WAAW;AACXL,IAAAA,SAAS;AACTI,IAAAA,YAAY,GAH+B,CAK3C;AACA;;AAEAF,IAAAA,eAAe,CAACK,UAAU,GAAC,CAAZ,CAAf;AACD,GATD;;AAUA,sBACE,QAAC,EAAD,CAAI,UAAJ;AAAe,IAAA,UAAU,EAAE,IAA3B;AAAA,2BACE,QAAC,EAAD,CAAI,cAAJ;AAAA,8BACE,QAAC,EAAD,CAAI,MAAJ;AAAA,gCACE,QAAC,EAAD,CAAI,KAAJ;AAAU,UAAA,OAAO,EAAE,MAAMF,WAAW,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAY,UAAA,IAAI,MAAhB;AAAiB,UAAA,SAAS,MAA1B;AAA2B,UAAA,QAAQ,MAAnC;AAAA,oBACGF,aAAa,KAAK,UAAlB,GACI,kBADJ,GAEGA,aAAa,KAAK,SAAlB,GACG,SADH,GAEE;AALR;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,EAAD,CAAI,OAAJ;AAAA,kBACGA,aAAa,KAAK,UAAlB,gBACG,QAAC,aAAD;AACE,UAAA,kBAAkB,EAAGI,UAAD,IAAgBD,cAAc,CAACC,UAAD;AADpD;AAAA;AAAA;AAAA;AAAA,gBADH,GAGGJ,aAAa,KAAK,SAAlB,gBACE,QAAC,YAAD;AACE,UAAA,mBAAmB,EAAE,MAAME,WAAW;AADxC;AAAA;AAAA;AAAA;AAAA,gBADF,GAGE;AAPR;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD","sourcesContent":["import * as SC from \"../../../styled-components/Popups\"\nimport PopupUserData from \"../popups/PopupUserData\"\nimport PopupSummary from \"../../../../redux_containers/PopupSummary\"\nimport Typography from \"../../../styled-components/Typography\"\n//import { fetchNewGameDatabase } from \"../../../../global/fetchNewGameDatabase\"\n\nexport default function Popup({ \n    showPopup, \n    startGame, \n    clearUserScore, \n //   newGameDatabase,\n    loadNewQuestion,\n    popup_to_show,\n    startLoading\n   }) {\n  const handleClose = () => {\n    showPopup(false)\n    clearUserScore()\n  }\n  const getNewDatabase = async (difficulty) => {\n    handleClose()\n    startGame()\n    startLoading()\n\n    // newGameDatabase(await fetchNewGameDatabase(difficulty-1))\n    // await loadNewQuestion()\n\n    loadNewQuestion(difficulty-1)\n  }\n  return (\n    <SC.Background visibility={true}>\n      <SC.PopupContainer>\n        <SC.TopBar>\n          <SC.Close onClick={() => handleClose()}>&times;</SC.Close>\n          <Typography hint uppercase gamefont>\n            {popup_to_show === 'userdata'\n              ? `Hello gamergeek!`\n              : popup_to_show === 'summary'\n                ? `Summary`\n                : null}\n          </Typography>\n        </SC.TopBar>\n        <SC.Content>\n          {popup_to_show === 'userdata'\n            ? <PopupUserData \n                gameIsReadyToStart={(difficulty) => getNewDatabase(difficulty)} />\n            : popup_to_show === 'summary'\n              ? <PopupSummary \n                  close_summary_popup={() => handleClose()}  />\n              : null}\n        </SC.Content>\n      </SC.PopupContainer>\n    </SC.Background>\n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}