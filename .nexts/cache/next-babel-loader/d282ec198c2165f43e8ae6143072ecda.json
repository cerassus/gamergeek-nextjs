{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/components/main/challenge/Table.js\",\n    _s = $RefreshSig$();\n\nimport Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\nimport React from \"react\";\nimport { pickRandomGame } from \"../../../global/fetch\";\nimport { game_database } from \"../../../global/const\";\nvar game_difficulty = [\"easy\", \"medium\", \"hard\"];\nexport default function TableComponent(_ref) {\n  _s();\n\n  var _this = this;\n\n  var game_status = _ref.game_status,\n      random_game = _ref.random_game,\n      startGame = _ref.startGame,\n      pauseGame = _ref.pauseGame,\n      endGame = _ref.endGame,\n      showRandomGame = _ref.showRandomGame,\n      pushNewAnswer = _ref.pushNewAnswer;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      difficultyChoicePanel = _React$useState2[0],\n      showDifficultyChoicePanel = _React$useState2[1];\n\n  var stop = function stop() {\n    showDifficultyChoicePanel(false);\n    return endGame();\n  };\n\n  var start = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(difficulty) {\n      var randomik;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              pauseGame();\n              _context.next = 3;\n              return pickRandomGame(game_database);\n\n            case 3:\n              randomik = _context.sent;\n              showRandomGame(randomik);\n              difficulty && startGame(difficulty);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function start(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var checkAnswer = function checkAnswer(answer) {\n    var user_answer = answer.target.innerText === random_game.name ? {\n      title: random_game.name,\n      time: 3,\n      score: 2000,\n      correct: true\n    } : {\n      title: random_game.name,\n      time: 3,\n      score: 0,\n      correct: false\n    };\n    pushNewAnswer(user_answer);\n    start();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      top: true,\n      children: !game_status.isLoading ? game_status.isRunning ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          href: \"/\",\n          children: \"get a hint\"\n        }, \"key0011\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          onClick: start,\n          children: \"skip\"\n        }, \"key0012\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          onClick: stop,\n          children: \"quit\"\n        }, \"key0013\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : difficultyChoicePanel ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          children: [\"set difficulty:\", \" \"]\n        }, \"key0014\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), game_difficulty.map(function (diff, i) {\n          return /*#__PURE__*/_jsxDEV(Typography, {\n            link: true,\n            onClick: function onClick() {\n              return start({\n                i: i\n              });\n            },\n            children: diff\n          }, \"key0011\" + i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, _this);\n        })]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: function onClick() {\n          return showDifficultyChoicePanel(true);\n        },\n        children: \"start a new challenge\"\n      }, \"key0015\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        children: \"loading\"\n      }, 'key0016', false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      bottom: true,\n      children: game_status.isRunning && random_game.answers ? random_game.answers.map(function (answer, i) {\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          answer: true,\n          onClick: function onClick(answer) {\n            return checkAnswer(answer);\n          },\n          children: answer\n        }, \"key0021\" + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, _this);\n      }) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n} // export default function TableTop({ game_status, startGame, stopGame }) {\n//   const [difficultyChoice, showDifficultyChoice] = React.useState(false)\n//   const stop = () => {\n//     showDifficultyChoice(false);\n//     return stopGame();\n//   }\n//   return (\n//     <Table top>\n//       {(!game_status && difficultyChoice) && (\n//         <>\n//         <Typography link>set difficulty: </Typography>\n//         <Typography link onClick={() => startGame(0)}>easy</Typography>\n//         <Typography link onClick={() => startGame(1)}>medium</Typography>\n//         <Typography link onClick={() => startGame(2)}>hard</Typography>\n//         </>\n//       )}\n//       {(!game_status && !difficultyChoice) && (\n//         <Typography link onClick={() => showDifficultyChoice(true)}>start a new challenge</Typography>\n//       )}\n//       {game_status && (\n//         <>\n//           <Typography link href=\"/\">get a hint</Typography>\n//           <Typography link href=\"/\">skip</Typography>\n//           <Typography link onClick={stop}>quit</Typography>\n//         </>\n//       )}\n//     </Table>\n//   );\n// }\n\n_s(TableComponent, \"4WUstAemGike+wDVb9BrGUu7zkI=\");\n\n_c = TableComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableComponent\");","map":{"version":3,"sources":["/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/components/main/challenge/Table.js"],"names":["Table","Typography","React","pickRandomGame","game_database","game_difficulty","TableComponent","game_status","random_game","startGame","pauseGame","endGame","showRandomGame","pushNewAnswer","useState","difficultyChoicePanel","showDifficultyChoicePanel","stop","start","difficulty","randomik","checkAnswer","answer","user_answer","target","innerText","name","title","time","score","correct","isLoading","isRunning","map","diff","i","answers"],"mappings":"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","sourcesContent":["import Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\nimport React from \"react\";\nimport { pickRandomGame } from \"../../../global/fetch\";\nimport { game_database } from \"../../../global/const\";\n\nconst game_difficulty = [\"easy\", \"medium\", \"hard\"];\n\nexport default function TableComponent({\n  game_status,\n  random_game,\n  startGame,\n  pauseGame,\n  endGame,\n  showRandomGame,\n  pushNewAnswer\n}) {\n  const [difficultyChoicePanel, showDifficultyChoicePanel] = React.useState(false);\n  const stop = () => {\n    showDifficultyChoicePanel(false);\n    return endGame();\n  };\n  const start = async (difficulty) => {\n    pauseGame();\n    const randomik = await pickRandomGame(game_database);\n    showRandomGame(randomik);\n    difficulty && startGame(difficulty);\n  };\n  const checkAnswer = (answer) => {\n    const user_answer =\n      answer.target.innerText === random_game.name\n        ? {\n            title: random_game.name,\n            time: 3,\n            score: 2000,\n            correct: true,\n          }\n        : {\n            title: random_game.name,\n            time: 3,\n            score: 0,\n            correct: false,\n          };\n    pushNewAnswer(user_answer);\n    start();\n  };\n  return (\n    <>\n      <Table top>\n        {!game_status.isLoading ?\n          (game_status.isRunning ? (\n            <>\n              <Typography key={\"key0011\"} link href=\"/\">get a hint</Typography>\n              <Typography key={\"key0012\"} link onClick={start}>skip</Typography>\n              <Typography key={\"key0013\"} link onClick={stop}>quit</Typography>\n            </>\n          ) : difficultyChoicePanel ? (\n            <>\n              <Typography key={\"key0014\"} link>set difficulty:{\" \"}</Typography>\n              {game_difficulty.map((diff, i) => (\n              <Typography key={\"key0011\"+i} link onClick={() => start({i})}>{diff}</Typography>))}\n            </>\n          ) : <Typography key={\"key0015\"} link onClick={() => showDifficultyChoicePanel(true)}>start a new challenge</Typography>\n          ) : <Typography key={'key0016'} link>loading</Typography>}\n      </Table>\n      <Table bottom>\n        {(game_status.isRunning && random_game.answers) ?\n        random_game.answers.map((answer, i) => (\n        <Typography key={\"key0021\"+i} answer onClick={(answer) => checkAnswer(answer)}>{answer}</Typography>))\n        : ``}\n      </Table>\n    </>\n  );\n}\n\n// export default function TableTop({ game_status, startGame, stopGame }) {\n//   const [difficultyChoice, showDifficultyChoice] = React.useState(false)\n//   const stop = () => {\n//     showDifficultyChoice(false);\n//     return stopGame();\n//   }\n//   return (\n//     <Table top>\n//       {(!game_status && difficultyChoice) && (\n//         <>\n//         <Typography link>set difficulty: </Typography>\n//         <Typography link onClick={() => startGame(0)}>easy</Typography>\n//         <Typography link onClick={() => startGame(1)}>medium</Typography>\n//         <Typography link onClick={() => startGame(2)}>hard</Typography>\n//         </>\n//       )}\n//       {(!game_status && !difficultyChoice) && (\n//         <Typography link onClick={() => showDifficultyChoice(true)}>start a new challenge</Typography>\n//       )}\n\n//       {game_status && (\n//         <>\n//           <Typography link href=\"/\">get a hint</Typography>\n//           <Typography link href=\"/\">skip</Typography>\n//           <Typography link onClick={stop}>quit</Typography>\n//         </>\n//       )}\n//     </Table>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}