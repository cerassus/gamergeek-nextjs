{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/containers/GameNavigatorTop.js\",\n    _s = $RefreshSig$();\n\nimport Table from \"../../../styled-components/Table\";\nimport Typography from \"../../../styled-components/Typography\";\nimport { useState, useEffect, Fragment } from \"react\";\nexport default function GameNavigatorTop(_ref) {\n  _s();\n\n  var game_is_started = _ref.game_is_started,\n      game_is_loading = _ref.game_is_loading,\n      showPopup = _ref.showPopup,\n      endGame = _ref.endGame,\n      showHint = _ref.showHint,\n      loadNewQuestion = _ref.loadNewQuestion,\n      startLoading = _ref.startLoading,\n      random_game = _ref.random_game,\n      setHintCounter = _ref.setHintCounter,\n      hintCounter = _ref.hintCounter,\n      pushNewAnswer = _ref.pushNewAnswer;\n\n  var _useState = useState(false),\n      hints = _useState[0],\n      setHints = _useState[1];\n\n  var handleClickHint = function handleClickHint() {\n    showHint.apply(void 0, _toConsumableArray(hints.splice(Math.floor(Math.random() * hints.length), 1)));\n    setHintCounter();\n  };\n\n  var handleClickSkip = function handleClickSkip() {\n    pushNewAnswer({\n      score: 0,\n      hints_used: hintCounter,\n      skip: true\n    });\n    startLoading();\n    loadNewQuestion();\n  };\n\n  useEffect(function () {\n    random_game && setHints(random_game.hints);\n  }, [random_game]);\n  useEffect(function () {\n    if (random_game && !game_is_started) {\n      pushNewAnswer({\n        score: 0,\n        hints_used: hintCounter\n      });\n      showPopup('summary');\n    }\n  }, [game_is_started]);\n  return /*#__PURE__*/_jsxDEV(Table, {\n    top: true,\n    children: !game_is_started ? /*#__PURE__*/_jsxDEV(Typography, {\n      link: true,\n      onClick: function onClick() {\n        return showPopup('userdata');\n      },\n      children: \"start a new challenge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this) : game_is_loading ? /*#__PURE__*/_jsxDEV(Typography, {\n      link: true,\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [hintCounter < 3 && /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: function onClick() {\n          return handleClickHint();\n        },\n        children: \"get a hint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: function onClick() {\n          return handleClickSkip();\n        },\n        children: \"skip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: function onClick() {\n          return endGame();\n        },\n        children: \"quit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n}\n\n_s(GameNavigatorTop, \"B3UvEtuDHQnqGkFiV+KPLKfZTiE=\");\n\n_c = GameNavigatorTop;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameNavigatorTop\");","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/containers/GameNavigatorTop.js"],"names":["Table","Typography","useState","useEffect","Fragment","GameNavigatorTop","game_is_started","game_is_loading","showPopup","endGame","showHint","loadNewQuestion","startLoading","random_game","setHintCounter","hintCounter","pushNewAnswer","hints","setHints","handleClickHint","splice","Math","floor","random","length","handleClickSkip","score","hints_used","skip"],"mappings":"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","sourcesContent":["import Table from \"../../../styled-components/Table\";\nimport Typography from \"../../../styled-components/Typography\";\nimport { useState, useEffect, Fragment } from \"react\";\n\nexport default function GameNavigatorTop({ \n  game_is_started, \n  game_is_loading,\n  showPopup,\n  endGame, \n  showHint, \n  loadNewQuestion,\n  startLoading,\n  random_game,\n  setHintCounter,\n  hintCounter,\n  pushNewAnswer,\n }) {\n  const [hints, setHints] = useState(false)\n  const handleClickHint = () => {\n    showHint(...hints.splice(Math.floor(Math.random() * hints.length), 1))\n    setHintCounter()\n  }\n  const handleClickSkip = () => {\n    pushNewAnswer({\n      score: 0,\n      hints_used: hintCounter,\n      skip: true,\n    })\n    startLoading()\n    loadNewQuestion()\n  }\n  useEffect(() => {\n    random_game && setHints(random_game.hints)\n  }, [random_game])\n  useEffect(() => {\n    if(random_game && !game_is_started) {\n      pushNewAnswer({\n        score: 0,\n        hints_used: hintCounter,\n      })\n      showPopup('summary')\n    }\n  }, [game_is_started])\n  return (\n      <Table top>    \n        {\n        !game_is_started \n          ? <Typography link onClick={() => showPopup('userdata')}>start a new challenge</Typography>\n          : game_is_loading \n            ? <Typography link>loading</Typography>\n            : (\n              <Fragment>\n                {hintCounter < 3 && \n                <Typography link onClick={() => handleClickHint()}>get a hint</Typography>}\n                <Typography link onClick={() => handleClickSkip()}>skip</Typography>\n                <Typography link onClick={() => endGame()}>quit</Typography>\n              </Fragment>\n            )\n        }\n      </Table>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}