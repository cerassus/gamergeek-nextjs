{"ast":null,"code":"import { connect } from \"react-redux\";\nimport Table from \"../components/main/challenge/Table\";\nimport { newAnswer as _newAnswer, startGame as _startGame, stopGame as _stopGame, getRandomGame as _getRandomGame, screenshotsAreLoading as _screenshotsAreLoading } from \"../redux/actions\";\n\nvar mapState = function mapState(state) {\n  return {\n    game_status: state.game_status,\n    random_game: state.random_game,\n    screenshots_loaded: state.screenshots_loaded\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    newAnswer: function newAnswer(answer) {\n      return dispatch(_newAnswer(answer));\n    },\n    getRandomGame: function getRandomGame(obj) {\n      return dispatch(_getRandomGame(obj));\n    },\n    startGame: function startGame(difficulty) {\n      return dispatch(_startGame(difficulty));\n    },\n    stopGame: function stopGame() {\n      return dispatch(_stopGame());\n    },\n    screenshotsAreLoading: function screenshotsAreLoading() {\n      return dispatch(_screenshotsAreLoading());\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(Table);","map":{"version":3,"sources":["/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/containers/Table.js"],"names":["connect","Table","newAnswer","startGame","stopGame","getRandomGame","screenshotsAreLoading","mapState","state","game_status","random_game","screenshots_loaded","mapDispatch","dispatch","answer","obj","difficulty"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,oCAAlB;AACA,SAASC,SAAS,IAATA,UAAT,EAAoBC,SAAS,IAATA,UAApB,EAA+BC,QAAQ,IAARA,SAA/B,EAAyCC,aAAa,IAAbA,cAAzC,EAAwDC,qBAAqB,IAArBA,sBAAxD,QAAqF,kBAArF;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SAAK;AACvBC,IAAAA,WAAW,EAAED,KAAK,CAACC,WADI;AAEvBC,IAAAA,WAAW,EAAEF,KAAK,CAACE,WAFI;AAGvBC,IAAAA,kBAAkB,EAAEH,KAAK,CAACG;AAHH,GAAL;AAAA,CAAtB;;AAMA,IAAMC,WAAW,GAAI,SAAfA,WAAe,CAAAC,QAAQ;AAAA,SAAK;AAChCX,IAAAA,SAAS,EAAE,mBAACY,MAAD;AAAA,aAAYD,QAAQ,CAACX,UAAS,CAACY,MAAD,CAAV,CAApB;AAAA,KADqB;AAEhCT,IAAAA,aAAa,EAAE,uBAACU,GAAD;AAAA,aAASF,QAAQ,CAACR,cAAa,CAACU,GAAD,CAAd,CAAjB;AAAA,KAFiB;AAGhCZ,IAAAA,SAAS,EAAE,mBAACa,UAAD;AAAA,aAAgBH,QAAQ,CAACV,UAAS,CAACa,UAAD,CAAV,CAAxB;AAAA,KAHqB;AAIhCZ,IAAAA,QAAQ,EAAE;AAAA,aAAMS,QAAQ,CAACT,SAAQ,EAAT,CAAd;AAAA,KAJsB;AAKhCE,IAAAA,qBAAqB,EAAE;AAAA,aAAMO,QAAQ,CAACP,sBAAqB,EAAtB,CAAd;AAAA;AALS,GAAL;AAAA,CAA7B;;AAQA,eAAeN,OAAO,CAACO,QAAD,EAAWK,WAAX,CAAP,CAA+BX,KAA/B,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport Table from \"../components/main/challenge/Table\"\nimport { newAnswer, startGame, stopGame, getRandomGame, screenshotsAreLoading } from \"../redux/actions\"\n\nconst mapState = state => ({\n    game_status: state.game_status,\n    random_game: state.random_game,\n    screenshots_loaded: state.screenshots_loaded,\n})\n\nconst mapDispatch  = dispatch => ({\n  newAnswer: (answer) => dispatch(newAnswer(answer)),\n  getRandomGame: (obj) => dispatch(getRandomGame(obj)),\n  startGame: (difficulty) => dispatch(startGame(difficulty)),\n  stopGame: () => dispatch(stopGame()),\n  screenshotsAreLoading: () => dispatch(screenshotsAreLoading()),\n})\n\nexport default connect(mapState, mapDispatch)(Table);\n"]},"metadata":{},"sourceType":"module"}