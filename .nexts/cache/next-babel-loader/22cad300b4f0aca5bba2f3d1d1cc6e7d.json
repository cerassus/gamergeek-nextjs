{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Table from \"../../../styled-components/Table\";\nimport Typography from \"../../../styled-components/Typography\";\nimport { useState, useEffect, Fragment } from \"react\";\nexport default function GameNavigatorTop(_ref) {\n  var game_is_started = _ref.game_is_started,\n      game_is_loading = _ref.game_is_loading,\n      showPopup = _ref.showPopup,\n      endGame = _ref.endGame,\n      showHint = _ref.showHint,\n      loadNewQuestion = _ref.loadNewQuestion,\n      startLoading = _ref.startLoading,\n      random_game = _ref.random_game,\n      setHintCounter = _ref.setHintCounter,\n      hintCounter = _ref.hintCounter,\n      pushNewAnswer = _ref.pushNewAnswer,\n      test = _ref.test;\n\n  var _useState = useState(false),\n      hints = _useState[0],\n      setHints = _useState[1];\n\n  var handleClickHint = function handleClickHint() {\n    showHint.apply(void 0, _toConsumableArray(hints.splice(Math.floor(Math.random() * hints.length), 1)));\n    setHintCounter();\n  };\n\n  var handleClickSkip = function handleClickSkip() {\n    pushNewAnswer({\n      score: 0,\n      hints_used: hintCounter,\n      skip: true\n    });\n    startLoading();\n    loadNewQuestion();\n  };\n\n  useEffect(function () {\n    random_game && setHints(random_game.hints);\n  }, [random_game]);\n  useEffect(function () {\n    if (random_game && !game_is_started) {\n      pushNewAnswer({\n        score: 0,\n        hints_used: hintCounter\n      });\n      showPopup('summary');\n    }\n  }, [game_is_started]);\n  useEffect(function () {\n    console.log(test);\n  }, [test]);\n  return /*#__PURE__*/_jsx(Table, {\n    top: true,\n    children: !game_is_started ? /*#__PURE__*/_jsx(Typography, {\n      link: true,\n      onClick: function onClick() {\n        return showPopup('userdata');\n      },\n      children: \"start a new challenge\"\n    }) : game_is_loading ? /*#__PURE__*/_jsx(Typography, {\n      link: true,\n      children: \"loading\"\n    }) : /*#__PURE__*/_jsxs(Fragment, {\n      children: [hintCounter < 3 && /*#__PURE__*/_jsx(Typography, {\n        link: true,\n        onClick: function onClick() {\n          return handleClickHint();\n        },\n        children: \"get a hint\"\n      }), /*#__PURE__*/_jsx(Typography, {\n        link: true,\n        onClick: function onClick() {\n          return handleClickSkip();\n        },\n        children: \"skip\"\n      }), /*#__PURE__*/_jsx(Typography, {\n        link: true,\n        onClick: function onClick() {\n          return endGame();\n        },\n        children: \"quit\"\n      })]\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}