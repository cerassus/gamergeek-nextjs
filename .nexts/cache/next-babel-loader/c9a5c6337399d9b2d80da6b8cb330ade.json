{"ast":null,"code":"import { connect } from \"react-redux\";\nimport Table from \"../components/main/challenge/Table\";\nimport { newAnswer, startGame, stopGame, getRandomGame } from \"../redux/actions\";\n\nconst mapState = state => ({\n  game_status: state.game_status,\n  random_game: state.random_game,\n  screenshots_loaded: state.screenshots_loaded\n});\n\nconst mapDispatch = dispatch => ({\n  newAnswer: answer => dispatch(newAnswer(answer)),\n  getRandomGame: obj => dispatch(getRandomGame(obj)),\n  startGame: difficulty => dispatch(startGame(difficulty)),\n  stopGame: () => dispatch(stopGame())\n});\n\nexport default connect(mapState, mapDispatch)(Table);","map":{"version":3,"sources":["/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/containers/Table.js"],"names":["connect","Table","newAnswer","startGame","stopGame","getRandomGame","mapState","state","game_status","random_game","screenshots_loaded","mapDispatch","dispatch","answer","obj","difficulty"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,oCAAlB;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,QAA/B,EAAyCC,aAAzC,QAA8D,kBAA9D;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,KAAK;AACvBC,EAAAA,WAAW,EAAED,KAAK,CAACC,WADI;AAEvBC,EAAAA,WAAW,EAAEF,KAAK,CAACE,WAFI;AAGvBC,EAAAA,kBAAkB,EAAEH,KAAK,CAACG;AAHH,CAAL,CAAtB;;AAMA,MAAMC,WAAW,GAAIC,QAAQ,KAAK;AAChCV,EAAAA,SAAS,EAAGW,MAAD,IAAYD,QAAQ,CAACV,SAAS,CAACW,MAAD,CAAV,CADC;AAEhCR,EAAAA,aAAa,EAAGS,GAAD,IAASF,QAAQ,CAACP,aAAa,CAACS,GAAD,CAAd,CAFA;AAGhCX,EAAAA,SAAS,EAAGY,UAAD,IAAgBH,QAAQ,CAACT,SAAS,CAACY,UAAD,CAAV,CAHH;AAIhCX,EAAAA,QAAQ,EAAE,MAAMQ,QAAQ,CAACR,QAAQ,EAAT;AAJQ,CAAL,CAA7B;;AAOA,eAAeJ,OAAO,CAACM,QAAD,EAAWK,WAAX,CAAP,CAA+BV,KAA/B,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport Table from \"../components/main/challenge/Table\"\nimport { newAnswer, startGame, stopGame, getRandomGame } from \"../redux/actions\"\n\nconst mapState = state => ({\n    game_status: state.game_status,\n    random_game: state.random_game,\n    screenshots_loaded: state.screenshots_loaded,\n})\n\nconst mapDispatch  = dispatch => ({\n  newAnswer: (answer) => dispatch(newAnswer(answer)),\n  getRandomGame: (obj) => dispatch(getRandomGame(obj)),\n  startGame: (difficulty) => dispatch(startGame(difficulty)),\n  stopGame: () => dispatch(stopGame()),\n})\n\nexport default connect(mapState, mapDispatch)(Table);\n"]},"metadata":{},"sourceType":"module"}