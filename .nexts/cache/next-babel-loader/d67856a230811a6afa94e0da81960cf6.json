{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport * as actions from \"./actions\";\n\nconst game_status = (state = false, action) => action.type === actions.START_GAME ? true : action.type === actions.STOP_GAME ? false : state;\n\nconst random_game = (state = \"\", action) => {\n  if (action.type === actions.GET_RANDOM_GAME) {\n    console.log(action);\n    return action.game;\n  } else return \"\";\n};\n\nexport default combineReducers({\n  game_status,\n  random_game\n}); // const game_database = [...source.results].map((game,i) => game = {\n//     id: game.id,\n//     title: game.name,\n//     screenshots: [\n//         ...game.short_screenshots.slice(0, 3).map(screenshot => screenshot.image)\n//     ],\n//     hints: {\n//         genre: game.genres[game.genres.length-1].name,\n//         year: game.released,\n//     }\n// })","map":{"version":3,"sources":["/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/redux/reducers.js"],"names":["combineReducers","actions","game_status","state","action","type","START_GAME","STOP_GAME","random_game","GET_RANDOM_GAME","console","log","game"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG,KAAT,EAAgBC,MAAhB,KAA2BA,MAAM,CAACC,IAAP,KAAgBJ,OAAO,CAACK,UAAxB,GAAqC,IAArC,GAA4CF,MAAM,CAACC,IAAP,KAAgBJ,OAAO,CAACM,SAAxB,GAAoC,KAApC,GAA4CJ,KAAvI;;AAEA,MAAMK,WAAW,GAAG,CAACL,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACxC,MAAGA,MAAM,CAACC,IAAP,KAAgBJ,OAAO,CAACQ,eAA3B,EAA4C;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACA,WAAOA,MAAM,CAACQ,IAAd;AACH,GAHD,MAGO,OAAO,EAAP;AACV,CALD;;AAOA,eAAeZ,eAAe,CAAC;AAC7BE,EAAAA,WAD6B;AAE7BM,EAAAA;AAF6B,CAAD,CAA9B,C,CAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { combineReducers } from \"redux\"\nimport * as actions from \"./actions\"\n\n\n\n\nconst game_status = (state = false, action) => action.type === actions.START_GAME ? true : action.type === actions.STOP_GAME ? false : state\n\nconst random_game = (state = \"\", action) => {\n    if(action.type === actions.GET_RANDOM_GAME) {\n        console.log(action)\n        return action.game\n    } else return \"\"\n}\n\nexport default combineReducers({\n  game_status,\n  random_game,\n})\n\n\n\n\n\n\n\n\n\n// const game_database = [...source.results].map((game,i) => game = {\n//     id: game.id,\n//     title: game.name,\n//     screenshots: [\n//         ...game.short_screenshots.slice(0, 3).map(screenshot => screenshot.image)\n//     ],\n//     hints: {\n//         genre: game.genres[game.genres.length-1].name,\n//         year: game.released,\n//     }\n// })"]},"metadata":{},"sourceType":"module"}