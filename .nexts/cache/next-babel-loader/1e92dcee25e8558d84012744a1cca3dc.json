{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/Table.js\";\nimport Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\nimport { useState, useEffect, Fragment } from \"react\";\nimport { pickRandomGame } from \"../../../global/fetch\";\nimport { game_database } from \"../../../global/const\";\nimport moment from 'moment';\nimport * as SC from \"../../styled-components/Popup\";\nconst game_difficulty = [\"easy\", \"medium\", \"hard\"];\nexport default function TableComponent({\n  random_game,\n  startGame,\n  startLoading,\n  endGame,\n  showRandomGame,\n  pushNewAnswer,\n  showHint,\n  hideHint,\n  game_status\n}) {\n  const {\n    0: answerTimeStart,\n    1: setAnswerTimeStart\n  } = useState(false);\n  const {\n    0: hintCounter,\n    1: setHintCounter\n  } = useState(0);\n  const {\n    0: hints,\n    1: setHints\n  } = useState(false);\n  const {\n    0: difficulty,\n    1: setDifficulty\n  } = useState(false);\n  const {\n    0: usernamePanel,\n    1: showUsernamePanel\n  } = useState(true);\n  const {\n    0: warning,\n    1: setWarning\n  } = useState(false);\n  const {\n    0: popup,\n    1: switchPopup\n  } = useState(false);\n  const {\n    0: username,\n    1: setUsername\n  } = useState(false);\n\n  const startNewGame = () => {\n    switchPopup(true);\n  };\n\n  const loadNewQuestion = async () => {\n    startLoading();\n    hideHint();\n    setHintCounter(0);\n    showRandomGame(await pickRandomGame(game_database));\n  };\n\n  const quitGame = () => {\n    hideHint();\n    setHintCounter(0);\n    showUsernamePanel(true);\n    setDifficulty(false);\n    setUsername(false);\n    endGame();\n  };\n\n  const getHint = () => {\n    showHint(...hints.splice(Math.floor(Math.random() * hints.length), 1));\n    setHintCounter(hintCounter => hintCounter + 1);\n  };\n\n  const handleTyping = e => {\n    (0 < e.target.value.length && e.target.value.length) < 3 ? setWarning(true) : setWarning(false); // check if username doesn't match one of usernames in MongoDatabase\n\n    setUsername(e.target.value);\n  };\n\n  const handleClosePopup = () => {\n    switchPopup(false);\n    showUsernamePanel(true);\n    setUsername(false);\n  };\n\n  const validateUserName = () => {\n    warning && !username ? alert('Wrong username! Try different one!') : showUsernamePanel(false);\n  };\n\n  const checkAnswer = async answer => {\n    const answerTimeEnd = moment();\n    const user_answer = answer === random_game.name ? {\n      title: random_game.name,\n      time: answerTimeEnd.diff(answerTimeStart),\n      score: Number((1000 / answerTimeEnd.diff(answerTimeStart) * 10000 * ((10 - hintCounter) / 10)).toFixed()),\n      correct: true,\n      hints_used: hintCounter\n    } : {\n      title: random_game.name,\n      time: answerTimeEnd.diff(answerTimeStart),\n      score: 0,\n      correct: false,\n      skip: answer === \"player_skipped_game\" ? true : false,\n      hints_used: hintCounter\n    };\n    pushNewAnswer(user_answer);\n    loadNewQuestion();\n  };\n\n  useEffect(() => {\n    !game_status.isLoading && setAnswerTimeStart(moment());\n  }, [game_status]);\n  useEffect(() => {\n    random_game && setHints(random_game.hints);\n  }, [random_game]);\n  useEffect(() => {\n    if (difficulty) {\n      switchPopup(false);\n      startGame(difficulty);\n      loadNewQuestion();\n    }\n  }, [difficulty]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      top: true,\n      children: !game_status.isStarted ? /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: () => startNewGame(),\n        children: \"start a new challenge\"\n      }, \"key0015\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this) : game_status.isLoading ? /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        children: \"loading\"\n      }, 'key0016', false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 12\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [hintCounter < 3 && /*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          onClick: () => getHint(),\n          children: \"get a hint\"\n        }, \"key0011\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          onClick: () => checkAnswer(\"player_skipped_game\"),\n          children: \"skip\"\n        }, \"key0012\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          onClick: () => quitGame(),\n          children: \"quit\"\n        }, \"key0013\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      bottom: true,\n      children: game_status.isStarted && !game_status.isLoading && random_game.answers ? random_game.answers.map((answer, i) => /*#__PURE__*/_jsxDEV(Typography, {\n        answer: true,\n        onClick: answer => checkAnswer(answer.target.innerText),\n        children: answer\n      }, \"key0021\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)) : ``\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SC.Popup, {\n      title: \"Hello gamergeek!\",\n      switch_popup: popup,\n      popupIsClosed: () => handleClosePopup(),\n      children: usernamePanel ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(SC.WelcomeText, {\n          children: \"Let\\u2019s see how good you are! Starting from your name...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(SC.TextInput, {\n          type: \"text\",\n          onChange: e => handleTyping(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(SC.TextInputHint, {\n          visible: warning,\n          children: \"Wrong nickname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(SC.PlayButton, {\n          onClick: () => validateUserName(),\n          children: \"Let's Play!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(SC.WelcomeText, {\n          center: true,\n          children: \"Set game difficulty...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), game_difficulty.map((diff_lvl, i) => /*#__PURE__*/_jsxDEV(SC.PlayButton, {\n          onClick: () => setDifficulty(diff_lvl),\n          children: diff_lvl\n        }, \"key0011\" + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/Table.js"],"names":["Table","Typography","useState","useEffect","Fragment","pickRandomGame","game_database","moment","SC","game_difficulty","TableComponent","random_game","startGame","startLoading","endGame","showRandomGame","pushNewAnswer","showHint","hideHint","game_status","answerTimeStart","setAnswerTimeStart","hintCounter","setHintCounter","hints","setHints","difficulty","setDifficulty","usernamePanel","showUsernamePanel","warning","setWarning","popup","switchPopup","username","setUsername","startNewGame","loadNewQuestion","quitGame","getHint","splice","Math","floor","random","length","handleTyping","e","target","value","handleClosePopup","validateUserName","alert","checkAnswer","answer","answerTimeEnd","user_answer","name","title","time","diff","score","Number","toFixed","correct","hints_used","skip","isLoading","isStarted","answers","map","i","innerText","diff_lvl"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,+BAAlB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,OAA9C;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,KAAKC,EAAZ,MAAoB,+BAApB;AAEA,MAAMC,eAAe,GAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,MAAnB,CAAxB;AAEA,eAAe,SAASC,cAAT,CAAwB;AACnCC,EAAAA,WADmC;AACtBC,EAAAA,SADsB;AACXC,EAAAA,YADW;AACGC,EAAAA,OADH;AAEnCC,EAAAA,cAFmC;AAEnBC,EAAAA,aAFmB;AAEJC,EAAAA,QAFI;AAEMC,EAAAA,QAFN;AAEgBC,EAAAA;AAFhB,CAAxB,EAEuD;AACpE,QAAM;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAAwCnB,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM;AAAA,OAACoB,WAAD;AAAA,OAAcC;AAAd,MAAgCrB,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM;AAAA,OAACsB,KAAD;AAAA,OAAQC;AAAR,MAAoBvB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM;AAAA,OAACwB,UAAD;AAAA,OAAaC;AAAb,MAA8BzB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAA,OAAC0B,aAAD;AAAA,OAAgBC;AAAhB,MAAqC3B,QAAQ,CAAC,IAAD,CAAnD;AACA,QAAM;AAAA,OAAC4B,OAAD;AAAA,OAAUC;AAAV,MAAwB7B,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAAC8B,KAAD;AAAA,OAAQC;AAAR,MAAuB/B,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM;AAAA,OAACgC,QAAD;AAAA,OAAWC;AAAX,MAA0BjC,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMkC,YAAY,GAAG,MAAM;AACzBH,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAGA,QAAMI,eAAe,GAAG,YAAY;AAClCxB,IAAAA,YAAY;AACZK,IAAAA,QAAQ;AACRK,IAAAA,cAAc,CAAC,CAAD,CAAd;AACAR,IAAAA,cAAc,CAAC,MAAMV,cAAc,CAACC,aAAD,CAArB,CAAd;AACD,GALD;;AAMA,QAAMgC,QAAQ,GAAG,MAAM;AACrBpB,IAAAA,QAAQ;AACRK,IAAAA,cAAc,CAAC,CAAD,CAAd;AACAM,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAF,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAQ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACArB,IAAAA,OAAO;AACR,GAPD;;AAQA,QAAMyB,OAAO,GAAG,MAAM;AACpBtB,IAAAA,QAAQ,CAAC,GAAGO,KAAK,CAACgB,MAAN,CAAaC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBnB,KAAK,CAACoB,MAAjC,CAAb,EAAuD,CAAvD,CAAJ,CAAR;AACArB,IAAAA,cAAc,CAACD,WAAW,IAAIA,WAAW,GAAG,CAA9B,CAAd;AACD,GAHD;;AAIA,QAAMuB,YAAY,GAAIC,CAAD,IAAO;AAC1B,KAAC,IAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeJ,MAAnB,IAA6BE,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeJ,MAA7C,IAAuD,CAAvD,GACIb,UAAU,CAAC,IAAD,CADd,GAEIA,UAAU,CAAC,KAAD,CAFd,CAD0B,CAGD;;AACzBI,IAAAA,WAAW,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,GALD;;AAMA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BhB,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAJ,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAM,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAJD;;AAKA,QAAMe,gBAAgB,GAAG,MAAM;AAC5BpB,IAAAA,OAAO,IAAI,CAACI,QAAb,GAAyBiB,KAAK,CAAC,oCAAD,CAA9B,GAAuEtB,iBAAiB,CAAC,KAAD,CAAxF;AACD,GAFD;;AAGA,QAAMuB,WAAW,GAAG,MAAOC,MAAP,IAAkB;AACpC,UAAMC,aAAa,GAAG/C,MAAM,EAA5B;AACA,UAAMgD,WAAW,GAAGF,MAAM,KAAK1C,WAAW,CAAC6C,IAAvB,GACd;AACEC,MAAAA,KAAK,EAAE9C,WAAW,CAAC6C,IADrB;AAEEE,MAAAA,IAAI,EAAEJ,aAAa,CAACK,IAAd,CAAmBvC,eAAnB,CAFR;AAGEwC,MAAAA,KAAK,EAAEC,MAAM,CAAC,CAAC,OAAKP,aAAa,CAACK,IAAd,CAAmBvC,eAAnB,CAAL,GAAyC,KAAzC,IAAgD,CAAC,KAAGE,WAAJ,IAAiB,EAAjE,CAAD,EAAuEwC,OAAvE,EAAD,CAHf;AAIEC,MAAAA,OAAO,EAAE,IAJX;AAKEC,MAAAA,UAAU,EAAE1C;AALd,KADc,GAQd;AACEmC,MAAAA,KAAK,EAAE9C,WAAW,CAAC6C,IADrB;AAEEE,MAAAA,IAAI,EAAEJ,aAAa,CAACK,IAAd,CAAmBvC,eAAnB,CAFR;AAGEwC,MAAAA,KAAK,EAAE,CAHT;AAIEG,MAAAA,OAAO,EAAE,KAJX;AAKEE,MAAAA,IAAI,EAAEZ,MAAM,KAAK,qBAAX,GAAmC,IAAnC,GAAyC,KALjD;AAMEW,MAAAA,UAAU,EAAE1C;AANd,KARN;AAgBAN,IAAAA,aAAa,CAACuC,WAAD,CAAb;AACAlB,IAAAA,eAAe;AAChB,GApBD;;AAsBAlC,EAAAA,SAAS,CAAC,MAAM;AACd,KAACgB,WAAW,CAAC+C,SAAb,IAA0B7C,kBAAkB,CAACd,MAAM,EAAP,CAA5C;AACD,GAFQ,EAEN,CAACY,WAAD,CAFM,CAAT;AAGAhB,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,WAAW,IAAIc,QAAQ,CAACd,WAAW,CAACa,KAAb,CAAvB;AACD,GAFQ,EAEN,CAACb,WAAD,CAFM,CAAT;AAGAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGuB,UAAH,EAAe;AACbO,MAAAA,WAAW,CAAC,KAAD,CAAX;AACArB,MAAAA,SAAS,CAACc,UAAD,CAAT;AACAW,MAAAA,eAAe;AAChB;AACF,GANQ,EAMP,CAACX,UAAD,CANO,CAAT;AAQA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,GAAG,MAAV;AAAA,gBACG,CAACP,WAAW,CAACgD,SAAb,gBACC,QAAC,UAAD;AAA4B,QAAA,IAAI,MAAhC;AAAiC,QAAA,OAAO,EAAE,MAAM/B,YAAY,EAA5D;AAAA;AAAA,SAAiB,SAAjB;AAAA;AAAA;AAAA;AAAA,cADD,GAEGjB,WAAW,CAAC+C,SAAZ,gBACD,QAAC,UAAD;AAA4B,QAAA,IAAI,MAAhC;AAAA;AAAA,SAAiB,SAAjB;AAAA;AAAA;AAAA;AAAA,cADC,gBAGA,QAAC,QAAD;AAAA,mBACG5C,WAAW,GAAG,CAAd,iBAAmB,QAAC,UAAD;AAA4B,UAAA,IAAI,MAAhC;AAAiC,UAAA,OAAO,EAAE,MAAMiB,OAAO,EAAvD;AAAA;AAAA,WAAiB,SAAjB;AAAA;AAAA;AAAA;AAAA,gBADtB,eAEE,QAAC,UAAD;AAA4B,UAAA,IAAI,MAAhC;AAAiC,UAAA,OAAO,EAAE,MAAMa,WAAW,CAAC,qBAAD,CAA3D;AAAA;AAAA,WAAiB,SAAjB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,UAAD;AAA4B,UAAA,IAAI,MAAhC;AAAiC,UAAA,OAAO,EAAE,MAAMd,QAAQ,EAAxD;AAAA;AAAA,WAAiB,SAAjB;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,YADF,eAcE,QAAC,KAAD;AAAO,MAAA,MAAM,MAAb;AAAA,gBACInB,WAAW,CAACgD,SAAZ,IAAyB,CAAChD,WAAW,CAAC+C,SAAtC,IAAmDvD,WAAW,CAACyD,OAAhE,GACDzD,WAAW,CAACyD,OAAZ,CAAoBC,GAApB,CAAwB,CAAChB,MAAD,EAASiB,CAAT,kBACxB,QAAC,UAAD;AAA8B,QAAA,MAAM,MAApC;AAAqC,QAAA,OAAO,EAAGjB,MAAD,IAAYD,WAAW,CAACC,MAAM,CAACN,MAAP,CAAcwB,SAAf,CAArE;AAAA,kBAAiGlB;AAAjG,SAAiB,YAAUiB,CAA3B;AAAA;AAAA;AAAA;AAAA,cADA,CADC,GAGE;AAJL;AAAA;AAAA;AAAA;AAAA,YAdF,eAoBE,QAAC,EAAD,CAAI,KAAJ;AAAU,MAAA,KAAK,EAAC,kBAAhB;AAAmC,MAAA,YAAY,EAAEtC,KAAjD;AAAwD,MAAA,aAAa,EAAE,MAAMiB,gBAAgB,EAA7F;AAAA,gBACKrB,aAAa,gBACZ,QAAC,QAAD;AAAA,gCACE,QAAC,EAAD,CAAI,WAAJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,EAAD,CAAI,SAAJ;AAAc,UAAA,IAAI,EAAC,MAAnB;AAA0B,UAAA,QAAQ,EAAGkB,CAAD,IAAOD,YAAY,CAACC,CAAD;AAAvD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,EAAD,CAAI,aAAJ;AAAkB,UAAA,OAAO,EAAEhB,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,EAAD,CAAI,UAAJ;AAAe,UAAA,OAAO,EAAE,MAAMoB,gBAAgB,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADY,gBAQZ,QAAC,QAAD;AAAA,gCACE,QAAC,EAAD,CAAI,WAAJ;AAAgB,UAAA,MAAM,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGzC,eAAe,CAAC4D,GAAhB,CAAoB,CAACG,QAAD,EAAWF,CAAX,kBACnB,QAAC,EAAD,CAAI,UAAJ;AAAmC,UAAA,OAAO,EAAE,MAAM3C,aAAa,CAAC6C,QAAD,CAA/D;AAAA,oBACGA;AADH,WAAoB,YAAYF,CAAhC;AAAA;AAAA;AAAA;AAAA,gBADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AATN;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD","sourcesContent":["import Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\nimport { useState, useEffect, Fragment } from \"react\";\nimport { pickRandomGame } from \"../../../global/fetch\";\nimport { game_database } from \"../../../global/const\";\nimport moment from 'moment'\nimport * as SC from \"../../styled-components/Popup\"\n\nconst game_difficulty = [\"easy\", \"medium\", \"hard\"];\n\nexport default function TableComponent({\n    random_game, startGame, startLoading, endGame,\n    showRandomGame, pushNewAnswer, showHint, hideHint, game_status,}) {\n  const [answerTimeStart, setAnswerTimeStart] = useState(false)\n  const [hintCounter, setHintCounter] = useState(0)\n  const [hints, setHints] = useState(false)\n  const [difficulty, setDifficulty] = useState(false)\n  const [usernamePanel, showUsernamePanel] = useState(true)\n  const [warning, setWarning] = useState(false)\n  const [popup, switchPopup] = useState(false)\n  const [username, setUsername] = useState(false)\n\n  const startNewGame = () => {\n    switchPopup(true)\n  }\n  const loadNewQuestion = async () => {\n    startLoading()\n    hideHint()\n    setHintCounter(0)\n    showRandomGame(await pickRandomGame(game_database))\n  } \n  const quitGame = () => {\n    hideHint()\n    setHintCounter(0)\n    showUsernamePanel(true)\n    setDifficulty(false)\n    setUsername(false)\n    endGame()\n  }\n  const getHint = () => {\n    showHint(...hints.splice(Math.floor(Math.random() * hints.length), 1))\n    setHintCounter(hintCounter => hintCounter + 1)\n  }\n  const handleTyping = (e) => {\n    (0 < e.target.value.length && e.target.value.length) < 3\n      ? setWarning(true)\n      : setWarning(false);   // check if username doesn't match one of usernames in MongoDatabase\n    setUsername(e.target.value)\n  }\n  const handleClosePopup = () => {\n    switchPopup(false)\n    showUsernamePanel(true)\n    setUsername(false)\n  }\n  const validateUserName = () => {\n    (warning && !username) ? alert('Wrong username! Try different one!') : showUsernamePanel(false)\n  }\n  const checkAnswer = async (answer) => {\n    const answerTimeEnd = moment()\n    const user_answer = answer === random_game.name\n        ? {\n            title: random_game.name,\n            time: answerTimeEnd.diff(answerTimeStart),\n            score: Number((1000/answerTimeEnd.diff(answerTimeStart)*10000*((10-hintCounter)/10)).toFixed()),\n            correct: true,\n            hints_used: hintCounter,\n          }\n        : {\n            title: random_game.name,\n            time: answerTimeEnd.diff(answerTimeStart),\n            score: 0,\n            correct: false,\n            skip: answer === \"player_skipped_game\" ? true: false,\n            hints_used: hintCounter,\n          };\n    pushNewAnswer(user_answer)\n    loadNewQuestion()\n  }\n\n  useEffect(() => {\n    !game_status.isLoading && setAnswerTimeStart(moment())\n  }, [game_status])\n  useEffect(() => {\n    random_game && setHints(random_game.hints) \n  }, [random_game])\n  useEffect(() => {\n    if(difficulty) {\n      switchPopup(false)\n      startGame(difficulty)\n      loadNewQuestion()\n    }\n  },[difficulty])\n\n  return (\n    <Fragment>\n      <Table top>    \n        {!game_status.isStarted ?\n          <Typography key={\"key0015\"} link onClick={() => startNewGame()}>start a new challenge</Typography>\n          : game_status.isLoading ?\n           <Typography key={'key0016'} link>loading</Typography>\n           : (\n            <Fragment>\n              {hintCounter < 3 && <Typography key={\"key0011\"} link onClick={() => getHint()}>get a hint</Typography>}\n              <Typography key={\"key0012\"} link onClick={() => checkAnswer(\"player_skipped_game\")}>skip</Typography>\n              <Typography key={\"key0013\"} link onClick={() => quitGame()}>quit</Typography>\n            </Fragment>\n          )}\n      </Table>\n      <Table bottom>\n        {(game_status.isStarted && !game_status.isLoading && random_game.answers) ?\n        random_game.answers.map((answer, i) => (\n        <Typography key={\"key0021\"+i} answer onClick={(answer) => checkAnswer(answer.target.innerText)}>{answer}</Typography>))\n        : ``}\n      </Table>\n      <SC.Popup title=\"Hello gamergeek!\" switch_popup={popup} popupIsClosed={() => handleClosePopup()}>\n          {usernamePanel ? (\n            <Fragment>\n              <SC.WelcomeText>Let’s see how good you are! Starting from your name...</SC.WelcomeText>\n              <SC.TextInput type=\"text\" onChange={(e) => handleTyping(e)} />\n              <SC.TextInputHint visible={warning}>Wrong nickname</SC.TextInputHint>\n              <SC.PlayButton onClick={() => validateUserName()}>Let's Play!</SC.PlayButton>\n            </Fragment>\n          ) : (\n            <Fragment>\n              <SC.WelcomeText center>Set game difficulty...</SC.WelcomeText>\n              {game_difficulty.map((diff_lvl, i) => (\n                <SC.PlayButton key={\"key0011\" + i} onClick={() => setDifficulty(diff_lvl)}>\n                  {diff_lvl}\n                </SC.PlayButton>\n              ))}\n            </Fragment>\n          )}\n      </SC.Popup>\n    </Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}