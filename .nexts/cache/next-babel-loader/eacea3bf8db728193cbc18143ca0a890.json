{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/cerassus/Websites/gamergeek-nextjs/components/styled-components/MainCounter.js\";\nimport styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { countdown } from \"../../redux/actions\";\nconst CounterContainer = styled.div`\n  text-transform: lowercase;\n  font-weight: 900;\n  font-size: 3rem;\n  display: inline-block;\n`;\nexport default function MainCounter({\n  is_game_started,\n  is_game_loading,\n  game_counter\n}) {\n  const {\n    0: counter,\n    1: setCounter\n  } = useState(100);\n  const {\n    0: didMount,\n    1: setDidMount\n  } = useState(false);\n  const startCounting = setInterval(function () {\n    setCounter(counter => counter - 1);\n    console.log('decreasing counter');\n  }, 1000);\n\n  const stopCounting = () => {\n    clearInterval(startCounting);\n    console.log('clearing interval');\n  };\n\n  useEffect(() => {\n    didMount && (is_game_loading ? stopCounting() : startCounting());\n  }, [is_game_loading]);\n  useEffect(() => {\n    if (didMount) {\n      stopCounting();\n      setCounter(60);\n    }\n  }, [is_game_started]);\n  useEffect(() => {\n    setDidMount(true);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CounterContainer, {\n    children: counter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n} // export default function MainCounter({game_status, main_counter}) {\n//   React.useEffect(() => {\n//     if(game_status.isStarted) {\n//       let startingValue = 60\n//       const DIV = document.getElementById('counter')\n//       const task = () => {\n//         startingValue--\n//         DIV.innerText = startingValue\n//         startingValue === 0 && stopCounting()\n//       }\n//       const runCounting = setInterval(task, 1000)\n//       const stopCounting = () => clearInterval(runCounting)\n//     }\n//   },[game_status.isStarted])\n//   return (\n//     <CounterContainer>\n//       <div id='counter'></div>\n//     </CounterContainer>\n//   )\n// }\n// React.useEffect(() => {\n//   game_status.isStarted ? \n//   startTimer()\n//   : console.log('game over')\n// }, [game_status.isStarted])\n// React.useEffect(() => {\n//   game_status.isRunning ? console.log('running') : game_status.isLoading && console.log('loading') \n// }, [game_status.isRunning])","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/components/styled-components/MainCounter.js"],"names":["styled","useState","useEffect","moment","countdown","CounterContainer","div","MainCounter","is_game_started","is_game_loading","game_counter","counter","setCounter","didMount","setDidMount","startCounting","setInterval","console","log","stopCounting","clearInterval"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,MAAMC,gBAAgB,GAAGL,MAAM,CAACM,GAAI;AACpC;AACA;AACA;AACA;AACA,CALA;AAOA,eAAe,SAASC,WAAT,CAAqB;AAACC,EAAAA,eAAD;AAAkBC,EAAAA,eAAlB;AAAmCC,EAAAA;AAAnC,CAArB,EAAuE;AACpF,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAC,GAAD,CAAtC;AACA,QAAM;AAAA,OAACY,QAAD;AAAA,OAAWC;AAAX,MAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMc,aAAa,GAAGC,WAAW,CAAC,YAAW;AACzCJ,IAAAA,UAAU,CAACD,OAAO,IAAIA,OAAO,GAAG,CAAtB,CAAV;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,GAH8B,EAG5B,IAH4B,CAAjC;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACzBC,IAAAA,aAAa,CAACL,aAAD,CAAb;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,GAHD;;AAIAhB,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,KAAKJ,eAAe,GAAGU,YAAY,EAAf,GAAoBJ,aAAa,EAArD,CAAR;AACD,GAFQ,EAEN,CAACN,eAAD,CAFM,CAAT;AAGAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGW,QAAH,EAAa;AACXM,MAAAA,YAAY;AACZP,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AACF,GALQ,EAKN,CAACJ,eAAD,CALM,CAAT;AAMAN,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE,QAAC,gBAAD;AAAA,cACGH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import styled from \"styled-components\";\nimport { useState, useEffect } from \"react\"\nimport moment from \"moment\"\nimport { countdown } from \"../../redux/actions\"\n\nconst CounterContainer = styled.div`\n  text-transform: lowercase;\n  font-weight: 900;\n  font-size: 3rem;\n  display: inline-block;\n`;\n\nexport default function MainCounter({is_game_started, is_game_loading, game_counter}) {\n  const [counter, setCounter] = useState(100)\n  const [didMount, setDidMount] = useState(false)\n  const startCounting = setInterval(function() {\n      setCounter(counter => counter - 1)\n      console.log('decreasing counter')\n    }, 1000)\n  const stopCounting = () => {\n    clearInterval(startCounting)\n    console.log('clearing interval')\n  }\n  useEffect(() => {\n    didMount && (is_game_loading ? stopCounting() : startCounting())\n  }, [is_game_loading])\n  useEffect(() => {\n    if(didMount) {\n      stopCounting()\n      setCounter(60)\n    }\n  }, [is_game_started])\n  useEffect(() => {\n    setDidMount(true)\n  }, [])\n  return (\n    <CounterContainer>\n      {counter}\n    </CounterContainer>\n  )\n}\n\n\n// export default function MainCounter({game_status, main_counter}) {\n//   React.useEffect(() => {\n//     if(game_status.isStarted) {\n//       let startingValue = 60\n//       const DIV = document.getElementById('counter')\n//       const task = () => {\n//         startingValue--\n//         DIV.innerText = startingValue\n//         startingValue === 0 && stopCounting()\n//       }\n//       const runCounting = setInterval(task, 1000)\n//       const stopCounting = () => clearInterval(runCounting)\n//     }\n//   },[game_status.isStarted])\n//   return (\n//     <CounterContainer>\n//       <div id='counter'></div>\n//     </CounterContainer>\n//   )\n// }\n\n\n\n\n\n\n\n// React.useEffect(() => {\n//   game_status.isStarted ? \n//   startTimer()\n//   : console.log('game over')\n// }, [game_status.isStarted])\n// React.useEffect(() => {\n//   game_status.isRunning ? console.log('running') : game_status.isLoading && console.log('loading') \n// }, [game_status.isRunning])"]},"metadata":{},"sourceType":"module"}