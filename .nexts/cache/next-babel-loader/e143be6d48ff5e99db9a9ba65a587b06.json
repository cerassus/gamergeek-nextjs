{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/containers/GameNavigatorTop.js\";\nimport Table from \"../../../styled-components/Table\";\nimport Typography from \"../../../styled-components/Typography\";\nimport { useState, useEffect, Fragment } from \"react\";\nexport default function GameNavigatorTop({\n  game_is_started,\n  game_is_loading,\n  showPopup,\n  endGame,\n  showHint,\n  loadNewQuestion,\n  startLoading,\n  random_game,\n  setHintCounter,\n  hintCounter,\n  pushNewAnswer,\n  test\n}) {\n  const {\n    0: hints,\n    1: setHints\n  } = useState(false);\n\n  const handleClickHint = () => {\n    showHint(...hints.splice(Math.floor(Math.random() * hints.length), 1));\n    setHintCounter();\n  };\n\n  const handleClickSkip = () => {\n    pushNewAnswer({\n      score: 0,\n      hints_used: hintCounter,\n      skip: true\n    });\n    startLoading();\n    loadNewQuestion();\n  };\n\n  useEffect(() => {\n    random_game && setHints(random_game.hints);\n  }, [random_game]);\n  useEffect(() => {\n    if (random_game && !game_is_started) {\n      pushNewAnswer({\n        score: 0,\n        hints_used: hintCounter\n      });\n      showPopup('summary');\n    }\n  }, [game_is_started]);\n  useEffect(() => {\n    console.log(test);\n  }, [test]);\n  return /*#__PURE__*/_jsxDEV(Table, {\n    top: true,\n    children: !game_is_started ? /*#__PURE__*/_jsxDEV(Typography, {\n      link: true,\n      onClick: () => showPopup('userdata'),\n      children: \"start a new challenge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this) : game_is_loading ? /*#__PURE__*/_jsxDEV(Typography, {\n      link: true,\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [hintCounter < 3 && /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: () => handleClickHint(),\n        children: \"get a hint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: () => handleClickSkip(),\n        children: \"skip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: () => endGame(),\n        children: \"quit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n}","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/containers/GameNavigatorTop.js"],"names":["Table","Typography","useState","useEffect","Fragment","GameNavigatorTop","game_is_started","game_is_loading","showPopup","endGame","showHint","loadNewQuestion","startLoading","random_game","setHintCounter","hintCounter","pushNewAnswer","test","hints","setHints","handleClickHint","splice","Math","floor","random","length","handleClickSkip","score","hints_used","skip","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,kCAAlB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,OAA9C;AAEA,eAAe,SAASC,gBAAT,CAA0B;AACvCC,EAAAA,eADuC;AAEvCC,EAAAA,eAFuC;AAGvCC,EAAAA,SAHuC;AAIvCC,EAAAA,OAJuC;AAKvCC,EAAAA,QALuC;AAMvCC,EAAAA,eANuC;AAOvCC,EAAAA,YAPuC;AAQvCC,EAAAA,WARuC;AASvCC,EAAAA,cATuC;AAUvCC,EAAAA,WAVuC;AAWvCC,EAAAA,aAXuC;AAYvCC,EAAAA;AAZuC,CAA1B,EAaX;AACF,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBjB,QAAQ,CAAC,KAAD,CAAlC;;AACA,QAAMkB,eAAe,GAAG,MAAM;AAC5BV,IAAAA,QAAQ,CAAC,GAAGQ,KAAK,CAACG,MAAN,CAAaC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,KAAK,CAACO,MAAjC,CAAb,EAAuD,CAAvD,CAAJ,CAAR;AACAX,IAAAA,cAAc;AACf,GAHD;;AAIA,QAAMY,eAAe,GAAG,MAAM;AAC5BV,IAAAA,aAAa,CAAC;AACZW,MAAAA,KAAK,EAAE,CADK;AAEZC,MAAAA,UAAU,EAAEb,WAFA;AAGZc,MAAAA,IAAI,EAAE;AAHM,KAAD,CAAb;AAKAjB,IAAAA,YAAY;AACZD,IAAAA,eAAe;AAChB,GARD;;AASAR,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,WAAW,IAAIM,QAAQ,CAACN,WAAW,CAACK,KAAb,CAAvB;AACD,GAFQ,EAEN,CAACL,WAAD,CAFM,CAAT;AAGAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGU,WAAW,IAAI,CAACP,eAAnB,EAAoC;AAClCU,MAAAA,aAAa,CAAC;AACZW,QAAAA,KAAK,EAAE,CADK;AAEZC,QAAAA,UAAU,EAAEb;AAFA,OAAD,CAAb;AAIAP,MAAAA,SAAS,CAAC,SAAD,CAAT;AACD;AACF,GARQ,EAQN,CAACF,eAAD,CARM,CAAT;AAUAH,EAAAA,SAAS,CAAC,MAAM;AACd2B,IAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAIA,sBACI,QAAC,KAAD;AAAO,IAAA,GAAG,MAAV;AAAA,cAEE,CAACX,eAAD,gBACI,QAAC,UAAD;AAAY,MAAA,IAAI,MAAhB;AAAiB,MAAA,OAAO,EAAE,MAAME,SAAS,CAAC,UAAD,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,GAEID,eAAe,gBACb,QAAC,UAAD;AAAY,MAAA,IAAI,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADa,gBAGb,QAAC,QAAD;AAAA,iBACGQ,WAAW,GAAG,CAAd,iBACD,QAAC,UAAD;AAAY,QAAA,IAAI,MAAhB;AAAiB,QAAA,OAAO,EAAE,MAAMK,eAAe,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,UAAD;AAAY,QAAA,IAAI,MAAhB;AAAiB,QAAA,OAAO,EAAE,MAAMM,eAAe,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,UAAD;AAAY,QAAA,IAAI,MAAhB;AAAiB,QAAA,OAAO,EAAE,MAAMjB,OAAO,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPR;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBD","sourcesContent":["import Table from \"../../../styled-components/Table\";\nimport Typography from \"../../../styled-components/Typography\";\nimport { useState, useEffect, Fragment } from \"react\";\n\nexport default function GameNavigatorTop({ \n  game_is_started, \n  game_is_loading,\n  showPopup,\n  endGame, \n  showHint, \n  loadNewQuestion,\n  startLoading,\n  random_game,\n  setHintCounter,\n  hintCounter,\n  pushNewAnswer,\n  test\n }) {\n  const [hints, setHints] = useState(false)\n  const handleClickHint = () => {\n    showHint(...hints.splice(Math.floor(Math.random() * hints.length), 1))\n    setHintCounter()\n  }\n  const handleClickSkip = () => {\n    pushNewAnswer({\n      score: 0,\n      hints_used: hintCounter,\n      skip: true,\n    })\n    startLoading()\n    loadNewQuestion()\n  }\n  useEffect(() => {\n    random_game && setHints(random_game.hints)\n  }, [random_game])\n  useEffect(() => {\n    if(random_game && !game_is_started) {\n      pushNewAnswer({\n        score: 0,\n        hints_used: hintCounter,\n      })\n      showPopup('summary')\n    }\n  }, [game_is_started])\n\n  useEffect(() => {\n    console.log(test)\n  }, [test])\n\n  return (\n      <Table top>    \n        {\n        !game_is_started \n          ? <Typography link onClick={() => showPopup('userdata')}>start a new challenge</Typography>\n          : game_is_loading \n            ? <Typography link>loading</Typography>\n            : (\n              <Fragment>\n                {hintCounter < 3 && \n                <Typography link onClick={() => handleClickHint()}>get a hint</Typography>}\n                <Typography link onClick={() => handleClickSkip()}>skip</Typography>\n                <Typography link onClick={() => endGame()}>quit</Typography>\n              </Fragment>\n            )\n        }\n      </Table>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}