{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/Table.js\",\n    _s = $RefreshSig$();\n\nimport Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\nimport React from \"react\";\nimport { pickRandomGame } from \"../../../global/fetch\";\nimport { game_database } from \"../../../global/const\";\nimport moment from 'moment';\nvar game_difficulty = [\"easy\", \"medium\", \"hard\"];\nexport default function TableComponent(_ref) {\n  _s();\n\n  var _this = this;\n\n  var is_game_started = _ref.is_game_started,\n      is_game_loading = _ref.is_game_loading,\n      random_game = _ref.random_game,\n      startGame = _ref.startGame,\n      loadNewItem = _ref.loadNewItem,\n      endGame = _ref.endGame,\n      showRandomGame = _ref.showRandomGame,\n      pushNewAnswer = _ref.pushNewAnswer,\n      showHint = _ref.showHint,\n      hideHint = _ref.hideHint;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      difficultyChoicePanel = _React$useState2[0],\n      showDifficultyChoicePanel = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      answerTimeStart = _React$useState4[0],\n      setAnswerTimeStart = _React$useState4[1];\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      hintCounter = _React$useState6[0],\n      setHintCounter = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      hints = _React$useState8[0],\n      setHints = _React$useState8[1];\n\n  var stop = function stop() {\n    showDifficultyChoicePanel(false);\n    hideHint();\n    setHintCounter(0);\n    endGame();\n  };\n\n  var start = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(difficulty) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              difficulty && startGame(difficulty);\n              loadNewItem();\n              hideHint();\n              setHintCounter(0);\n              _context.t0 = showRandomGame;\n              _context.next = 7;\n              return pickRandomGame(game_database);\n\n            case 7:\n              _context.t1 = _context.sent;\n              (0, _context.t0)(_context.t1);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function start(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var checkAnswer = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(answer) {\n      var answerTimeEnd, user_answer;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              answerTimeEnd = moment();\n              user_answer = answer === random_game.name ? {\n                title: random_game.name,\n                time: answerTimeEnd.diff(answerTimeStart),\n                score: Number((1000 / answerTimeEnd.diff(answerTimeStart) * 10000 * ((10 - hintCounter) / 10)).toFixed()),\n                correct: true,\n                hints_used: hintCounter\n              } : {\n                title: random_game.name,\n                time: answerTimeEnd.diff(answerTimeStart),\n                score: 0,\n                correct: false,\n                hints_used: hintCounter\n              };\n              pushNewAnswer(user_answer);\n              start();\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function checkAnswer(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var getHint = function getHint() {\n    showHint.apply(void 0, _toConsumableArray(hints.splice(Math.floor(Math.random() * hints.length), 1)));\n    setHintCounter(hintCounter + 1);\n  };\n\n  React.useEffect(function () {\n    !is_game_loading && setAnswerTimeStart(moment());\n  }, [is_game_loading]);\n  React.useEffect(function () {\n    random_game && setHints(random_game.hints);\n  }, [random_game]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      top: true,\n      children: [is_game_started && !is_game_loading && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [hintCounter < 3 && /*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          onClick: function onClick() {\n            return getHint();\n          },\n          children: \"get a hint\"\n        }, \"key0011\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          onClick: function onClick() {\n            return checkAnswer(false);\n          },\n          children: \"skip\"\n        }, \"key0012\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          onClick: stop,\n          children: \"quit\"\n        }, \"key0013\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), !is_game_started && difficultyChoicePanel && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          children: [\"set difficulty:\", \" \"]\n        }, \"key0014\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), game_difficulty.map(function (diffe, i) {\n          return /*#__PURE__*/_jsxDEV(Typography, {\n            link: true,\n            onClick: function onClick() {\n              return start({\n                i: i\n              });\n            },\n            children: diffe\n          }, \"key0011\" + i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, _this);\n        })]\n      }, void 0, true), !is_game_started && !difficultyChoicePanel && /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: function onClick() {\n          return showDifficultyChoicePanel(true);\n        },\n        children: \"start a new challenge\"\n      }, \"key0015\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 58\n      }, this), is_game_loading && /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        children: \"loading\"\n      }, 'key0016', false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      bottom: true,\n      children: is_game_started && !is_game_loading && random_game.answers ? random_game.answers.map(function (answer, i) {\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          answer: true,\n          onClick: function onClick(answer) {\n            return checkAnswer(answer.target.innerText);\n          },\n          children: answer\n        }, \"key0021\" + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, _this);\n      }) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TableComponent, \"SuQFYLYp36rJ003HNuTpC3m3TTM=\");\n\n_c = TableComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableComponent\");","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/Table.js"],"names":["Table","Typography","React","pickRandomGame","game_database","moment","game_difficulty","TableComponent","is_game_started","is_game_loading","random_game","startGame","loadNewItem","endGame","showRandomGame","pushNewAnswer","showHint","hideHint","useState","difficultyChoicePanel","showDifficultyChoicePanel","answerTimeStart","setAnswerTimeStart","hintCounter","setHintCounter","hints","setHints","stop","start","difficulty","checkAnswer","answer","answerTimeEnd","user_answer","name","title","time","diff","score","Number","toFixed","correct","hints_used","getHint","splice","Math","floor","random","length","useEffect","map","diffe","i","answers","target","innerText"],"mappings":"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","sourcesContent":["import Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\nimport React from \"react\";\nimport { pickRandomGame } from \"../../../global/fetch\";\nimport { game_database } from \"../../../global/const\";\nimport moment from 'moment'\n\nconst game_difficulty = [\"easy\", \"medium\", \"hard\"];\n\nexport default function TableComponent({\n  is_game_started,\n  is_game_loading,\n  random_game,\n  startGame,\n  loadNewItem,\n  endGame,\n  showRandomGame,\n  pushNewAnswer,\n  showHint,\n  hideHint,\n}) {\n  const [difficultyChoicePanel, showDifficultyChoicePanel] = React.useState(false)\n  const [answerTimeStart, setAnswerTimeStart] = React.useState(false)\n  const [hintCounter, setHintCounter] = React.useState(0)\n  const [hints, setHints] = React.useState(false)\n  const stop = () => {\n    showDifficultyChoicePanel(false)\n    hideHint()\n    setHintCounter(0)\n    endGame()\n  };\n  const start = async (difficulty) => {\n    difficulty && startGame(difficulty)\n    loadNewItem()\n    hideHint()\n    setHintCounter(0)\n    showRandomGame(await pickRandomGame(game_database))\n  };\n  const checkAnswer = async (answer) => {\n    const answerTimeEnd = moment()\n    const user_answer =\n      answer === random_game.name\n        ? {\n            title: random_game.name,\n            time: answerTimeEnd.diff(answerTimeStart),\n            score: Number((1000/answerTimeEnd.diff(answerTimeStart)*10000*((10-hintCounter)/10)).toFixed()),\n            correct: true,\n            hints_used: hintCounter,\n          }\n        : {\n            title: random_game.name,\n            time: answerTimeEnd.diff(answerTimeStart),\n            score: 0,\n            correct: false,\n            hints_used: hintCounter,\n          };\n    pushNewAnswer(user_answer)\n    start()\n  }\n  const getHint = () => {\n    showHint(...hints.splice(Math.floor(Math.random() * hints.length), 1))\n    setHintCounter(hintCounter + 1)\n  }\n  React.useEffect(() => {\n    !is_game_loading && setAnswerTimeStart(moment())\n  }, [is_game_loading])\n  React.useEffect(() => {\n    random_game && setHints(random_game.hints) \n  }, [random_game])\n  return (\n    <>\n      <Table top>\n        {is_game_started && !is_game_loading &&(\n          <>\n            {hintCounter < 3 && <Typography key={\"key0011\"} link onClick={() => getHint()}>get a hint</Typography>}\n            <Typography key={\"key0012\"} link onClick={() => checkAnswer(false)}>skip</Typography>\n            <Typography key={\"key0013\"} link onClick={stop}>quit</Typography>\n          </>\n        )}\n        \n        {(!is_game_started && difficultyChoicePanel) && (\n          <>\n            <Typography key={\"key0014\"} link>set difficulty:{\" \"}</Typography>\n            {game_difficulty.map((diffe, i) => (\n            <Typography key={\"key0011\"+i} link onClick={() => start({i})}>{diffe}</Typography>))}\n          </>\n        )}\n        \n        {(!is_game_started && !difficultyChoicePanel) && <Typography key={\"key0015\"} link onClick={() => showDifficultyChoicePanel(true)}>start a new challenge</Typography>}\n        \n        {is_game_loading && <Typography key={'key0016'} link>loading</Typography>}\n      </Table>\n      <Table bottom>\n        {(is_game_started && !is_game_loading && random_game.answers) ?\n        random_game.answers.map((answer, i) => (\n        <Typography key={\"key0021\"+i} answer onClick={(answer) => checkAnswer(answer.target.innerText)}>{answer}</Typography>))\n        : ``}\n      </Table>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}