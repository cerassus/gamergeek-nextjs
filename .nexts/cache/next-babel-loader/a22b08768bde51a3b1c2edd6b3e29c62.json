{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/cerassus/Websites/gamergeek-nextjs/components/styled-components/MainCounter.js\";\nimport styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\nconst CounterContainer = styled.div`\n  text-transform: lowercase;\n  font-weight: 900;\n  font-size: 3rem;\n  display: inline-block;\n  ${props => props.counter < 10 && `color: var(--red)`};\n  & span {\n    font-size: 2rem;\n  }\n`;\nexport default function MainCounter({\n  game_status,\n  endGame\n}) {\n  const {\n    0: counter,\n    1: setCounter\n  } = useState(15);\n  const {\n    0: didMount,\n    1: setDidMount\n  } = useState(false);\n  useEffect(() => {\n    !game_status.isStarted && setCounter(15);\n    const startCounting = didMount && game_status.isStarted && !game_status.isLoading && setInterval(() => {\n      setCounter(counter => counter - 0.1);\n    }, 100);\n    return () => clearInterval(startCounting);\n  }, [game_status]);\n  useEffect(() => counter <= 0 && endGame(), [counter]);\n  useEffect(() => {\n    setDidMount(true);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CounterContainer, {\n    counter: counter,\n    children: [game_status.isStarted && counter > 0 && `00:${counter.toFixed()}`, /*#__PURE__*/_jsxDEV(\"span\", {\n      children: game_status.isStarted && counter > 0 && (counter > 10 ? `${counter.toFixed(3).replace(/\\d+\\./, \".\")} s` : `0${counter.toFixed(3).replace(/\\d+\\./, \".\")} s`)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n} // export default function MainCounter({is_game_started, is_game_loading}) {\n//   const [counter, setCounter] = useState(100)\n//   const [didMount, setDidMount] = useState(false)\n//   var startCounting\n//   useEffect(() => {\n//     startCounting = (didMount && is_game_started && !is_game_loading) && setInterval(() => {\n//         setCounter(counter => counter - 0.1)\n//       }, 100)\n//     return () => clearInterval(startCounting)\n//   }, [is_game_loading])                                          // merge reducer into obj\n//   useEffect(() => {\n//      if(!is_game_started) {\n//        console.log(startCounting)\n//       return () => clearInterval(startCounting)\n//      }\n//   }, [is_game_started])\n//   useEffect(() => {\n//     setDidMount(true)\n//   }, [])\n//   return (\n//     <CounterContainer>\n//       {counter.toFixed(3)}\n//     </CounterContainer>\n//   )\n// }","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/components/styled-components/MainCounter.js"],"names":["styled","useState","useEffect","CounterContainer","div","props","counter","MainCounter","game_status","endGame","setCounter","didMount","setDidMount","isStarted","startCounting","isLoading","setInterval","clearInterval","toFixed","replace"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,MAAMC,gBAAgB,GAAGH,MAAM,CAACI,GAAI;AACpC;AACA;AACA;AACA;AACA,IAAKC,KAAD,IAAWA,KAAK,CAACC,OAAN,GAAgB,EAAhB,IAAuB,mBAAmB;AACzD;AACA;AACA;AACA,CATA;AAWA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAArB,EAA+C;AAC5D,QAAM;AAAA,OAACH,OAAD;AAAA,OAAUI;AAAV,MAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACU,QAAD;AAAA,OAAWC;AAAX,MAA0BX,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,KAACM,WAAW,CAACK,SAAb,IAA0BH,UAAU,CAAC,EAAD,CAApC;AACA,UAAMI,aAAa,GACjBH,QAAQ,IACRH,WAAW,CAACK,SADZ,IAEA,CAACL,WAAW,CAACO,SAFb,IAGAC,WAAW,CAAC,MAAM;AAChBN,MAAAA,UAAU,CAAEJ,OAAD,IAAaA,OAAO,GAAG,GAAxB,CAAV;AACD,KAFU,EAER,GAFQ,CAJb;AAOA,WAAO,MAAMW,aAAa,CAACH,aAAD,CAA1B;AACD,GAVQ,EAUN,CAACN,WAAD,CAVM,CAAT;AAYAN,EAAAA,SAAS,CAAC,MAAMI,OAAO,IAAI,CAAX,IAAgBG,OAAO,EAA9B,EAAkC,CAACH,OAAD,CAAlC,CAAT;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEN,OAA3B;AAAA,eACGE,WAAW,CAACK,SAAZ,IAAyBP,OAAO,GAAG,CAAnC,IAAyC,MAAKA,OAAO,CAACY,OAAR,EAAkB,EADnE,eAEE;AAAA,gBACGV,WAAW,CAACK,SAAZ,IACCP,OAAO,GAAG,CADX,KAEEA,OAAO,GAAG,EAAV,GACI,GAAEA,OAAO,CAACY,OAAR,CAAgB,CAAhB,EAAmBC,OAAnB,CAA2B,OAA3B,EAAoC,GAApC,CAAyC,IAD/C,GAEI,IAAGb,OAAO,CAACY,OAAR,CAAgB,CAAhB,EAAmBC,OAAnB,CAA2B,OAA3B,EAAoC,GAApC,CAAyC,IAJlD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\n\nconst CounterContainer = styled.div`\n  text-transform: lowercase;\n  font-weight: 900;\n  font-size: 3rem;\n  display: inline-block;\n  ${(props) => props.counter < 10 && `color: var(--red)`};\n  & span {\n    font-size: 2rem;\n  }\n`;\n\nexport default function MainCounter({ game_status, endGame }) {\n  const [counter, setCounter] = useState(15);\n  const [didMount, setDidMount] = useState(false);\n\n  useEffect(() => {\n    !game_status.isStarted && setCounter(15);\n    const startCounting =\n      didMount &&\n      game_status.isStarted &&\n      !game_status.isLoading &&\n      setInterval(() => {\n        setCounter((counter) => counter - 0.1);\n      }, 100);\n    return () => clearInterval(startCounting);\n  }, [game_status]);\n\n  useEffect(() => counter <= 0 && endGame(), [counter]);\n\n  useEffect(() => {\n    setDidMount(true);\n  }, []);\n\n  return (\n    <CounterContainer counter={counter}>\n      {game_status.isStarted && counter > 0 && `00:${counter.toFixed()}`}\n      <span>\n        {game_status.isStarted &&\n          counter > 0 &&\n          (counter > 10\n            ? `${counter.toFixed(3).replace(/\\d+\\./, \".\")} s`\n            : `0${counter.toFixed(3).replace(/\\d+\\./, \".\")} s`)}\n      </span>\n    </CounterContainer>\n  );\n}\n\n// export default function MainCounter({is_game_started, is_game_loading}) {\n//   const [counter, setCounter] = useState(100)\n//   const [didMount, setDidMount] = useState(false)\n//   var startCounting\n//   useEffect(() => {\n//     startCounting = (didMount && is_game_started && !is_game_loading) && setInterval(() => {\n//         setCounter(counter => counter - 0.1)\n//       }, 100)\n//     return () => clearInterval(startCounting)\n//   }, [is_game_loading])                                          // merge reducer into obj\n\n//   useEffect(() => {\n//      if(!is_game_started) {\n//        console.log(startCounting)\n//       return () => clearInterval(startCounting)\n//      }\n//   }, [is_game_started])\n\n//   useEffect(() => {\n//     setDidMount(true)\n//   }, [])\n\n//   return (\n//     <CounterContainer>\n//       {counter.toFixed(3)}\n//     </CounterContainer>\n//   )\n// }\n"]},"metadata":{},"sourceType":"module"}