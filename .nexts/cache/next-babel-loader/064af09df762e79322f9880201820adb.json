{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { combineReducers } from \"redux\";\nimport * as actions from \"./actions\";\n\nvar game_status = function game_status() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return action.type === actions.START_GAME ? true : action.type === actions.STOP_GAME ? false : state;\n};\n\nvar random_game = function random_game() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return action.type === actions.GET_RANDOM_GAME ? action.game : state;\n}; // const user_score = (state = [], action) => action.type === actions.NEW_ANSWER ? [...state, action.answer] : state\n\n\nvar user_score = function user_score() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === actions.NEW_ANSWER) {\n    console.log([].concat(_toConsumableArray(state), [action.answer]));\n    return [].concat(_toConsumableArray(state), [action.answer]);\n  } else {\n    return state;\n  }\n};\n\nexport default combineReducers({\n  game_status: game_status,\n  random_game: random_game,\n  user_score: user_score\n}); // const game_database = [...source.results].map((game,i) => game = {\n//     id: game.id,\n//     title: game.name,\n//     screenshots: [\n//         ...game.short_screenshots.slice(0, 3).map(screenshot => screenshot.image)\n//     ],\n//     hints: {\n//         genre: game.genres[game.genres.length-1].name,\n//         year: game.released,\n//     }\n// })","map":{"version":3,"sources":["/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/redux/reducers.js"],"names":["combineReducers","actions","game_status","state","action","type","START_GAME","STOP_GAME","random_game","GET_RANDOM_GAME","game","user_score","NEW_ANSWER","console","log","answer"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,MAACC,KAAD,uEAAS,KAAT;AAAA,MAAgBC,MAAhB;AAAA,SAA2BA,MAAM,CAACC,IAAP,KAAgBJ,OAAO,CAACK,UAAxB,GAAqC,IAArC,GAA4CF,MAAM,CAACC,IAAP,KAAgBJ,OAAO,CAACM,SAAxB,GAAoC,KAApC,GAA4CJ,KAAnH;AAAA,CAApB;;AAEA,IAAMK,WAAW,GAAG,SAAdA,WAAc;AAAA,MAACL,KAAD,uEAAS,EAAT;AAAA,MAAaC,MAAb;AAAA,SAAwBA,MAAM,CAACC,IAAP,KAAgBJ,OAAO,CAACQ,eAAxB,GAA0CL,MAAM,CAACM,IAAjD,GAAwDP,KAAhF;AAAA,CAApB,C,CAEA;;;AAEA,IAAMQ,UAAU,GAAG,SAAbA,UAAa,GAAwB;AAAA,MAAvBR,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACvC,MAAGA,MAAM,CAACC,IAAP,KAAgBJ,OAAO,CAACW,UAA3B,EAAuC;AACnCC,IAAAA,OAAO,CAACC,GAAR,8BAAgBX,KAAhB,IAAuBC,MAAM,CAACW,MAA9B;AACA,wCAAWZ,KAAX,IAAkBC,MAAM,CAACW,MAAzB;AACH,GAHD,MAGO;AACH,WAAOZ,KAAP;AACH;AACJ,CAPD;;AASA,eAAeH,eAAe,CAAC;AAC7BE,EAAAA,WAAW,EAAXA,WAD6B;AAE7BM,EAAAA,WAAW,EAAXA,WAF6B;AAG7BG,EAAAA,UAAU,EAAVA;AAH6B,CAAD,CAA9B,C,CAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { combineReducers } from \"redux\"\nimport * as actions from \"./actions\"\n\n\n\n\nconst game_status = (state = false, action) => action.type === actions.START_GAME ? true : action.type === actions.STOP_GAME ? false : state\n\nconst random_game = (state = \"\", action) => action.type === actions.GET_RANDOM_GAME ? action.game : state\n\n// const user_score = (state = [], action) => action.type === actions.NEW_ANSWER ? [...state, action.answer] : state\n\nconst user_score = (state = [], action) => {\n    if(action.type === actions.NEW_ANSWER) {\n        console.log([...state, action.answer])\n        return [...state, action.answer]\n    } else {\n        return state\n    }\n}\n\nexport default combineReducers({\n  game_status,\n  random_game,\n  user_score,\n})\n\n\n\n\n\n\n\n\n\n// const game_database = [...source.results].map((game,i) => game = {\n//     id: game.id,\n//     title: game.name,\n//     screenshots: [\n//         ...game.short_screenshots.slice(0, 3).map(screenshot => screenshot.image)\n//     ],\n//     hints: {\n//         genre: game.genres[game.genres.length-1].name,\n//         year: game.released,\n//     }\n// })"]},"metadata":{},"sourceType":"module"}