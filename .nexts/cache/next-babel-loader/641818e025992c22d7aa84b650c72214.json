{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/cerassus/Websites/gamergeek-nextjs/components/styled-components/MainCounter.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  text-transform: lowercase;\\n  font-weight: 900;\\n  font-size: 3rem;\\n  display: inline-block;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\nvar CounterContainer = styled.div(_templateObject());\n_c = CounterContainer;\nexport default function MainCounter(_ref) {\n  _s();\n\n  var is_game_started = _ref.is_game_started,\n      is_game_loading = _ref.is_game_loading;\n\n  var _useState = useState(100),\n      counter = _useState[0],\n      setCounter = _useState[1];\n\n  var _useState2 = useState(false),\n      didMount = _useState2[0],\n      setDidMount = _useState2[1];\n\n  var _useState3 = useState(false),\n      startCounting = _useState3[0],\n      setStartCounting = _useState3[1];\n\n  useEffect(function () {\n    setStartCounting(didMount && is_game_started && !is_game_loading && setInterval(function () {\n      setCounter(function (counter) {\n        return counter - 0.1;\n      });\n    }, 100));\n    return function () {\n      return clearInterval(startCounting);\n    };\n  }, [is_game_loading]);\n  useEffect(function () {\n    if (!is_game_started) {\n      console.log(startCounting);\n      return function () {\n        return clearInterval(startCounting);\n      };\n    }\n  }, [is_game_started]);\n  useEffect(function () {\n    setDidMount(true);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CounterContainer, {\n    children: counter.toFixed(3)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainCounter, \"+HIYlEwmc7ZGGWgey8W8ygchSig=\");\n\n_c2 = MainCounter;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CounterContainer\");\n$RefreshReg$(_c2, \"MainCounter\");","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/components/styled-components/MainCounter.js"],"names":["styled","useState","useEffect","CounterContainer","div","MainCounter","is_game_started","is_game_loading","counter","setCounter","didMount","setDidMount","startCounting","setStartCounting","setInterval","clearInterval","console","log","toFixed"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAGA,IAAMC,gBAAgB,GAAGH,MAAM,CAACI,GAAV,mBAAtB;KAAMD,gB;AAQN,eAAe,SAASE,WAAT,OAAyD;AAAA;;AAAA,MAAnCC,eAAmC,QAAnCA,eAAmC;AAAA,MAAlBC,eAAkB,QAAlBA,eAAkB;;AAAA,kBACxCN,QAAQ,CAAC,GAAD,CADgC;AAAA,MAC/DO,OAD+D;AAAA,MACtDC,UADsD;;AAAA,mBAEtCR,QAAQ,CAAC,KAAD,CAF8B;AAAA,MAE/DS,QAF+D;AAAA,MAErDC,WAFqD;;AAAA,mBAG5BV,QAAQ,CAAC,KAAD,CAHoB;AAAA,MAG/DW,aAH+D;AAAA,MAGhDC,gBAHgD;;AAItEX,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,gBAAgB,CAAEH,QAAQ,IAAIJ,eAAZ,IAA+B,CAACC,eAAjC,IAAqDO,WAAW,CAAC,YAAM;AACpFL,MAAAA,UAAU,CAAC,UAAAD,OAAO;AAAA,eAAIA,OAAO,GAAG,GAAd;AAAA,OAAR,CAAV;AACD,KAF8E,EAE5E,GAF4E,CAAjE,CAAhB;AAGA,WAAO;AAAA,aAAMO,aAAa,CAACH,aAAD,CAAnB;AAAA,KAAP;AACD,GALQ,EAKN,CAACL,eAAD,CALM,CAAT;AAOAL,EAAAA,SAAS,CAAC,YAAM;AACb,QAAG,CAACI,eAAJ,EAAqB;AACnBU,MAAAA,OAAO,CAACC,GAAR,CAAYL,aAAZ;AACD,aAAO;AAAA,eAAMG,aAAa,CAACH,aAAD,CAAnB;AAAA,OAAP;AACA;AACH,GALQ,EAKN,CAACN,eAAD,CALM,CAAT;AAOAJ,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,gBAAD;AAAA,cACGH,OAAO,CAACU,OAAR,CAAgB,CAAhB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA3BuBb,W;;MAAAA,W","sourcesContent":["import styled from \"styled-components\";\nimport { useState, useEffect } from \"react\"\n\n\nconst CounterContainer = styled.div`\n  text-transform: lowercase;\n  font-weight: 900;\n  font-size: 3rem;\n  display: inline-block;\n`;\n\n\nexport default function MainCounter({is_game_started, is_game_loading}) {\n  const [counter, setCounter] = useState(100)\n  const [didMount, setDidMount] = useState(false)\n  const [startCounting, setStartCounting] = useState(false)\n  useEffect(() => {\n    setStartCounting((didMount && is_game_started && !is_game_loading) && setInterval(() => {\n        setCounter(counter => counter - 0.1)\n      }, 100))\n    return () => clearInterval(startCounting)\n  }, [is_game_loading])\n\n  useEffect(() => {\n     if(!is_game_started) {\n       console.log(startCounting)\n      return () => clearInterval(startCounting)\n     } \n  }, [is_game_started])\n\n  useEffect(() => {\n    setDidMount(true)\n  }, [])\n\n  return (\n    <CounterContainer>\n      {counter.toFixed(3)}\n    </CounterContainer>\n  )\n}"]},"metadata":{},"sourceType":"module"}