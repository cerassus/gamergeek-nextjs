{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/components/main/challenge/Table.js\";\nimport Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\nimport React from \"react\";\nimport { pickRandomGame } from \"../../../global/fetch\";\nimport { game_database } from \"../../../global/const\";\nimport moment from 'moment';\nconst game_difficulty = [\"easy\", \"medium\", \"hard\"];\nexport default function TableComponent({\n  game_status,\n  random_game,\n  startGame,\n  pauseGame,\n  endGame,\n  showRandomGame,\n  pushNewAnswer\n}) {\n  const [difficultyChoicePanel, showDifficultyChoicePanel] = React.useState(false);\n\n  const stop = () => {\n    showDifficultyChoicePanel(false);\n    endGame();\n  };\n\n  const start = async difficulty => {\n    pauseGame();\n    showRandomGame(await pickRandomGame(game_database));\n    difficulty && startGame(difficulty);\n    startCounting = moment().format();\n    console.log('start ', stopCounting);\n  };\n\n  const checkAnswer = async answer => {\n    const elomelo = moment().format();\n    console.log('end ', elomelo);\n    const user_answer = answer === random_game.name ? {\n      title: random_game.name,\n      time: elomelo,\n      score: 2000,\n      correct: true,\n      startCounting,\n      stopCounting\n    } : {\n      title: random_game.name,\n      time: 0,\n      score: 0,\n      correct: false\n    };\n    pushNewAnswer(user_answer);\n    start();\n  };\n\n  React.useEffect(() => {\n    console.log('game status chenged');\n  }, [game_status]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      top: true,\n      children: [game_status.isRunning && !game_status.isLoading && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          href: \"/\",\n          children: \"get a hint\"\n        }, \"key0011\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          onClick: () => checkAnswer(false),\n          children: \"skip\"\n        }, \"key0012\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          onClick: stop,\n          children: \"quit\"\n        }, \"key0013\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), !game_status.isRunning && difficultyChoicePanel && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          children: [\"set difficulty:\", \" \"]\n        }, \"key0014\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), game_difficulty.map((diffe, i) => /*#__PURE__*/_jsxDEV(Typography, {\n          link: true,\n          onClick: () => start({\n            i\n          }),\n          children: diffe\n        }, \"key0011\" + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true), !game_status.isRunning && !difficultyChoicePanel && /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        onClick: () => showDifficultyChoicePanel(true),\n        children: \"start a new challenge\"\n      }, \"key0015\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 64\n      }, this), game_status.isLoading && /*#__PURE__*/_jsxDEV(Typography, {\n        link: true,\n        children: \"loading\"\n      }, 'key0016', false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      bottom: true,\n      children: game_status.isRunning && !game_status.isLoading && random_game.answers ? random_game.answers.map((answer, i) => /*#__PURE__*/_jsxDEV(Typography, {\n        answer: true,\n        onClick: answer => checkAnswer(answer.target.innerText),\n        children: answer\n      }, \"key0021\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)) : ``\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/components/main/challenge/Table.js"],"names":["Table","Typography","React","pickRandomGame","game_database","moment","game_difficulty","TableComponent","game_status","random_game","startGame","pauseGame","endGame","showRandomGame","pushNewAnswer","difficultyChoicePanel","showDifficultyChoicePanel","useState","stop","start","difficulty","startCounting","format","console","log","stopCounting","checkAnswer","answer","elomelo","user_answer","name","title","time","score","correct","useEffect","isRunning","isLoading","map","diffe","i","answers","target","innerText"],"mappings":"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","sourcesContent":["import Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\nimport React from \"react\";\nimport { pickRandomGame } from \"../../../global/fetch\";\nimport { game_database } from \"../../../global/const\";\nimport moment from 'moment'\n\nconst game_difficulty = [\"easy\", \"medium\", \"hard\"];\n\nexport default function TableComponent({\n  game_status,\n  random_game,\n  startGame,\n  pauseGame,\n  endGame,\n  showRandomGame,\n  pushNewAnswer\n}) {\n  const [difficultyChoicePanel, showDifficultyChoicePanel] = React.useState(false)\n  const stop = () => {\n    showDifficultyChoicePanel(false)\n    endGame()\n  };\n  const start = async (difficulty) => {\n    pauseGame()\n    showRandomGame(await pickRandomGame(game_database))\n    difficulty && startGame(difficulty)\n    startCounting = moment().format()\n    console.log('start ', stopCounting )\n  };\n  const checkAnswer = async (answer) => {\n    const elomelo = moment().format()\n    console.log('end ', elomelo)\n    const user_answer =\n      answer === random_game.name\n        ? {\n            title: random_game.name,\n            time: elomelo,\n            score: 2000,\n            correct: true,\n            startCounting,\n            stopCounting,\n          }\n        : {\n            title: random_game.name,\n            time: 0,\n            score: 0,\n            correct: false,\n          };\n    pushNewAnswer(user_answer)\n    start()\n  }\n  React.useEffect(() => {\n    console.log('game status chenged')\n  }, [game_status])\n  return (\n    <>\n      <Table top>\n        {(game_status.isRunning && !game_status.isLoading) && (\n          <>\n            <Typography key={\"key0011\"} link href=\"/\">get a hint</Typography>\n            <Typography key={\"key0012\"} link onClick={() => checkAnswer(false)}>skip</Typography>\n            <Typography key={\"key0013\"} link onClick={stop}>quit</Typography>\n          </>\n        )}\n        \n        {(!game_status.isRunning && difficultyChoicePanel) && (\n          <>\n            <Typography key={\"key0014\"} link>set difficulty:{\" \"}</Typography>\n            {game_difficulty.map((diffe, i) => (\n            <Typography key={\"key0011\"+i} link onClick={() => start({i})}>{diffe}</Typography>))}\n          </>\n        )}\n        \n        {(!game_status.isRunning && !difficultyChoicePanel) && <Typography key={\"key0015\"} link onClick={() => showDifficultyChoicePanel(true)}>start a new challenge</Typography>}\n        \n        {game_status.isLoading && <Typography key={'key0016'} link>loading</Typography>}\n      </Table>\n      <Table bottom>\n        {(game_status.isRunning && !game_status.isLoading && random_game.answers) ?\n        random_game.answers.map((answer, i) => (\n        <Typography key={\"key0021\"+i} answer onClick={(answer) => checkAnswer(answer.target.innerText)}>{answer}</Typography>))\n        : ``}\n      </Table>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}