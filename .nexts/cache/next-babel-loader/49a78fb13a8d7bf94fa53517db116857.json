{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from \"redux\";\nimport moment from 'moment';\nimport * as actions from \"./actions\";\nvar game_status_initial = {\n  isStarted: false,\n  isRunning: false,\n  isLoading: false\n};\n\nvar random_game = function random_game() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return action.type === actions.SHOW_RANDOM_GAME ? action.game : state;\n};\n\nvar game_status = function game_status() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : game_status_initial;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.START_GAME:\n      return {\n        isStarted: true,\n        isRunning: true,\n        isLoading: false\n      };\n\n    case actions.LOAD_NEW_GAME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isRunning: false,\n        isLoading: true\n      });\n\n    case actions.END_GAME:\n      return game_status_initial;\n\n    default:\n      return state;\n  }\n}; // const user_score = (state = [], action) => action.type === actions.NEW_ANSWER ? [...state, action.answer] : state\n\n\nvar user_score = function user_score() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === actions.NEW_ANSWER) {\n    console.log([].concat(_toConsumableArray(state), [action.answer]));\n    return [].concat(_toConsumableArray(state), [action.answer]);\n  } else {\n    return state;\n  }\n};\n\nvar hint = function hint() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.SHOW_HINT:\n      return actions.hints;\n\n    case actions.HIDE_HINT:\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nvar main_counter = function main_counter() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 60;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.COUNTDOWN:\n      return state - 1;\n\n    case actions.END_GAME:\n      return 60;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  game_status: game_status,\n  random_game: random_game,\n  user_score: user_score,\n  main_counter: main_counter,\n  hint: hint\n});","map":{"version":3,"sources":["/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/redux/reducers.js"],"names":["combineReducers","moment","actions","game_status_initial","isStarted","isRunning","isLoading","random_game","state","action","type","SHOW_RANDOM_GAME","game","game_status","START_GAME","LOAD_NEW_GAME","END_GAME","user_score","NEW_ANSWER","console","log","answer","hint","SHOW_HINT","hints","HIDE_HINT","main_counter","COUNTDOWN"],"mappings":";;;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AAEA,IAAMC,mBAAmB,GAAG;AACxBC,EAAAA,SAAS,EAAE,KADa;AAExBC,EAAAA,SAAS,EAAE,KAFa;AAGxBC,EAAAA,SAAS,EAAE;AAHa,CAA5B;;AAMA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,MAACC,KAAD,uEAAS,EAAT;AAAA,MAAaC,MAAb;AAAA,SAAwBA,MAAM,CAACC,IAAP,KAAgBR,OAAO,CAACS,gBAAxB,GAA2CF,MAAM,CAACG,IAAlD,GAAyDJ,KAAjF;AAAA,CAApB;;AAEA,IAAMK,WAAW,GAAG,SAAdA,WAAc,GAAyC;AAAA,MAAxCL,KAAwC,uEAAhCL,mBAAgC;AAAA,MAAXM,MAAW;;AACzD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,OAAO,CAACY,UAAb;AAAyB,aAAO;AACxBV,QAAAA,SAAS,EAAE,IADa;AAExBC,QAAAA,SAAS,EAAE,IAFa;AAGxBC,QAAAA,SAAS,EAAE;AAHa,OAAP;;AAKzB,SAAKJ,OAAO,CAACa,aAAb;AAA4B,6CACjBP,KADiB;AAEpBH,QAAAA,SAAS,EAAE,KAFS;AAGpBC,QAAAA,SAAS,EAAE;AAHS;;AAK5B,SAAKJ,OAAO,CAACc,QAAb;AAAuB,aAAOb,mBAAP;;AACvB;AAAS,aAAOK,KAAP;AAZb;AAcH,CAfD,C,CAiBA;;;AAEA,IAAMS,UAAU,GAAG,SAAbA,UAAa,GAAwB;AAAA,MAAvBT,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACvC,MAAGA,MAAM,CAACC,IAAP,KAAgBR,OAAO,CAACgB,UAA3B,EAAuC;AACnCC,IAAAA,OAAO,CAACC,GAAR,8BAAgBZ,KAAhB,IAAuBC,MAAM,CAACY,MAA9B;AACA,wCAAWb,KAAX,IAAkBC,MAAM,CAACY,MAAzB;AACH,GAHD,MAGO;AACH,WAAOb,KAAP;AACH;AACJ,CAPD;;AASA,IAAMc,IAAI,GAAG,SAAPA,IAAO,GAA2B;AAAA,MAA1Bd,KAA0B,uEAAlB,KAAkB;AAAA,MAAXC,MAAW;;AACpC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,OAAO,CAACqB,SAAb;AAAwB,aAAOrB,OAAO,CAACsB,KAAf;;AACxB,SAAKtB,OAAO,CAACuB,SAAb;AAAwB,aAAO,KAAP;;AACxB;AAAS,aAAOjB,KAAP;AAHb;AAKH,CAND;;AAWA,IAAMkB,YAAY,GAAG,SAAfA,YAAe,GAAwB;AAAA,MAAvBlB,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACzC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,OAAO,CAACyB,SAAb;AAAwB,aAAOnB,KAAK,GAAG,CAAf;;AACxB,SAAKN,OAAO,CAACc,QAAb;AAAuB,aAAO,EAAP;;AACvB;AAAS,aAAOR,KAAP;AAHb;AAKH,CAND;;AASA,eAAeR,eAAe,CAAC;AAC7Ba,EAAAA,WAAW,EAAXA,WAD6B;AAE7BN,EAAAA,WAAW,EAAXA,WAF6B;AAG7BU,EAAAA,UAAU,EAAVA,UAH6B;AAI7BS,EAAAA,YAAY,EAAZA,YAJ6B;AAK7BJ,EAAAA,IAAI,EAAJA;AAL6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from \"redux\"\nimport moment from 'moment'\nimport * as actions from \"./actions\"\n\nconst game_status_initial = {\n    isStarted: false,\n    isRunning: false,\n    isLoading: false,\n}\n\nconst random_game = (state = \"\", action) => action.type === actions.SHOW_RANDOM_GAME ? action.game : state\n\nconst game_status = (state = game_status_initial, action) => {\n    switch(action.type) {\n        case actions.START_GAME: return { \n                isStarted: true,\n                isRunning: true,\n                isLoading: false,\n            }\n        case actions.LOAD_NEW_GAME: return { \n                ...state,\n                isRunning: false,\n                isLoading: true,\n            }\n        case actions.END_GAME: return game_status_initial\n        default: return state\n    }\n}\n\n// const user_score = (state = [], action) => action.type === actions.NEW_ANSWER ? [...state, action.answer] : state\n\nconst user_score = (state = [], action) => {\n    if(action.type === actions.NEW_ANSWER) {\n        console.log([...state, action.answer])\n        return [...state, action.answer]\n    } else {\n        return state\n    }\n}\n\nconst hint = (state = false, action) => {\n    switch(action.type) {\n        case actions.SHOW_HINT: return actions.hints\n        case actions.HIDE_HINT: return false\n        default: return state\n    }\n}\n\n\n\n\nconst main_counter = (state = 60, action) => {\n    switch(action.type) {\n        case actions.COUNTDOWN: return state - 1\n        case actions.END_GAME: return 60\n        default: return state\n    }\n}\n\n\nexport default combineReducers({\n  game_status,\n  random_game,\n  user_score,\n  main_counter,\n  hint,\n})"]},"metadata":{},"sourceType":"module"}