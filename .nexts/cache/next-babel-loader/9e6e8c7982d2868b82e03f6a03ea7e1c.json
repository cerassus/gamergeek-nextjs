{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { combineReducers } from \"redux\";\nimport * as actions from \"./actions\";\n\nconst game_database = (state = [], action) => {\n  switch (action.type) {\n    case actions.NEW_GAME_DATABASE:\n      return action.database;\n\n    case actions.REMOVE_ITEM:\n      return [...state.filter((x, i) => i !== action.index && x)];\n\n    case actions.END_GAME:\n      return [];\n\n    default:\n      return state;\n  }\n};\n\nconst random_game = (state = \"\", action) => {\n  switch (action.type) {\n    case actions.SHOW_RANDOM_GAME:\n      return action.game;\n    // case actions.START_LOADING: return \"\"\n\n    case actions.END_GAME:\n      return \"\";\n\n    default:\n      return state;\n  }\n};\n\nconst user_score = (state = [], action) => {\n  switch (action.type) {\n    case actions.NEW_ANSWER:\n      {\n        console.log([...state, action.answer]);\n        return [...state, action.answer];\n      }\n\n    case actions.CLEAR_USER_SCORE:\n      return [];\n\n    default:\n      return state;\n  }\n};\n\nconst hints_array = (state = [], action) => {\n  switch (action.type) {\n    case actions.SHOW_HINT:\n      {\n        console.log([...state, action.hint]);\n        return [...state, action.hint];\n      }\n\n    case actions.START_LOADING:\n    case actions.END_GAME:\n      return [];\n\n    default:\n      return state;\n  }\n};\n\nconst show_popup = (state = false, action) => action.type === actions.CHANGE_POPUP ? action.popup : state;\n\nconst hint_counter = (state = false, action) => {\n  switch (action.type) {\n    case actions.SET_HINT_COUNTER:\n      return state + 1;\n\n    case actions.START_LOADING:\n    case actions.END_GAME:\n      return 0;\n\n    default:\n      return state;\n  }\n};\n\nconst game_status = (state = {\n  isStarted: false,\n  isLoading: false\n}, action) => {\n  switch (action.type) {\n    case actions.START_GAME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isStarted: true\n      });\n\n    case actions.START_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: true\n      });\n\n    case actions.RESUME_GAME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false\n      });\n\n    case actions.END_GAME:\n      return {\n        isLoading: false,\n        isStarted: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  random_game,\n  user_score,\n  hints_array,\n  game_status,\n  game_database,\n  show_popup,\n  hint_counter\n});","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/redux/reducers.js"],"names":["combineReducers","actions","game_database","state","action","type","NEW_GAME_DATABASE","database","REMOVE_ITEM","filter","x","i","index","END_GAME","random_game","SHOW_RANDOM_GAME","game","user_score","NEW_ANSWER","console","log","answer","CLEAR_USER_SCORE","hints_array","SHOW_HINT","hint","START_LOADING","show_popup","CHANGE_POPUP","popup","hint_counter","SET_HINT_COUNTER","game_status","isStarted","isLoading","START_GAME","RESUME_GAME"],"mappings":"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","sourcesContent":["import { combineReducers } from \"redux\"\nimport * as actions from \"./actions\"\n\n\nconst game_database = (state = [], action) => {\n    switch(action.type) {\n        case actions.NEW_GAME_DATABASE: return action.database \n        case actions.REMOVE_ITEM: return ([\n            ...state.filter((x,i) => i !== action.index && x)\n          ])\n        case actions.END_GAME: return []\n        default: return state\n    } \n}\n\nconst random_game = (state = \"\", action) => {\n    switch(action.type) {\n        case actions.SHOW_RANDOM_GAME: return action.game \n       // case actions.START_LOADING: return \"\"\n        case actions.END_GAME: return \"\"\n        default: return state\n    }\n}\n    \nconst user_score = (state = [], action) => {\n    switch(action.type) {\n        case actions.NEW_ANSWER: {\n            console.log([...state, action.answer])\n            return [...state, action.answer]\n        } \n        case actions.CLEAR_USER_SCORE: return []\n        default: return state\n    }\n}\n\nconst hints_array = (state = [], action) => {\n    switch(action.type) {\n        case actions.SHOW_HINT: {\n            console.log([...state, action.hint])\n            return [...state, action.hint]\n        }\n        case actions.START_LOADING:\n        case actions.END_GAME: return []\n        default: return state\n    }\n}\n\nconst show_popup = (state = false, action) => action.type === actions.CHANGE_POPUP \n    ? action.popup \n    : state\n\nconst hint_counter = (state = false, action) => {\n    switch(action.type) {\n        case actions.SET_HINT_COUNTER: return state + 1\n        case actions.START_LOADING: \n        case actions.END_GAME: return 0\n        default: return state\n    }\n}\n\nconst game_status = (state = { isStarted: false, isLoading: false }, action) => {\n    switch(action.type) {\n        case actions.START_GAME: return {\n            ...state,\n            isStarted: true,\n        }\n        case actions.START_LOADING: return {\n            ...state,\n            isLoading: true,\n        }\n        case actions.RESUME_GAME: return {\n            ...state,\n            isLoading: false,\n        }\n        case actions.END_GAME: return {\n            isLoading: false,\n            isStarted: false,\n        }\n        default: return state\n    }\n}\n\n\nexport default combineReducers({\n  random_game,\n  user_score,\n  hints_array,\n  game_status,\n  game_database,\n  show_popup,\n  hint_counter, \n})"]},"metadata":{},"sourceType":"module"}