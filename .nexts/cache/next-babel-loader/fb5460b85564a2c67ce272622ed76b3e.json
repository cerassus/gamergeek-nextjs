{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/components/main/challenge/TableBottom.js\";\nimport Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\nexport default function TableBottom(_ref) {\n  var _this = this;\n\n  var random_game = _ref.random_game,\n      game_status = _ref.game_status;\n  return /*#__PURE__*/_jsxDEV(Table, {\n    bottom: true,\n    children: game_status && random_game.answers ? random_game.answers.map(function (answer, i) {\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        answer: true,\n        href: \"/\",\n        children: answer\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 48\n      }, _this);\n    }) : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = TableBottom;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableBottom\");","map":{"version":3,"sources":["/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/components/main/challenge/TableBottom.js"],"names":["Table","Typography","TableBottom","random_game","game_status","answers","map","answer","i"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,+BAAlB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AAEA,eAAe,SAASC,WAAT,OAAiD;AAAA;;AAAA,MAA3BC,WAA2B,QAA3BA,WAA2B;AAAA,MAAdC,WAAc,QAAdA,WAAc;AAC9D,sBACE,QAAC,KAAD;AAAO,IAAA,MAAM,MAAb;AAAA,cACIA,WAAW,IAAID,WAAW,CAACE,OAA5B,GACCF,WAAW,CAACE,OAAZ,CAAoBC,GAApB,CAAwB,UAACC,MAAD,EAASC,CAAT;AAAA,0BAAe,QAAC,UAAD;AAAoB,QAAA,MAAM,MAA1B;AAA2B,QAAA,IAAI,EAAC,GAAhC;AAAA,kBAAqCD;AAArC,SAAiBC,CAAjB;AAAA;AAAA;AAAA;AAAA,eAAf;AAAA,KAAxB,CADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;KARuBN,W","sourcesContent":["import Table from \"../../styled-components/Table\";\nimport Typography from \"../../styled-components/Typography\";\n\nexport default function TableBottom({random_game, game_status}) {\n  return (\n    <Table bottom>\n      {(game_status && random_game.answers) ? (\n        random_game.answers.map((answer, i) => <Typography key={i} answer href=\"/\">{answer}</Typography>)\n      ) : ``}\n    </Table>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}