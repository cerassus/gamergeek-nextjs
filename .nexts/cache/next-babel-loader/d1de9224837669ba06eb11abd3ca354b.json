{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/ScreenshotViewer.js\",\n    _s = $RefreshSig$();\n\nimport Container from \"../../styled-components/Container\";\nimport Screenshot from \"../../../containers/Screenshot\";\nimport ScreenshotArrow from \"../../styled-components/ScreenshotArrow\";\nimport React from \"react\";\nexport default function ScreenshotViewer(_ref) {\n  _s();\n\n  var random_game = _ref.random_game,\n      game_status = _ref.game_status;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      screenshotIndex = _React$useState2[0],\n      setIndex = _React$useState2[1];\n\n  var previousClick = function previousClick() {\n    return screenshotIndex === 0 ? setIndex(2) : setIndex(screenshotIndex - 1);\n  };\n\n  var nextClick = function nextClick() {\n    return screenshotIndex === 2 ? setIndex(0) : setIndex(screenshotIndex + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    type: \"standard\",\n    width: \"min(95rem, 95%)\",\n    flex: true,\n    children: [game_status.isStarted && /*#__PURE__*/_jsxDEV(ScreenshotArrow, {\n      left: true,\n      onClick: previousClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(Screenshot, {\n      src: random_game && random_game.screenshots,\n      index: screenshotIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), game_status.isStarted && /*#__PURE__*/_jsxDEV(ScreenshotArrow, {\n      right: true,\n      onClick: nextClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ScreenshotViewer, \"DavBHKANS0JH6YU0VJYzE4Kg28s=\");\n\n_c = ScreenshotViewer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScreenshotViewer\");","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/ScreenshotViewer.js"],"names":["Container","Screenshot","ScreenshotArrow","React","ScreenshotViewer","random_game","game_status","useState","screenshotIndex","setIndex","previousClick","nextClick","isStarted","screenshots"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,mCAAtB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,eAAP,MAA4B,yCAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,gBAAT,OAAwD;AAAA;;AAAA,MAA5BC,WAA4B,QAA5BA,WAA4B;AAAA,MAAfC,WAAe,QAAfA,WAAe;;AAAA,wBACjCH,KAAK,CAACI,QAAN,CAAe,CAAf,CADiC;AAAA;AAAA,MAC9DC,eAD8D;AAAA,MAC7CC,QAD6C;;AAErE,MAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,WAAMF,eAAe,KAAK,CAApB,GAAwBC,QAAQ,CAAC,CAAD,CAAhC,GAAsCA,QAAQ,CAACD,eAAe,GAAG,CAAnB,CAApD;AAAA,GAAtB;;AACA,MAAMG,SAAS,GAAG,SAAZA,SAAY;AAAA,WAAMH,eAAe,KAAK,CAApB,GAAwBC,QAAQ,CAAC,CAAD,CAAhC,GAAsCA,QAAQ,CAACD,eAAe,GAAG,CAAnB,CAApD;AAAA,GAAlB;;AACA,sBACE,QAAC,SAAD;AAAW,IAAA,IAAI,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC,iBAAjC;AAAmD,IAAA,IAAI,MAAvD;AAAA,eACKF,WAAW,CAACM,SAAZ,iBAAyB,QAAC,eAAD;AAAiB,MAAA,IAAI,MAArB;AAAsB,MAAA,OAAO,EAAEF;AAA/B;AAAA;AAAA;AAAA;AAAA,YAD9B,eAEI,QAAC,UAAD;AAAY,MAAA,GAAG,EAAEL,WAAW,IAAIA,WAAW,CAACQ,WAA5C;AAAyD,MAAA,KAAK,EAAEL;AAAhE;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKF,WAAW,CAACM,SAAZ,iBAAyB,QAAC,eAAD;AAAiB,MAAA,KAAK,MAAtB;AAAuB,MAAA,OAAO,EAAED;AAAhC;AAAA;AAAA;AAAA;AAAA,YAH9B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAXuBP,gB;;KAAAA,gB","sourcesContent":["import Container from \"../../styled-components/Container\"\nimport Screenshot from \"../../../containers/Screenshot\"\nimport ScreenshotArrow from \"../../styled-components/ScreenshotArrow\"\nimport React from \"react\"\n\nexport default function ScreenshotViewer({ random_game, game_status }) {\n  const [screenshotIndex, setIndex] = React.useState(0);\n  const previousClick = () => screenshotIndex === 0 ? setIndex(2) : setIndex(screenshotIndex - 1);\n  const nextClick = () => screenshotIndex === 2 ? setIndex(0) : setIndex(screenshotIndex + 1);\n  return (\n    <Container type=\"standard\" width=\"min(95rem, 95%)\" flex>\n        {game_status.isStarted && <ScreenshotArrow left onClick={previousClick} />}\n        <Screenshot src={random_game && random_game.screenshots} index={screenshotIndex} />\n        {game_status.isStarted && <ScreenshotArrow right onClick={nextClick} />}\n    </Container>\n  )\n}"]},"metadata":{},"sourceType":"module"}