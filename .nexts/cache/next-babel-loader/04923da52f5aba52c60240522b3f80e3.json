{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport * as actions from \"./actions\";\nimport { games as source } from \"../../../global/games\";\nconst initialState = [...source.results].map((game, i) => game = {\n  id: i + 1,\n  title: game.name,\n  screenshots: [...game.short_screenshots.slice(0, 3).map(screenshot => screenshot.image)],\n  hints: {\n    genre: game.genres[game.genres.length - 1].name,\n    year: game.released\n  }\n});\n\nconst games = (state = initialState, action) => action === actions.SELECT_GAME ? initialState : state;\n\nexport default combineReducers({\n  games\n});","map":{"version":3,"sources":["/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/redux/reducers.js"],"names":["combineReducers","actions","games","source","initialState","results","map","game","i","id","title","name","screenshots","short_screenshots","slice","screenshot","image","hints","genre","genres","length","year","released","state","action","SELECT_GAME"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AACA,SAASC,KAAK,IAAIC,MAAlB,QAAgC,uBAAhC;AAEA,MAAMC,YAAY,GAAG,CAAC,GAAGD,MAAM,CAACE,OAAX,EAAoBC,GAApB,CAAwB,CAACC,IAAD,EAAMC,CAAN,KAAYD,IAAI,GAAG;AAC5DE,EAAAA,EAAE,EAAED,CAAC,GAAC,CADsD;AAE5DE,EAAAA,KAAK,EAAEH,IAAI,CAACI,IAFgD;AAG5DC,EAAAA,WAAW,EAAE,CACT,GAAGL,IAAI,CAACM,iBAAL,CAAuBC,KAAvB,CAA6B,CAA7B,EAAgC,CAAhC,EAAmCR,GAAnC,CAAuCS,UAAU,IAAIA,UAAU,CAACC,KAAhE,CADM,CAH+C;AAM5DC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAEX,IAAI,CAACY,MAAL,CAAYZ,IAAI,CAACY,MAAL,CAAYC,MAAZ,GAAmB,CAA/B,EAAkCT,IADtC;AAEHU,IAAAA,IAAI,EAAEd,IAAI,CAACe;AAFR;AANqD,CAA3C,CAArB;;AAYA,MAAMpB,KAAK,GAAG,CAACqB,KAAK,GAAGnB,YAAT,EAAuBoB,MAAvB,KAAkCA,MAAM,KAAKvB,OAAO,CAACwB,WAAnB,GAAiCrB,YAAjC,GAAgDmB,KAAhG;;AAGA,eAAevB,eAAe,CAAC;AAC7BE,EAAAA;AAD6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from \"redux\"\nimport * as actions from \"./actions\"\nimport { games as source } from \"../../../global/games\"\n\nconst initialState = [...source.results].map((game,i) => game = {\n    id: i+1,\n    title: game.name,\n    screenshots: [\n        ...game.short_screenshots.slice(0, 3).map(screenshot => screenshot.image)\n    ],\n    hints: {\n        genre: game.genres[game.genres.length-1].name,\n        year: game.released,\n    }\n})\n\nconst games = (state = initialState, action) => action === actions.SELECT_GAME ? initialState : state\n\n\nexport default combineReducers({\n  games\n})"]},"metadata":{},"sourceType":"module"}