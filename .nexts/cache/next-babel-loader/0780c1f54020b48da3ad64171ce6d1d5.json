{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/cerassus/Websites/gamergeek-nextjs/pages/index.js\";\nimport Layout from \"../layout/Layout\";\nimport ScreenshotViewer from \"../containers/ScreenshotViewer\";\nimport Table from \"../containers/Table\";\nimport Popup from \"../components/styled-components/Popup\";\nimport { useState } from \"react\";\nexport default function HomePage() {\n  const {\n    0: game_prepare,\n    1: setGamePrepare\n  } = useState(false);\n  const {\n    0: game_summary,\n    1: setGameSummary\n  } = useState(false);\n  const {\n    0: difficulty,\n    1: setDifficulty\n  } = useState(false);\n  useEffect(() => {\n    !game_prepare && setDifficulty(false);\n  }, [game_prepare]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Layout, {\n      title: \"Challenge\",\n      children: [/*#__PURE__*/_jsxDEV(ScreenshotViewer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        popupStart: boolean => setGamePrepare(boolean),\n        difficultyFromPopup: difficulty\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this), game_prepare ? /*#__PURE__*/_jsxDEV(Popup, {\n      game_prepare: true,\n      difficulty: difficulty => setDifficulty(difficulty)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this) : game_summary && /*#__PURE__*/_jsxDEV(Popup, {\n      game_summary: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n} // Dodać counter czasu gry\n// Dodanie POPUPa z podsumowaniem gry, który pojawia się po upływie czasu lub po kliknięciu QUIT\n// HINTS animation\n// React.useEffect(() => {\n//   game_status.isStarted ? \n//   startTimer()\n//   : console.log('game over')\n// }, [game_status.isStarted])\n// React.useEffect(() => {\n//   game_status.isRunning ? console.log('running') : game_status.isLoading && console.log('loading') \n// }, [game_status.isRunning])","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/pages/index.js"],"names":["Layout","ScreenshotViewer","Table","Popup","useState","HomePage","game_prepare","setGamePrepare","game_summary","setGameSummary","difficulty","setDifficulty","useEffect","boolean"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,kBAAnB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,KAAP,MAAkB,uCAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAGA,eAAe,SAASC,QAAT,GAAoB;AACjC,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAiCH,QAAQ,CAAC,KAAD,CAA/C;AACA,QAAM;AAAA,OAACI,YAAD;AAAA,OAAeC;AAAf,MAAiCL,QAAQ,CAAC,KAAD,CAA/C;AACA,QAAM;AAAA,OAACM,UAAD;AAAA,OAAaC;AAAb,MAA8BP,QAAQ,CAAC,KAAD,CAA5C;AAEAQ,EAAAA,SAAS,CAAC,MAAM;AACd,KAACN,YAAD,IAAiBK,aAAa,CAAC,KAAD,CAA9B;AACD,GAFQ,EAEN,CAACL,YAAD,CAFM,CAAT;AAIA,sBACE;AAAA,4BACA,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAAA,8BACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,UAAU,EAAGO,OAAD,IAAaN,cAAc,CAACM,OAAD,CAA9C;AAAyD,QAAA,mBAAmB,EAAEH;AAA9E;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAKCJ,YAAY,gBACb,QAAC,KAAD;AAAO,MAAA,YAAY,MAAnB;AAAoB,MAAA,UAAU,EAAGI,UAAD,IAAgBC,aAAa,CAACD,UAAD;AAA7D;AAAA;AAAA;AAAA;AAAA,YADa,GAEbF,YAAY,iBAAI,QAAC,KAAD;AAAO,MAAA,YAAY;AAAnB;AAAA;AAAA;AAAA;AAAA,YAPhB;AAAA,kBADF;AAWD,C,CAGD;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Layout from \"../layout/Layout\"\nimport ScreenshotViewer from \"../containers/ScreenshotViewer\"\nimport Table from \"../containers/Table\"\nimport Popup from \"../components/styled-components/Popup\"\nimport { useState } from \"react\"\n\n\nexport default function HomePage() {\n  const [game_prepare, setGamePrepare] = useState(false)\n  const [game_summary, setGameSummary] = useState(false)\n  const [difficulty, setDifficulty] = useState(false)\n\n  useEffect(() => {\n    !game_prepare && setDifficulty(false)\n  }, [game_prepare])\n\n  return (\n    <>\n    <Layout title=\"Challenge\">\n        <ScreenshotViewer />\n        <Table popupStart={(boolean) => setGamePrepare(boolean)} difficultyFromPopup={difficulty}/>\n    </Layout>\n    {game_prepare ? \n    <Popup game_prepare difficulty={(difficulty) => setDifficulty(difficulty)} /> : \n    game_summary && <Popup game_summary />}\n    </>\n  )\n}\n\n\n// Dodać counter czasu gry\n// Dodanie POPUPa z podsumowaniem gry, który pojawia się po upływie czasu lub po kliknięciu QUIT\n// HINTS animation\n\n\n// React.useEffect(() => {\n//   game_status.isStarted ? \n//   startTimer()\n//   : console.log('game over')\n// }, [game_status.isStarted])\n// React.useEffect(() => {\n//   game_status.isRunning ? console.log('running') : game_status.isLoading && console.log('loading') \n// }, [game_status.isRunning])"]},"metadata":{},"sourceType":"module"}