{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { getGameDetails } from \"../global/fetchGameDetails\";\nimport store from \"./store\";\nexport var START_GAME = \"START_GAME\";\nexport var RESUME_GAME = \"RESUME_GAME\";\nexport var END_GAME = \"END_GAME\";\nexport var SHOW_RANDOM_GAME = \"SHOW_RANDOM_GAME\";\nexport var NEW_ANSWER = \"NEW_ANSWER\";\nexport var CLEAR_USER_SCORE = \"CLEAR_USER_SCORE\";\nexport var START_LOADING = \"START_LOADING\";\nexport var SHOW_HINT = \"SHOW_HINT\";\nexport var NEW_GAME_DATABASE = \"NEW_GAME_DATABASE\";\nexport var REMOVE_ITEM = \"REMOVE_ITEM\";\nexport var popup_to_show = \"popup_to_show\";\nexport var SET_HINT_COUNTER = \"SET_HINT_COUNTER\";\nexport var startGame = function startGame() {\n  return {\n    type: START_GAME\n  };\n};\nexport var resumeGame = function resumeGame() {\n  return {\n    type: RESUME_GAME\n  };\n};\nexport var endGame = function endGame() {\n  return {\n    type: END_GAME\n  };\n};\nexport var showRandomGame = function showRandomGame(game) {\n  return {\n    type: SHOW_RANDOM_GAME,\n    game: game\n  };\n};\nexport var pushNewAnswer = function pushNewAnswer(answer) {\n  return {\n    type: NEW_ANSWER,\n    answer: answer\n  };\n};\nexport var startLoading = function startLoading() {\n  return {\n    type: START_LOADING\n  };\n};\nexport var showHint = function showHint(hint) {\n  return {\n    type: SHOW_HINT,\n    hint: hint\n  };\n};\nexport var clearUserScore = function clearUserScore() {\n  return {\n    type: CLEAR_USER_SCORE\n  };\n};\nexport var newGameDatabase = function newGameDatabase(database) {\n  return {\n    type: NEW_GAME_DATABASE,\n    database: database\n  };\n};\nexport var removeItemFromDatabase = function removeItemFromDatabase(index) {\n  return {\n    type: REMOVE_ITEM,\n    index: index\n  };\n};\nexport var showPopup = function showPopup(popup) {\n  return {\n    type: popup_to_show,\n    popup: popup\n  };\n};\nexport var setHintCounter = function setHintCounter() {\n  return {\n    type: SET_HINT_COUNTER\n  };\n};\nexport function loadNewQuestion() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var game_database, randomIndex;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(store.getState().game_database);\n              game_database = store.getState().game_database;\n              randomIndex = Math.floor(Math.random() * game_database.length);\n\n              if (!(game_database === 0)) {\n                _context.next = 7;\n                break;\n              }\n\n              dispatch(endGame());\n              _context.next = 15;\n              break;\n\n            case 7:\n              _context.t0 = dispatch;\n              _context.t1 = showRandomGame;\n              _context.next = 11;\n              return getGameDetails(game_database[randomIndex]);\n\n            case 11:\n              _context.t2 = _context.sent;\n              _context.t3 = (0, _context.t1)(_context.t2);\n              (0, _context.t0)(_context.t3);\n              dispatch(removeItemFromDatabase(randomIndex));\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}\nexport function fetchNewGameDatabase(_x2) {\n  return _fetchNewGameDatabase.apply(this, arguments);\n}\n\nfunction _fetchNewGameDatabase() {\n  _fetchNewGameDatabase = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(difficulty) {\n    var database_array, page, i, apishot, data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            database_array = [];\n            page = 0;\n            _context2.t0 = difficulty;\n            _context2.next = _context2.t0 === 0 ? 5 : _context2.t0 === 1 ? 7 : _context2.t0 === 2 ? 9 : 11;\n            break;\n\n          case 5:\n            page = 1;\n            return _context2.abrupt(\"break\", 12);\n\n          case 7:\n            page = 4;\n            return _context2.abrupt(\"break\", 12);\n\n          case 9:\n            page = 7;\n            return _context2.abrupt(\"break\", 12);\n\n          case 11:\n            return _context2.abrupt(\"return\", []);\n\n          case 12:\n            i = 0;\n\n          case 13:\n            if (!(i < 3)) {\n              _context2.next = 31;\n              break;\n            }\n\n            _context2.prev = 14;\n            _context2.next = 17;\n            return fetch(\"https://api.rawg.io/api/games?page=\".concat(page + i, \"&page_size=40\"));\n\n          case 17:\n            apishot = _context2.sent;\n            _context2.next = 20;\n            return apishot.json();\n\n          case 20:\n            data = _context2.sent;\n            database_array.push(data.results.map(function (game) {\n              return game = game.id;\n            }));\n            _context2.next = 28;\n            break;\n\n          case 24:\n            _context2.prev = 24;\n            _context2.t1 = _context2[\"catch\"](14);\n            console.log(_context2.t1);\n            return _context2.abrupt(\"return\", []);\n\n          case 28:\n            i++;\n            _context2.next = 13;\n            break;\n\n          case 31:\n            console.log(database_array.flat());\n            return _context2.abrupt(\"return\", database_array.flat());\n\n          case 33:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[14, 24]]);\n  }));\n  return _fetchNewGameDatabase.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/redux/actions.js"],"names":["getGameDetails","store","START_GAME","RESUME_GAME","END_GAME","SHOW_RANDOM_GAME","NEW_ANSWER","CLEAR_USER_SCORE","START_LOADING","SHOW_HINT","NEW_GAME_DATABASE","REMOVE_ITEM","popup_to_show","SET_HINT_COUNTER","startGame","type","resumeGame","endGame","showRandomGame","game","pushNewAnswer","answer","startLoading","showHint","hint","clearUserScore","newGameDatabase","database","removeItemFromDatabase","index","showPopup","popup","setHintCounter","loadNewQuestion","dispatch","console","log","getState","game_database","randomIndex","Math","floor","random","length","fetchNewGameDatabase","difficulty","database_array","page","i","fetch","apishot","json","data","push","results","map","id","flat"],"mappings":"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","sourcesContent":["import { getGameDetails } from \"../global/fetchGameDetails\"\nimport store  from \"./store\"\n\nexport const START_GAME = \"START_GAME\";\nexport const RESUME_GAME = \"RESUME_GAME\";\nexport const END_GAME = \"END_GAME\";\nexport const SHOW_RANDOM_GAME = \"SHOW_RANDOM_GAME\";\nexport const NEW_ANSWER = \"NEW_ANSWER\";\nexport const CLEAR_USER_SCORE = \"CLEAR_USER_SCORE\";\nexport const START_LOADING = \"START_LOADING\";\nexport const SHOW_HINT = \"SHOW_HINT\";\nexport const NEW_GAME_DATABASE = \"NEW_GAME_DATABASE\";\nexport const REMOVE_ITEM = \"REMOVE_ITEM\";\nexport const popup_to_show = \"popup_to_show\";\nexport const SET_HINT_COUNTER = \"SET_HINT_COUNTER\";\n\nexport const startGame = () => ({\n    type: START_GAME,\n})\n\nexport const resumeGame = () => ({\n    type: RESUME_GAME,\n})\n\nexport const endGame = () => ({\n    type: END_GAME,\n})\n\nexport const showRandomGame = (game) => ({\n    type: SHOW_RANDOM_GAME,\n    game,\n})\n\nexport const pushNewAnswer = (answer) => ({\n    type: NEW_ANSWER,\n    answer,\n})\n\nexport const startLoading = () => ({\n    type: START_LOADING,\n})\n\nexport const showHint = (hint) => ({\n    type: SHOW_HINT,\n    hint,\n})\n\nexport const clearUserScore = () => ({\n    type: CLEAR_USER_SCORE,\n})\n\nexport const newGameDatabase = (database) => ({\n    type: NEW_GAME_DATABASE,\n    database,\n})\n\nexport const removeItemFromDatabase = (index) => ({\n    type: REMOVE_ITEM,\n    index,\n})\n\nexport const showPopup = (popup) => ({\n    type: popup_to_show,\n    popup,\n})\n\nexport const setHintCounter = () => ({\n    type: SET_HINT_COUNTER,\n})\n\nexport function loadNewQuestion() {\n    return async function(dispatch) {\n        console.log(store.getState().game_database)\n        const game_database = store.getState().game_database\n        const randomIndex = Math.floor(Math.random() * game_database.length)\n        if(game_database === 0) {\n          dispatch(endGame()) \n        } else {\n            dispatch(showRandomGame(await getGameDetails(game_database[randomIndex])))\n            dispatch(removeItemFromDatabase(randomIndex))\n        }\n    }\n}\n\nexport async function fetchNewGameDatabase(difficulty) {\n        const database_array = []\n        let page = 0\n        switch(difficulty) {\n            case 0: {page = 1; break;}\n            case 1: {page = 4; break;}\n            case 2: {page = 7; break;}\n            default: return []\n        }\n        for(let i=0; i<3; i++) {\n            try {\n                const apishot = await fetch(`https://api.rawg.io/api/games?page=${page+i}&page_size=40`)\n                const data = await apishot.json()\n                database_array.push(data.results.map(game => game = game.id))\n            }\n            catch(error) {\n                console.log(error)\n                return []\n            }\n        }\n        console.log(database_array.flat())\n        return database_array.flat()\n    }\n"]},"metadata":{},"sourceType":"module"}