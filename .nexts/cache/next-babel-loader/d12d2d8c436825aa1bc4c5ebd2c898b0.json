{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/containers/GameNavigatorBottom.js\",\n    _s = $RefreshSig$();\n\nimport Table from \"../../../styled-components/Table\";\nimport Typography from \"../../../styled-components/Typography\";\nimport { useState, useEffect } from \"react\";\nimport moment from 'moment';\nexport default function GameNavigatorBottom(_ref) {\n  _s();\n\n  var _this = this;\n\n  var game_is_started = _ref.game_is_started,\n      game_is_loading = _ref.game_is_loading,\n      hintCounter = _ref.hintCounter,\n      random_game = _ref.random_game,\n      pushNewAnswer = _ref.pushNewAnswer,\n      loadNewQuestion = _ref.loadNewQuestion,\n      startLoading = _ref.startLoading;\n\n  var _useState = useState(false),\n      answerTimeStart = _useState[0],\n      setAnswerTimeStart = _useState[1];\n\n  var checkAnswer = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(answer) {\n      var answerTimeEnd, user_answer;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              answerTimeEnd = moment();\n              user_answer = answer === random_game.name ? {\n                title: random_game.name,\n                time: answerTimeEnd.diff(answerTimeStart),\n                score: Number((1000 / answerTimeEnd.diff(answerTimeStart) * 10000 * ((10 - hintCounter) / 10)).toFixed()),\n                correct: true,\n                hints_used: hintCounter\n              } : {\n                title: random_game.name,\n                time: answerTimeEnd.diff(answerTimeStart),\n                score: 0,\n                correct: false,\n                hints_used: hintCounter\n              };\n              startLoading();\n              pushNewAnswer(user_answer);\n              loadNewQuestion();\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function checkAnswer(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    !game_is_loading && setAnswerTimeStart(moment());\n  }, [game_is_loading]);\n  return /*#__PURE__*/_jsxDEV(Table, {\n    bottom: true,\n    children: game_is_started && !game_is_loading && random_game.answers ? random_game.answers.map(function (answer, i) {\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        answer: true,\n        onClick: function onClick(answer) {\n          return checkAnswer(answer.target.innerText);\n        },\n        children: answer\n      }, \"key0021\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, _this);\n    }) : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GameNavigatorBottom, \"Et9suIU3Eb9bOF7ZzaFvv8bxLbw=\");\n\n_c = GameNavigatorBottom;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameNavigatorBottom\");","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/components/main/challenge/containers/GameNavigatorBottom.js"],"names":["Table","Typography","useState","useEffect","moment","GameNavigatorBottom","game_is_started","game_is_loading","hintCounter","random_game","pushNewAnswer","loadNewQuestion","startLoading","answerTimeStart","setAnswerTimeStart","checkAnswer","answer","answerTimeEnd","user_answer","name","title","time","diff","score","Number","toFixed","correct","hints_used","answers","map","i","target","innerText"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,kCAAlB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,eAAe,SAASC,mBAAT,OAOG;AAAA;;AAAA;;AAAA,MANhBC,eAMgB,QANhBA,eAMgB;AAAA,MALhBC,eAKgB,QALhBA,eAKgB;AAAA,MAJhBC,WAIgB,QAJhBA,WAIgB;AAAA,MAHhBC,WAGgB,QAHhBA,WAGgB;AAAA,MAFhBC,aAEgB,QAFhBA,aAEgB;AAAA,MADhBC,eACgB,QADhBA,eACgB;AAAA,MAAhBC,YAAgB,QAAhBA,YAAgB;;AAAA,kBAC8BV,QAAQ,CAAC,KAAD,CADtC;AAAA,MACTW,eADS;AAAA,MACQC,kBADR;;AAEhB,MAAMC,WAAW;AAAA,yEAAG,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,cAAAA,aADY,GACIb,MAAM,EADV;AAEZc,cAAAA,WAFY,GAEEF,MAAM,KAAKP,WAAW,CAACU,IAAvB,GACd;AACEC,gBAAAA,KAAK,EAAEX,WAAW,CAACU,IADrB;AAEEE,gBAAAA,IAAI,EAAEJ,aAAa,CAACK,IAAd,CAAmBT,eAAnB,CAFR;AAGEU,gBAAAA,KAAK,EAAEC,MAAM,CAAC,CAAC,OAAKP,aAAa,CAACK,IAAd,CAAmBT,eAAnB,CAAL,GAAyC,KAAzC,IAAgD,CAAC,KAAGL,WAAJ,IAAiB,EAAjE,CAAD,EAAuEiB,OAAvE,EAAD,CAHf;AAIEC,gBAAAA,OAAO,EAAE,IAJX;AAKEC,gBAAAA,UAAU,EAAEnB;AALd,eADc,GAQd;AACEY,gBAAAA,KAAK,EAAEX,WAAW,CAACU,IADrB;AAEEE,gBAAAA,IAAI,EAAEJ,aAAa,CAACK,IAAd,CAAmBT,eAAnB,CAFR;AAGEU,gBAAAA,KAAK,EAAE,CAHT;AAIEG,gBAAAA,OAAO,EAAE,KAJX;AAKEC,gBAAAA,UAAU,EAAEnB;AALd,eAVY;AAiBlBI,cAAAA,YAAY;AACZF,cAAAA,aAAa,CAACQ,WAAD,CAAb;AACAP,cAAAA,eAAe;;AAnBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXI,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAqBAZ,EAAAA,SAAS,CAAC,YAAM;AACd,KAACI,eAAD,IAAoBO,kBAAkB,CAACV,MAAM,EAAP,CAAtC;AACD,GAFQ,EAEN,CAACG,eAAD,CAFM,CAAT;AAGA,sBACE,QAAC,KAAD;AAAO,IAAA,MAAM,MAAb;AAAA,cACID,eAAe,IAAI,CAACC,eAApB,IAAuCE,WAAW,CAACmB,OAApD,GACGnB,WAAW,CAACmB,OAAZ,CAAoBC,GAApB,CAAwB,UAACb,MAAD,EAASc,CAAT;AAAA,0BACxB,QAAC,UAAD;AAEE,QAAA,MAAM,MAFR;AAGE,QAAA,OAAO,EAAE,iBAACd,MAAD;AAAA,iBAAYD,WAAW,CAACC,MAAM,CAACe,MAAP,CAAcC,SAAf,CAAvB;AAAA,SAHX;AAAA,kBAG8DhB;AAH9D,SACO,YAAUc,CADjB;AAAA;AAAA;AAAA;AAAA,eADwB;AAAA,KAAxB,CADH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA7CuBzB,mB;;KAAAA,mB","sourcesContent":["import Table from \"../../../styled-components/Table\";\nimport Typography from \"../../../styled-components/Typography\";\nimport { useState, useEffect } from \"react\";\nimport moment from 'moment'\n\nexport default function GameNavigatorBottom({\n  game_is_started, \n  game_is_loading, \n  hintCounter, \n  random_game, \n  pushNewAnswer,\n  loadNewQuestion,\n  startLoading }) {\n  const [answerTimeStart, setAnswerTimeStart] = useState(false)\n  const checkAnswer = async (answer) => {\n    const answerTimeEnd = moment()\n    const user_answer = answer === random_game.name\n        ? {\n            title: random_game.name,\n            time: answerTimeEnd.diff(answerTimeStart),\n            score: Number((1000/answerTimeEnd.diff(answerTimeStart)*10000*((10-hintCounter)/10)).toFixed()),\n            correct: true,\n            hints_used: hintCounter,\n          }\n        : {\n            title: random_game.name,\n            time: answerTimeEnd.diff(answerTimeStart),\n            score: 0,\n            correct: false,\n            hints_used: hintCounter,\n          };\n    startLoading()\n    pushNewAnswer(user_answer)\n    loadNewQuestion()\n  }\n  useEffect(() => {\n    !game_is_loading && setAnswerTimeStart(moment())\n  }, [game_is_loading])\n  return (\n    <Table bottom>\n      {(game_is_started && !game_is_loading && random_game.answers) \n        ? random_game.answers.map((answer, i) => (\n          <Typography \n            key={\"key0021\"+i} \n            answer \n            onClick={(answer) => checkAnswer(answer.target.innerText)}>{answer}\n          </Typography>))\n        : ``}\n    </Table>\n  )\n}"]},"metadata":{},"sourceType":"module"}