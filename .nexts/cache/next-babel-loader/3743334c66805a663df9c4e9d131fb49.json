{"ast":null,"code":"import { connect } from \"react-redux\";\nimport Popup from \"../components/main/challenge/containers/Popup\";\nimport { changePopup, loadNewQuestion, newGameDatabase, startGame, clearUserScore } from \"../redux/actions\";\n\nconst mapState = state => ({\n  game_database: state.game_database\n});\n\nconst mapDispatch = dispatch => ({\n  changePopup: popup_name => dispatch(changePopup(popup_name)),\n  startGame: () => dispatch(startGame()),\n  newGameDatabase: db => dispatch(newGameDatabase(db)),\n  loadNewQuestion: db => dispatch(loadNewQuestion(db)),\n  clearUserScore: () => dispatch(clearUserScore())\n});\n\nexport default connect(mapState, mapDispatch)(Popup);","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/redux_containers/Popup.js"],"names":["connect","Popup","changePopup","loadNewQuestion","newGameDatabase","startGame","clearUserScore","mapState","state","game_database","mapDispatch","dispatch","popup_name","db"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,+CAAlB;AACA,SACIC,WADJ,EAEIC,eAFJ,EAGIC,eAHJ,EAIIC,SAJJ,EAKIC,cALJ,QAMQ,kBANR;;AAQA,MAAMC,QAAQ,GAAGC,KAAK,KAAK;AACvBC,EAAAA,aAAa,EAAED,KAAK,CAACC;AADE,CAAL,CAAtB;;AAIA,MAAMC,WAAW,GAAGC,QAAQ,KAAK;AAC7BT,EAAAA,WAAW,EAAGU,UAAD,IAAgBD,QAAQ,CAACT,WAAW,CAACU,UAAD,CAAZ,CADR;AAE7BP,EAAAA,SAAS,EAAE,MAAMM,QAAQ,CAACN,SAAS,EAAV,CAFI;AAG7BD,EAAAA,eAAe,EAAGS,EAAD,IAAQF,QAAQ,CAACP,eAAe,CAACS,EAAD,CAAhB,CAHJ;AAI7BV,EAAAA,eAAe,EAAGU,EAAD,IAAQF,QAAQ,CAACR,eAAe,CAACU,EAAD,CAAhB,CAJJ;AAK7BP,EAAAA,cAAc,EAAE,MAAMK,QAAQ,CAACL,cAAc,EAAf;AALD,CAAL,CAA5B;;AAQA,eAAeN,OAAO,CAACO,QAAD,EAAWG,WAAX,CAAP,CAA+BT,KAA/B,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport Popup from \"../components/main/challenge/containers/Popup\"\nimport { \n    changePopup, \n    loadNewQuestion, \n    newGameDatabase,\n    startGame,\n    clearUserScore\n } from \"../redux/actions\"\n\nconst mapState = state => ({\n    game_database: state.game_database,\n  })\n\nconst mapDispatch = dispatch => ({\n    changePopup: (popup_name) => dispatch(changePopup(popup_name)),\n    startGame: () => dispatch(startGame()),\n    newGameDatabase: (db) => dispatch(newGameDatabase(db)),\n    loadNewQuestion: (db) => dispatch(loadNewQuestion(db)),\n    clearUserScore: () => dispatch(clearUserScore()),\n})\n\nexport default connect(mapState, mapDispatch)(Popup);\n"]},"metadata":{},"sourceType":"module"}