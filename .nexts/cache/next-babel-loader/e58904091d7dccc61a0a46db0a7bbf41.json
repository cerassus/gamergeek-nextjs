{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { combineReducers } from \"redux\";\nimport * as actions from \"./actions\";\nimport { games as source } from \"../global/games\";\nimport { pickRandomGame } from \"../global/fetch\";\n\nvar game_database = _toConsumableArray(source.results).map(function (game) {\n  return game = {\n    id: game.id\n  };\n});\n\nconsole.log(game_database);\n\nvar game_status = function game_status() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return action.type === actions.START_GAME ? true : action.type === actions.STOP_GAME ? false : state;\n};\n\nvar random_game = function random_game() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.START_GAME:\n    case actions.GENERATE_GAME:\n      {\n        return pickRandomGame(game_database);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  game_status: game_status,\n  random_game: random_game\n}); // const game_database = [...source.results].map((game,i) => game = {\n//     id: game.id,\n//     title: game.name,\n//     screenshots: [\n//         ...game.short_screenshots.slice(0, 3).map(screenshot => screenshot.image)\n//     ],\n//     hints: {\n//         genre: game.genres[game.genres.length-1].name,\n//         year: game.released,\n//     }\n// })","map":{"version":3,"sources":["/mnt/2E8A50178A4FDA4B/Web Development/Websites/gamergeek/gamergeek-nextjs/redux/reducers.js"],"names":["combineReducers","actions","games","source","pickRandomGame","game_database","results","map","game","id","console","log","game_status","state","action","type","START_GAME","STOP_GAME","random_game","GENERATE_GAME"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AACA,SAASC,KAAK,IAAIC,MAAlB,QAAgC,iBAAhC;AACA,SAASC,cAAT,QAA+B,iBAA/B;;AAEA,IAAMC,aAAa,GAAG,mBAAIF,MAAM,CAACG,OAAX,EAAoBC,GAApB,CAAwB,UAAAC,IAAI;AAAA,SAAIA,IAAI,GAAG;AACzDC,IAAAA,EAAE,EAAED,IAAI,CAACC;AADgD,GAAX;AAAA,CAA5B,CAAtB;;AAIAC,OAAO,CAACC,GAAR,CAAYN,aAAZ;;AAEA,IAAMO,WAAW,GAAG,SAAdA,WAAc;AAAA,MAACC,KAAD,uEAAS,KAAT;AAAA,MAAgBC,MAAhB;AAAA,SAA2BA,MAAM,CAACC,IAAP,KAAgBd,OAAO,CAACe,UAAxB,GAAqC,IAArC,GAA4CF,MAAM,CAACC,IAAP,KAAgBd,OAAO,CAACgB,SAAxB,GAAoC,KAApC,GAA4CJ,KAAnH;AAAA,CAApB;;AAEA,IAAMK,WAAW,GAAG,SAAdA,WAAc,GAAwB;AAAA,MAAvBL,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACxC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKd,OAAO,CAACe,UAAb;AAAyB,SAAKf,OAAO,CAACkB,aAAb;AAA4B;AACjD,eAAOf,cAAc,CAACC,aAAD,CAArB;AACH;;AACD;AAAS,aAAOQ,KAAP;AAJb;AAMH,CAPD;;AASA,eAAeb,eAAe,CAAC;AAC7BY,EAAAA,WAAW,EAAXA,WAD6B;AAE7BM,EAAAA,WAAW,EAAXA;AAF6B,CAAD,CAA9B,C,CAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { combineReducers } from \"redux\"\nimport * as actions from \"./actions\"\nimport { games as source } from \"../global/games\"\nimport { pickRandomGame } from \"../global/fetch\"\n\nconst game_database = [...source.results].map(game => game = {\n    id: game.id,\n})\n\nconsole.log(game_database)\n\nconst game_status = (state = false, action) => action.type === actions.START_GAME ? true : action.type === actions.STOP_GAME ? false : state\n\nconst random_game = (state = \"\", action) => {\n    switch(action.type) {\n        case actions.START_GAME: case actions.GENERATE_GAME: {\n            return pickRandomGame(game_database)\n        }\n        default: return state\n    } \n}\n\nexport default combineReducers({\n  game_status,\n  random_game,\n})\n\n\n\n\n\n\n\n\n\n// const game_database = [...source.results].map((game,i) => game = {\n//     id: game.id,\n//     title: game.name,\n//     screenshots: [\n//         ...game.short_screenshots.slice(0, 3).map(screenshot => screenshot.image)\n//     ],\n//     hints: {\n//         genre: game.genres[game.genres.length-1].name,\n//         year: game.released,\n//     }\n// })"]},"metadata":{},"sourceType":"module"}