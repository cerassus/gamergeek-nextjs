{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from \"redux\";\nimport * as actions from \"./actions\";\nvar START_GAME = \"START_GAME\";\nvar RESUME_GAME = \"RESUME_GAME\";\nvar END_GAME = \"END_GAME\";\nvar SHOW_RANDOM_GAME = \"SHOW_RANDOM_GAME\";\nvar NEW_ANSWER = \"NEW_ANSWER\";\nvar CLEAR_USER_SCORE = \"CLEAR_USER_SCORE\";\nvar START_LOADING = \"START_LOADING\";\nvar SHOW_HINT = \"SHOW_HINT\";\nvar NEW_GAME_DATABASE = \"NEW_GAME_DATABASE\";\nvar REMOVE_ITEM = \"REMOVE_ITEM\";\nvar SHOW_POPUP = \"SHOW_POPUP\";\nvar SET_HINT_COUNTER = \"SET_HINT_COUNTER\";\nvar TEST = \"TEST\";\n\nvar test = function test() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TEST:\n      {\n        console.log(action.payload);\n        return action.payload;\n      }\n\n    default:\n      return state;\n  }\n};\n\nvar game_database = function game_database() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case NEW_GAME_DATABASE:\n      return action.database;\n\n    case REMOVE_ITEM:\n      return _toConsumableArray(state.filter(function (x, i) {\n        return i !== action.index && x;\n      }));\n\n    case END_GAME:\n      return [];\n\n    default:\n      return state;\n  }\n};\n\nvar random_game = function random_game() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SHOW_RANDOM_GAME:\n      return \"\" || action.game;\n\n    case CLEAR_USER_SCORE:\n      return \"\";\n\n    default:\n      return state;\n  }\n};\n\nvar user_score = function user_score() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case NEW_ANSWER:\n      {\n        console.log([].concat(_toConsumableArray(state), [action.answer]));\n        return [].concat(_toConsumableArray(state), [action.answer]);\n      }\n\n    case CLEAR_USER_SCORE:\n      return [];\n\n    default:\n      return state;\n  }\n};\n\nvar hints_array = function hints_array() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SHOW_HINT:\n      {\n        console.log([].concat(_toConsumableArray(state), [action.hint]));\n        return [].concat(_toConsumableArray(state), [action.hint]);\n      }\n\n    case START_LOADING:\n    case END_GAME:\n      return [];\n\n    default:\n      return state;\n  }\n};\n\nvar popup_to_show = function popup_to_show() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return action.type === SHOW_POPUP ? action.popup : state;\n};\n\nvar hint_counter = function hint_counter() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_HINT_COUNTER:\n      return state + 1;\n\n    case START_LOADING:\n    case CLEAR_USER_SCORE:\n      return 0;\n\n    default:\n      return state;\n  }\n};\n\nvar game_status = function game_status() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isStarted: false,\n    isLoading: false\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case START_GAME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isStarted: true\n      });\n\n    case START_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: true\n      });\n\n    case RESUME_GAME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false\n      });\n\n    case END_GAME:\n      return {\n        isLoading: false,\n        isStarted: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  user_score: user_score,\n  hints_array: hints_array,\n  game_status: game_status,\n  game_database: game_database,\n  popup_to_show: popup_to_show,\n  hint_counter: hint_counter,\n  test: test,\n  random_game: random_game\n});","map":null,"metadata":{},"sourceType":"module"}