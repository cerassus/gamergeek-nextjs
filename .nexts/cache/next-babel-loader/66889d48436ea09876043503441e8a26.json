{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport styled from \"styled-components\";\nconst HeaderContainer = styled.header`\n    display: flex;\n    align-items: baseline;\n    padding: 3vw;\n    @media (max-width: 1000px) {\n        flex-direction: column;\n    }\n    `;\nconst MainContainer = styled.main`\n    width: min(120rem, 100%);\n    margin: 0 auto;\n    `;\nconst StandardContainer = styled.div`\n    ${props => props.type === \"inline\" && `\n        &, & > * {\n            display: inline-block;\n        }\n    `};\n    ${props => props.width && `\n        width: ${props.width}\n    `};\n    ${props => props.height && `\n        height: ${props.height}\n    `};\n    ${props => props.flex && `\n        display: flex;\n        flex-direction: ${props.flex};\n    `};\n    ${props => props.leaderboard && `\n        background: rgba(39, 39, 39, 0.67);\n        box-shadow: 4px 4px 10px rgba(255,255,255,0.25);\n        border-radius: 3px;\n        border-bottom: 2px solid rgb(255 255 255 / 34%);\n        border-right: 2px solid rgb(255 255 255 / 34%);\n        border-left: 2px solid rgb(255 255 255 / 20%);\n        border-top: 2px solid rgb(255 255 255 / 20%);\n        padding: 3vw;\n    `};\n    ${props => props.help && `\n        background: rgba(39, 39, 39, 0.55);\n    `};\n    ${props => props.type !== \"inline\" && `\n        margin: 0 auto;\n    `};\n    `;\nexport default function Container(_ref) {\n  let {\n    type\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"type\"]);\n\n  return type === \"header\" && /*#__PURE__*/_jsx(HeaderContainer, _objectSpread({}, rest)) || (type === \"main\" ? /*#__PURE__*/_jsx(MainContainer, _objectSpread({}, rest)) : /*#__PURE__*/_jsx(StandardContainer, _objectSpread({\n    type: type\n  }, rest)));\n}","map":null,"metadata":{},"sourceType":"module"}