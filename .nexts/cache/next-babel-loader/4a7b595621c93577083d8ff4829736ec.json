{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/cerassus/Websites/gamergeek-nextjs/components/styled-components/MainCounter.js\";\nimport styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { countdown } from \"../../redux/actions\";\nconst CounterContainer = styled.div`\n  text-transform: lowercase;\n  font-weight: 900;\n  font-size: 3rem;\n  display: inline-block;\n`;\nexport default function MainCounter({\n  is_game_started,\n  is_game_loading,\n  game_counter\n}) {\n  const {\n    0: counter,\n    1: setCounter\n  } = useState(100);\n  const {\n    0: didMount,\n    1: setDidMount\n  } = useState(false);\n  useEffect(() => {\n    // if(didMount) {\n    //   const startCounting = setInterval(function() {\n    //     setCounter(counter => counter - 1)\n    //     console.log('decreasing counter')\n    //   }, 1000)\n    //   const stopCounting = () => {\n    //     clearInterval(startCounting)\n    //     console.log('clearing interval')\n    //   }\n    //   stopCounting()\n    //   setCounter(60)\n    // }\n    useEffect(() => {\n      didMount && console.log('loading status'); // didMount && (is_game_loading ? stopCounting() : startCounting())\n    }, [is_game_loading]);\n  }, [is_game_started]);\n  useEffect(() => {\n    setDidMount(true);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CounterContainer, {\n    children: counter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n} // export default function MainCounter({game_status, main_counter}) {\n//   React.useEffect(() => {\n//     if(game_status.isStarted) {\n//       let startingValue = 60\n//       const DIV = document.getElementById('counter')\n//       const task = () => {\n//         startingValue--\n//         DIV.innerText = startingValue\n//         startingValue === 0 && stopCounting()\n//       }\n//       const runCounting = setInterval(task, 1000)\n//       const stopCounting = () => clearInterval(runCounting)\n//     }\n//   },[game_status.isStarted])\n//   return (\n//     <CounterContainer>\n//       <div id='counter'></div>\n//     </CounterContainer>\n//   )\n// }\n// React.useEffect(() => {\n//   game_status.isStarted ? \n//   startTimer()\n//   : console.log('game over')\n// }, [game_status.isStarted])\n// React.useEffect(() => {\n//   game_status.isRunning ? console.log('running') : game_status.isLoading && console.log('loading') \n// }, [game_status.isRunning])","map":{"version":3,"sources":["/home/cerassus/Websites/gamergeek-nextjs/components/styled-components/MainCounter.js"],"names":["styled","useState","useEffect","moment","countdown","CounterContainer","div","MainCounter","is_game_started","is_game_loading","game_counter","counter","setCounter","didMount","setDidMount","console","log"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,MAAMC,gBAAgB,GAAGL,MAAM,CAACM,GAAI;AACpC;AACA;AACA;AACA;AACA,CALA;AAOA,eAAe,SAASC,WAAT,CAAqB;AAACC,EAAAA,eAAD;AAAkBC,EAAAA,eAAlB;AAAmCC,EAAAA;AAAnC,CAArB,EAAuE;AACpF,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAC,GAAD,CAAtC;AACA,QAAM;AAAA,OAACY,QAAD;AAAA,OAAWC;AAAX,MAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AAIAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,IAAAA,SAAS,CAAC,MAAM;AACdW,MAAAA,QAAQ,IAAIE,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAZ,CADc,CAEd;AACD,KAHQ,EAGN,CAACP,eAAD,CAHM,CAAT;AAID,GAjBQ,EAiBN,CAACD,eAAD,CAjBM,CAAT;AAmBAN,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE,QAAC,gBAAD;AAAA,cACGH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import styled from \"styled-components\";\nimport { useState, useEffect } from \"react\"\nimport moment from \"moment\"\nimport { countdown } from \"../../redux/actions\"\n\nconst CounterContainer = styled.div`\n  text-transform: lowercase;\n  font-weight: 900;\n  font-size: 3rem;\n  display: inline-block;\n`;\n\nexport default function MainCounter({is_game_started, is_game_loading, game_counter}) {\n  const [counter, setCounter] = useState(100)\n  const [didMount, setDidMount] = useState(false)\n\n\n\n  useEffect(() => {\n    // if(didMount) {\n    //   const startCounting = setInterval(function() {\n    //     setCounter(counter => counter - 1)\n    //     console.log('decreasing counter')\n    //   }, 1000)\n    //   const stopCounting = () => {\n    //     clearInterval(startCounting)\n    //     console.log('clearing interval')\n    //   }\n    //   stopCounting()\n    //   setCounter(60)\n    // }\n    useEffect(() => {\n      didMount && console.log('loading status')\n      // didMount && (is_game_loading ? stopCounting() : startCounting())\n    }, [is_game_loading])\n  }, [is_game_started])\n\n  useEffect(() => {\n    setDidMount(true)\n  }, [])\n  return (\n    <CounterContainer>\n      {counter}\n    </CounterContainer>\n  )\n}\n\n\n// export default function MainCounter({game_status, main_counter}) {\n//   React.useEffect(() => {\n//     if(game_status.isStarted) {\n//       let startingValue = 60\n//       const DIV = document.getElementById('counter')\n//       const task = () => {\n//         startingValue--\n//         DIV.innerText = startingValue\n//         startingValue === 0 && stopCounting()\n//       }\n//       const runCounting = setInterval(task, 1000)\n//       const stopCounting = () => clearInterval(runCounting)\n//     }\n//   },[game_status.isStarted])\n//   return (\n//     <CounterContainer>\n//       <div id='counter'></div>\n//     </CounterContainer>\n//   )\n// }\n\n\n\n\n\n\n\n// React.useEffect(() => {\n//   game_status.isStarted ? \n//   startTimer()\n//   : console.log('game over')\n// }, [game_status.isStarted])\n// React.useEffect(() => {\n//   game_status.isRunning ? console.log('running') : game_status.isLoading && console.log('loading') \n// }, [game_status.isRunning])"]},"metadata":{},"sourceType":"module"}